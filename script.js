// üî• –¢–í–û–ò –ö–õ–Æ–ß–ò FIREBASE
const firebaseConfig = {
  apiKey: "AIzaSyB4bD8UAu0Aj5IRK5H-uZg6kxNAIbkZc9k",
  authDomain: "bar-menu-6145c.firebaseapp.com",
  projectId: "bar-menu-6145c",
  storageBucket: "bar-menu-6145c.appspot.com",
  messagingSenderId: "493608422842",
  appId: "1:493608422842:web:3b4b6bd8a4cb681c436183"
};
// ü§ñ TELEGRAM
const TELEGRAM_BOT_TOKEN = "8326139522:AAG2fwHYd1vRPx0cUXt4ATaFYTNxmzInWJo";
const TELEGRAM_CHAT_ID = "1743362083";

// üåê WEBHOOK SERVER
// –û–ø—Ä–µ–¥–µ–ª—è–µ–º URL webhook —Å–µ—Ä–≤–µ—Ä–∞
let WEBHOOK_SERVER_URL = "http://localhost:3000"; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é localhost –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏

// –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
console.log('üîç –û—Ç–ª–∞–¥–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è URL:');
console.log('- hostname:', window.location.hostname);
console.log('- protocol:', window.location.protocol);
console.log('- href:', window.location.href);

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω—ã –ª–∏ –º—ã –ª–æ–∫–∞–ª—å–Ω–æ (–¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {
  WEBHOOK_SERVER_URL = "http://localhost:3000";
  console.log('üîß –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏: –∏—Å–ø–æ–ª—å–∑—É–µ–º localhost');
} else {
  // –í –ø—Ä–æ–¥–∞–∫—à–Ω–µ –ø—ã—Ç–∞–µ–º—Å—è –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å Railway URL –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
  const savedUrl = localStorage.getItem('webhook_server_url');
  console.log('üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π URL –≤ localStorage:', savedUrl);
  
  if (savedUrl) {
    WEBHOOK_SERVER_URL = savedUrl;
    console.log('üíæ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π URL:', WEBHOOK_SERVER_URL);
  } else {
    // –ü—ã—Ç–∞–µ–º—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å Railway URL
    const currentHost = window.location.hostname;
    console.log('üåê –¢–µ–∫—É—â–∏–π —Ö–æ—Å—Ç:', currentHost);
    
    if (currentHost.includes('railway.app')) {
      WEBHOOK_SERVER_URL = `https://${currentHost}`;
      console.log('üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω Railway URL:', WEBHOOK_SERVER_URL);
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–ª—è –±—É–¥—É—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
      localStorage.setItem('webhook_server_url', WEBHOOK_SERVER_URL);
    } else if (currentHost.includes('github.io')) {
      // –î–ª—è GitHub Pages –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π Railway URL
      WEBHOOK_SERVER_URL = "https://lucid-cat-production.up.railway.app";
      console.log('üåê GitHub Pages –æ–±–Ω–∞—Ä—É–∂–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π Railway URL:', WEBHOOK_SERVER_URL);
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–ª—è –±—É–¥—É—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
      localStorage.setItem('webhook_server_url', WEBHOOK_SERVER_URL);
    } else {
      // –î–ª—è –ª–æ–∫–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –∏ –¥—Ä—É–≥–∏—Ö —Å–ª—É—á–∞–µ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π Railway URL
      WEBHOOK_SERVER_URL = "https://lucid-cat-production.up.railway.app";
      console.log('üöÄ –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π Railway URL:', WEBHOOK_SERVER_URL);
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–ª—è –±—É–¥—É—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
      localStorage.setItem('webhook_server_url', WEBHOOK_SERVER_URL);
    }
  }
}

console.log('üéØ –§–∏–Ω–∞–ª—å–Ω—ã–π URL webhook —Å–µ—Ä–≤–µ—Ä–∞:', WEBHOOK_SERVER_URL);

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è URL webhook —Å–µ—Ä–≤–µ—Ä–∞
function updateWebhookServerUrl(newUrl) {
  WEBHOOK_SERVER_URL = newUrl;
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º URL –≤ localStorage –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –º–µ–∂–¥—É –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞–º–∏
  localStorage.setItem('webhook_server_url', newUrl);
  console.log('üîÑ URL webhook —Å–µ—Ä–≤–µ—Ä–∞ –æ–±–Ω–æ–≤–ª–µ–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω:', WEBHOOK_SERVER_URL);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ URL
function getWebhookServerUrl() {
  return WEBHOOK_SERVER_URL;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±—Ä–æ—Å–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ webhook —Å–µ—Ä–≤–µ—Ä–∞
function resetWebhookServerUrl() {
  localStorage.removeItem('webhook_server_url');
  // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
  location.reload();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Railway URL
function forceRailwayUrl() {
  const railwayUrl = prompt('üåê –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Railway URL\n\n–í–≤–µ–¥–∏—Ç–µ –≤–∞—à Railway URL (–Ω–∞–ø—Ä–∏–º–µ—Ä: https://lucid-cat-production.up.railway.app):');
  
  if (railwayUrl && railwayUrl.startsWith('https://')) {
    updateWebhookServerUrl(railwayUrl);
    showSuccess(`‚úÖ Railway URL –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: ${railwayUrl}`);
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏—Å—Ç–µ–º—É
    setTimeout(async () => {
      const statusData = await monitorSystem();
      displaySystemStatus(statusData);
    }, 1000);
  } else if (railwayUrl) {
    showError('‚ùå URL –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å https://');
  }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase
console.log('üî• –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase...');
const app = firebase.initializeApp(firebaseConfig);
const auth = firebase.auth();
const db = firebase.firestore();
const storage = firebase.storage();
console.log('‚úÖ Firebase –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let audioContextEnabled = false; // –§–ª–∞–≥ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∑–≤—É–∫–∞
let queueInfo = { totalOrders: 0, orders: [] }; // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—á–µ—Ä–µ–¥–∏
let lastOrderQueuePositions = new Map(); // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–π –≤ –æ—á–µ—Ä–µ–¥–∏ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π

// === –§–£–ù–ö–¶–ò–ò –î–õ–Ø –†–ê–ë–û–¢–´ –° –û–ß–ï–†–ï–î–¨–Æ ===

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–∑–∏—Ü–∏–∏ –≤ –æ—á–µ—Ä–µ–¥–∏
async function getNextQueuePosition() {
  try {
    // –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤
    const activeOrdersSnapshot = await db.collection('orders')
      .where('status', 'in', ['pending', 'confirmed', 'preparing', 'ready'])
      .get();
    
    return activeOrdersSnapshot.size + 1;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–∏ –≤ –æ—á–µ—Ä–µ–¥–∏:', error);
    // Fallback: –∏—Å–ø–æ–ª—å–∑—É–µ–º timestamp
    return Date.now();
  }
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ—á–µ—Ä–µ–¥–∏
async function getQueueInfo() {
  try {
    const response = await fetch(`${WEBHOOK_SERVER_URL}/queue-info`);
    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }
    const data = await response.json();
    return data.queueInfo;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ—á–µ—Ä–µ–¥–∏:', error);
    return { totalOrders: 0, orders: [] };
  }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–∏ –≤ –æ—á–µ—Ä–µ–¥–∏
function updateQueueDisplay() {
  // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞–∫–∞–∑–æ–≤
  const ordersList = document.getElementById('ordersList');
  if (ordersList) {
    // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–π
    if (auth.currentUser) {
      loadOrderHistory(auth.currentUser.uid);
    }
  }
  
  // –û–±–Ω–æ–≤–ª—è–µ–º –∞–¥–º–∏–Ω—Å–∫–∏–π —Å–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤
  const adminOrdersList = document.getElementById('adminOrdersList');
  if (adminOrdersList) {
    loadAdminOrders();
  }
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏ –≤ –æ—á–µ—Ä–µ–¥–∏ –¥–ª—è –∑–∞–∫–∞–∑–∞
function displayQueuePosition(orderData, container) {
  if (!orderData.queuePosition || !['confirmed', 'preparing', 'ready'].includes(orderData.status)) {
    return;
  }
  
  const queueElement = document.createElement('div');
  queueElement.className = 'queue-position';
  
  // –í—ã—á–∏—Å–ª—è–µ–º –ø—Ä–∏–º–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è
  const estimatedMinutes = orderData.queuePosition * 3; // –ü—Ä–∏–º–µ—Ä–Ω–æ 3 –º–∏–Ω—É—Ç—ã –Ω–∞ –∑–∞–∫–∞–∑
  const timeText = estimatedMinutes > 0 ? ` (~${estimatedMinutes} –º–∏–Ω)` : '';
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –æ—á–µ—Ä–µ–¥–∏
  let queueStatus = '';
  let statusIcon = '';
  if (orderData.queuePosition === 1) {
    queueStatus = '–°–ª–µ–¥—É—é—â–∏–π –≤ –æ—á–µ—Ä–µ–¥–∏';
    statusIcon = 'üéØ';
  } else if (orderData.queuePosition <= 3) {
    queueStatus = '–°–∫–æ—Ä–æ –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤';
    statusIcon = '‚è∞';
  } else {
    queueStatus = '–í –æ—á–µ—Ä–µ–¥–∏';
    statusIcon = 'üìã';
  }
  
  queueElement.innerHTML = `
    <div class="queue-info">
      <i class="fas fa-list-ol"></i>
      <span>–ü–æ–∑–∏—Ü–∏—è –≤ –æ—á–µ—Ä–µ–¥–∏: #${orderData.queuePosition}</span>
      <span class="queue-status">${statusIcon} ${queueStatus}</span>
    </div>
    <div class="queue-progress">
      <div class="progress-bar">
        <div class="progress-fill" style="width: ${(orderData.queuePosition <= 1 ? 100 : Math.max(10, 100 - (orderData.queuePosition - 1) * 15))}%"></div>
      </div>
      <div class="queue-time">${timeText}</div>
    </div>
  `;
  
  container.appendChild(queueElement);
}

// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–º–µ–Ω–µ –ø–æ–∑–∏—Ü–∏–∏ –≤ –æ—á–µ—Ä–µ–¥–∏
function showQueuePositionUpdateNotification(orderData, oldPosition, newPosition) {
  console.log('üéØ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–∏ –≤ –æ—á–µ—Ä–µ–¥–∏:', {
    orderName: orderData.name,
    oldPosition,
    newPosition
  });
  
  // –°–æ–∑–¥–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–∏ –≤ –æ—á–µ—Ä–µ–¥–∏
  const notification = document.createElement('div');
  notification.className = 'queue-notification';
  notification.innerHTML = `
    <div class="queue-notification-content">
      <div class="queue-notification-icon">üéØ</div>
      <div class="queue-notification-text">
        <div class="queue-notification-title">–í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–æ–¥–≤–∏–Ω—É–ª—Å—è –≤ –æ—á–µ—Ä–µ–¥–∏!</div>
        <div class="queue-notification-details">
          ${orderData.name} - —Ç–µ–ø–µ—Ä—å #${newPosition} –≤ –æ—á–µ—Ä–µ–¥–∏
        </div>
      </div>
    </div>
  `;
  
  // –î–æ–±–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
  document.body.appendChild(notification);
  
  // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
  setTimeout(() => {
    notification.classList.add('show');
  }, 100);
  
  // –£–¥–∞–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
  setTimeout(() => {
    notification.classList.add('hide');
    setTimeout(() => {
      if (notification.parentNode) {
        notification.parentNode.removeChild(notification);
      }
    }, 300);
  }, 5000);
  
  // –ó–≤—É–∫–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
  if (audioContextEnabled) {
    playNotificationSound('queue');
  }
  
  // –í–∏–±—Ä–∞—Ü–∏—è
  if (navigator.vibrate) {
    navigator.vibrate([200, 100, 200]);
  }
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
window.testBeautifulNotifications = function() {
  console.log('üé® –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫—Ä–∞—Å–∏–≤—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Å —ç–º–æ–¥–∑–∏...');
  
  const currentUser = auth.currentUser;
  if (!currentUser) {
    console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω. –í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.');
    return;
  }
  
  const testOrders = [
    { id: 'test1', name: '–ú–æ—Ö–∏—Ç–æ', user: '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤', userId: currentUser.uid, status: 'confirmed' },
    { id: 'test2', name: '–ö–æ—Å–º–æ–ø–æ–ª–∏—Ç–µ–Ω', user: '–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞', userId: currentUser.uid, status: 'preparing' },
    { id: 'test3', name: '–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞', user: '–ê–ª–µ–∫—Å–µ–π –ö–æ–∑–ª–æ–≤', userId: currentUser.uid, status: 'ready' },
    { id: 'test4', name: '–ü–∏–Ω–∞ –ö–æ–ª–∞–¥–∞', user: '–ï–ª–µ–Ω–∞ –í–æ–ª–∫–æ–≤–∞', userId: currentUser.uid, status: 'completed' },
    { id: 'test5', name: '–ë–µ–ª—ã–π –†—É—Å—Å–∫–∏–π', user: '–î–º–∏—Ç—Ä–∏–π –°–æ–∫–æ–ª–æ–≤', userId: currentUser.uid, status: 'cancelled' }
  ];
  
  console.log('üì§ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ —Ç–∏–ø—ã –∫—Ä–∞—Å–∏–≤—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Å —ç–º–æ–¥–∑–∏...');
  
  testOrders.forEach((order, index) => {
    setTimeout(() => {
      showStatusUpdateNotification(order, order.status);
      console.log(`‚úÖ –ü–æ–∫–∞–∑–∞–Ω–æ –∫—Ä–∞—Å–∏–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: ${order.name} - ${order.status}`);
    }, index * 4000); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–∂–¥–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 4 —Å–µ–∫—É–Ω–¥—ã
  });
  
  console.log('üí° –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞:');
  console.log('   - –≠–º–æ–¥–∑–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ (‚úÖüë®‚Äçüç≥üç∏üéâ‚ùå)');
  console.log('   - –†–∞–∑–Ω—ã–µ —Ü–≤–µ—Ç–∞ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å—Ç–∞—Ç—É—Å–æ–≤');
  console.log('   - –ö—Ä–∞—Å–∏–≤—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –∏ –ø–µ—Ä–µ—Ö–æ–¥—ã');
  console.log('   - –†–∞–∑–Ω—ã–µ –∑–≤—É–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞');
  console.log('   - –†–∞–∑–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –≤–∏–±—Ä–∞—Ü–∏–∏');
  console.log('   - –£–ª—É—á—à–µ–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω –∏ —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–∫—É');
};

// –î—Ä—É–≥–∏–µ —Ç–µ—Å—Ç–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
window.testAudioAndVibration = function() {
  console.log('üîä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–≤—É–∫–∞ –∏ –≤–∏–±—Ä–∞—Ü–∏–∏...');
  if (navigator.vibrate) {
    navigator.vibrate([200, 100, 200]);
    console.log('üì≥ –í–∏–±—Ä–∞—Ü–∏—è –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞');
  }
  console.log('üí° –ó–≤—É–∫ –±—É–¥–µ—Ç –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏');
};

window.testEmojiNotifications = function() {
  console.log('üòÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–º–æ–¥–∑–∏ –≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è—Ö...');
  const currentUser = auth.currentUser;
  if (!currentUser) {
    console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω. –í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.');
    return;
  }
  
  const testOrder = { id: 'emoji-test', name: '–¢–µ—Å—Ç–æ–≤—ã–π –∫–æ–∫—Ç–µ–π–ª—å', userId: currentUser.uid };
  showStatusUpdateNotification(testOrder, 'confirmed');
  console.log('‚úÖ –ü–æ–∫–∞–∑–∞–Ω–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å —ç–º–æ–¥–∑–∏');
};

window.testEmojiDisplay = function() {
  console.log('üé≠ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–º–æ–¥–∑–∏...');
  const emojis = ['‚úÖ', 'üë®‚Äçüç≥', 'üç∏', 'üéâ', '‚ùå'];
  emojis.forEach((emoji, index) => {
    setTimeout(() => {
      console.log(`–≠–º–æ–¥–∑–∏ ${index + 1}: ${emoji}`);
    }, index * 500);
  });
};

// –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –æ—á–µ—Ä–µ–¥–∏
window.testQueueSystem = function() {
  console.log('üéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –æ—á–µ—Ä–µ–¥–∏...');
  
  const currentUser = auth.currentUser;
  if (!currentUser) {
    console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω. –í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.');
    return;
  }
  
  // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –æ—á–µ—Ä–µ–¥–∏
  const testOrders = [
    { name: '–ú–æ—Ö–∏—Ç–æ', user: '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤', queuePosition: 1, status: 'confirmed' },
    { name: '–ö–æ—Å–º–æ–ø–æ–ª–∏—Ç–µ–Ω', user: '–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞', queuePosition: 2, status: 'preparing' },
    { name: '–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞', user: '–ê–ª–µ–∫—Å–µ–π –ö–æ–∑–ª–æ–≤', queuePosition: 3, status: 'ready' },
    { name: '–ü–∏–Ω–∞ –ö–æ–ª–∞–¥–∞', user: '–ï–ª–µ–Ω–∞ –í–æ–ª–∫–æ–≤–∞', queuePosition: 4, status: 'confirmed' }
  ];
  
  console.log('üìã –¢–µ—Å—Ç–æ–≤–∞—è –æ—á–µ—Ä–µ–¥—å –∑–∞–∫–∞–∑–æ–≤:');
  testOrders.forEach((order, index) => {
    console.log(`#${order.queuePosition} - ${order.name} (${order.user}) - ${order.status}`);
  });
  
  // –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–∏ –≤ –æ—á–µ—Ä–µ–¥–∏
  console.log('üîî –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–∏ –≤ –æ—á–µ—Ä–µ–¥–∏...');
  
  // –°–∏–º—É–ª–∏—Ä—É–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ —Å –ø–æ–∑–∏—Ü–∏–µ–π –≤ –æ—á–µ—Ä–µ–¥–∏
  setTimeout(() => {
    const orderData = { 
      name: '–ú–æ—Ö–∏—Ç–æ', 
      user: '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤', 
      userId: currentUser.uid,
      queuePosition: 1 
    };
    showStatusUpdateNotification(orderData, 'confirmed');
    console.log('‚úÖ –ü–æ–∫–∞–∑–∞–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: –ú–æ—Ö–∏—Ç–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω —Å –ø–æ–∑–∏—Ü–∏–µ–π #1');
  }, 1000);
  
  // –°–∏–º—É–ª–∏—Ä—É–µ–º –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ "–ü–∏–Ω–∞ –ö–æ–ª–∞–¥–∞" —Å –ø–æ–∑–∏—Ü–∏–∏ 4 –Ω–∞ –ø–æ–∑–∏—Ü–∏—é 3
  setTimeout(() => {
    const orderData = { name: '–ü–∏–Ω–∞ –ö–æ–ª–∞–¥–∞', user: '–ï–ª–µ–Ω–∞ –í–æ–ª–∫–æ–≤–∞' };
    showQueuePositionUpdateNotification(orderData, 4, 3);
    console.log('‚úÖ –ü–æ–∫–∞–∑–∞–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: –ü–∏–Ω–∞ –ö–æ–ª–∞–¥–∞ –ø—Ä–æ–¥–≤–∏–Ω—É–ª–∞—Å—å —Å #4 –Ω–∞ #3');
  }, 3000);
  
  // –°–∏–º—É–ª–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞ —Å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –ø–æ–∑–∏—Ü–∏–∏
  setTimeout(() => {
    const orderData = { 
      name: '–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞', 
      user: '–ê–ª–µ–∫—Å–µ–π –ö–æ–∑–ª–æ–≤', 
      userId: currentUser.uid,
      queuePosition: 2 
    };
    showStatusUpdateNotification(orderData, 'preparing');
    console.log('‚úÖ –ü–æ–∫–∞–∑–∞–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞ –≥–æ—Ç–æ–≤–∏—Ç—Å—è —Å –ø–æ–∑–∏—Ü–∏–µ–π #2');
  }, 5000);
  
  // –°–∏–º—É–ª–∏—Ä—É–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
  setTimeout(() => {
    const orderData = { 
      name: '–ú–æ—Ö–∏—Ç–æ', 
      user: '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤', 
      userId: currentUser.uid
    };
    showStatusUpdateNotification(orderData, 'completed');
    console.log('‚úÖ –ü–æ–∫–∞–∑–∞–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: –ú–æ—Ö–∏—Ç–æ –∑–∞–≤–µ—Ä—à–µ–Ω');
  }, 7000);
  
  console.log('üí° –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞:');
  console.log('   - –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏ –≤ –æ—á–µ—Ä–µ–¥–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∑–∞–∫–∞–∑–∞');
  console.log('   - –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–∏ –≤ –æ—á–µ—Ä–µ–¥–∏');
  console.log('   - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–π –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–æ–≤');
  console.log('   - –í–∏–∑—É–∞–ª—å–Ω—ã–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã —Å—Ç–∞—Ç—É—Å–∞ –æ—á–µ—Ä–µ–¥–∏');
  console.log('   - –°–æ—Ä—Ç–∏—Ä–æ–≤–∫—É –∑–∞–∫–∞–∑–æ–≤ –ø–æ –ø–æ–∑–∏—Ü–∏–∏ –≤ –æ—á–µ—Ä–µ–¥–∏ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏');
};

window.testConfirmedNotification = function() {
  console.log('‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞...');
  
  const currentUser = auth.currentUser;
  if (!currentUser) {
    console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω. –í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.');
    return;
  }
  
  const testOrder = { 
    id: 'confirmed-test', 
    name: '–ú–æ—Ö–∏—Ç–æ', 
    userId: currentUser.uid 
  };
  
  console.log('üì§ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ...');
  showStatusUpdateNotification(testOrder, 'confirmed');
  
  if (!audioContextEnabled) {
    console.log('üí° –ö–ª–∏–∫–Ω–∏—Ç–µ –≤ –ª—é–±–æ–º –º–µ—Å—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∑–≤—É–∫–∞');
  }
};

// DOM —ç–ª–µ–º–µ–Ω—Ç—ã
console.log('üîç –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è DOM —ç–ª–µ–º–µ–Ω—Ç–æ–≤...');
const themeToggle = document.getElementById('themeToggle');
const loginBtn = document.getElementById('loginBtn');
const registerBtn = document.getElementById('registerBtn');
const logoutBtn = document.getElementById('logoutBtn');
const myBillBtn = document.getElementById('myBillBtn');
const billHistoryBtn = document.getElementById('billHistoryBtn');
const adminBtn = document.getElementById('adminBtn');
const userName = document.getElementById('userName');
const authModal = document.getElementById('authModal');
const registerModal = document.getElementById('registerModal');
const successModal = document.getElementById('successModal');
const errorModal = document.getElementById('errorModal');
const billHistoryModal = document.getElementById('billHistoryModal');
const notificationModal = document.getElementById('notificationModal');
const adminPanel = document.getElementById('adminPanel');
const cocktailFormModal = document.getElementById('cocktailFormModal');
const statusModal = document.getElementById('statusModal');
const authForm = document.getElementById('authForm');
const registerForm = document.getElementById('registerForm');
const toggleForm = document.getElementById('toggleForm');
const switchToRegister = document.getElementById('switchToRegister');
const closeBtns = document.querySelectorAll('.close');
const orderButtons = document.querySelectorAll('.order-btn');
const orderModal = document.getElementById('orderModal');
const orderSummary = document.getElementById('orderSummary');
const confirmOrderBtn = document.getElementById('confirmOrder');
const ordersList = document.getElementById('ordersList');
const closeNotification = document.getElementById('closeNotification');
const closeSuccess = document.getElementById('closeSuccess');
const closeError = document.getElementById('closeError');
const champagneAnimation = document.getElementById('champagneAnimation');
const cocktailsGrid = document.querySelector('.cocktails-grid');
const errorMessage = document.getElementById('errorMessage');
const addCocktailBtn = document.getElementById('addCocktailBtn');
const cocktailForm = document.getElementById('cocktailForm');
const cocktailsList = document.getElementById('cocktailsList');
const adminOrdersList = document.getElementById('adminOrdersList');
const stoplistCocktails = document.getElementById('stoplistCocktails');
const addToStoplist = document.getElementById('addToStoplist');
const currentStoplist = document.getElementById('currentStoplist');
const stopReason = document.getElementById('stopReason');
const tabBtns = document.querySelectorAll('.tab-btn');
const tabContents = document.querySelectorAll('.tab-content');
const statusButtons = document.querySelectorAll('.status-btn');
const statusOrderInfo = document.getElementById('statusOrderInfo');
const checkSystemBtn = document.getElementById('checkSystemBtn');
const testWebhookBtn = document.getElementById('testWebhookBtn');
const cleanupOrdersBtn = document.getElementById('cleanupOrdersBtn');
const systemStatus = document.getElementById('systemStatus');
const setupWebhookBtn = document.getElementById('setupWebhookBtn');
const deleteWebhookBtn = document.getElementById('deleteWebhookBtn');
const getWebhookInfoBtn = document.getElementById('getWebhookInfoBtn');
const sendTestMessageBtn = document.getElementById('sendTestMessageBtn');
const telegramStatus = document.getElementById('telegramStatus');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
console.log('üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ DOM —ç–ª–µ–º–µ–Ω—Ç–æ–≤:');
console.log('- cocktailsGrid:', cocktailsGrid ? '‚úÖ –Ω–∞–π–¥–µ–Ω' : '‚ùå –Ω–µ –Ω–∞–π–¥–µ–Ω');
console.log('- loginBtn:', loginBtn ? '‚úÖ –Ω–∞–π–¥–µ–Ω' : '‚ùå –Ω–µ –Ω–∞–π–¥–µ–Ω');
console.log('- registerBtn:', registerBtn ? '‚úÖ –Ω–∞–π–¥–µ–Ω' : '‚ùå –Ω–µ –Ω–∞–π–¥–µ–Ω');

let currentOrder = null;
let currentOrderId = null;
let isAdmin = false;
let cocktailsData = [];
let stoplistData = [];
let currentCategory = 'classic'; // –¢–µ–∫—É—â–∞—è –≤—ã–±—Ä–∞–Ω–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è
let currentAdminFilter = 'classic'; // –¢–µ–∫—É—â–∏–π —Ñ–∏–ª—å—Ç—Ä –≤ –∞–¥–º–∏–Ω–∫–µ

// –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
let scrollY = 0;

// === –§–£–ù–ö–¶–ò–ò –£–ü–†–ê–í–õ–ï–ù–ò–Ø –ú–û–î–ê–õ–¨–ù–´–ú–ò –û–ö–ù–ê–ú–ò ===

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å –±–ª–æ–∫–∏—Ä–æ–≤–∫–æ–π —Ñ–æ–Ω–∞
function openModal(modalElement) {
  if (!modalElement) {
    console.warn('–ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–∫—Ä—ã—Ç—å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ');
    return;
  }
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â—É—é –ø–æ–∑–∏—Ü–∏—é –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
  scrollY = window.scrollY;
  document.body.style.setProperty('--scroll-y', `${scrollY}px`);
  document.body.classList.add('modal-open');
  modalElement.style.display = 'block';
  
  // –î–æ–±–∞–≤–ª—è–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
  console.log('üîç –û—Ç–∫—Ä—ã—Ç–æ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ:', modalElement.id || '–±–µ–∑ ID');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function closeModal(modalElement) {
  if (!modalElement) {
    console.warn('–ü–æ–ø—ã—Ç–∫–∞ –∑–∞–∫—Ä—ã—Ç—å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ');
    return;
  }
  
  modalElement.style.display = 'none';
  document.body.classList.remove('modal-open');
  // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–∑–∏—Ü–∏—é –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
  window.scrollTo(0, scrollY);
}

// === –ö–û–ù–ï–¶ –§–£–ù–ö–¶–ò–ô –£–ü–†–ê–í–õ–ï–ù–ò–Ø –ú–û–î–ê–õ–¨–ù–´–ú–ò –û–ö–ù–ê–ú–ò ===

// –°–æ–∑–¥–∞–µ–º –º–µ—Ä—Ü–∞—é—â–∏–µ –æ–≥–æ–Ω—å–∫–∏
function createSparkles() {
  const sparklesContainer = document.querySelector('.sparkles');
  if (sparklesContainer) {
    sparklesContainer.innerHTML = '';
    for (let i = 1; i <= 30; i++) {
      const sparkle = document.createElement('div');
      sparkle.className = 'sparkle';
      sparkle.style.left = Math.random() * 100 + '%';
      sparkle.style.top = Math.random() * 100 + '%';
      sparkle.style.animationDelay = Math.random() * 4 + 's';
      sparkle.style.width = (Math.random() * 4 + 2) + 'px';
      sparkle.style.height = sparkle.style.width;
      sparkle.style.opacity = Math.random() * 0.8 + 0.2;
      sparklesContainer.appendChild(sparkle);
    }
  }
}

// –í—ã–∑—ã–≤–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –æ–≥–æ–Ω—å–∫–æ–≤
createSparkles();

// –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ç–µ–º—ã
function initThemeToggle() {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é —Ç–µ–º—É
  const savedTheme = localStorage.getItem('theme');
  if (savedTheme === 'dark') {
    document.body.classList.add('dark-theme');
    themeToggle.innerHTML = '<i class="fas fa-sun"></i>';
  } else {
    themeToggle.innerHTML = '<i class="fas fa-moon"></i>';
  }

  themeToggle.addEventListener('click', () => {
    document.body.classList.toggle('dark-theme');
    if (document.body.classList.contains('dark-theme')) {
      localStorage.setItem('theme', 'dark');
      themeToggle.innerHTML = '<i class="fas fa-sun"></i>';
    } else {
      localStorage.setItem('theme', 'light');
      themeToggle.innerHTML = '<i class="fas fa-moon"></i>';
    }
    // –ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º –æ–≥–æ–Ω—å–∫–∏ –ø—Ä–∏ —Å–º–µ–Ω–µ —Ç–µ–º—ã
    setTimeout(createSparkles, 100);
  });
}



// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
auth.onAuthStateChanged(async user => {
  if (user) {
    loginBtn.style.display = 'none';
    registerBtn.style.display = 'none';
    myBillBtn.style.display = 'inline-block';
    billHistoryBtn.style.display = 'inline-block';
    logoutBtn.style.display = 'inline-block';
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    const userDoc = await db.collection('users').doc(user.uid).get();
    if (userDoc.exists) {
      const userData = userDoc.data();
      isAdmin = userData.role === 'admin';
      if (isAdmin) {
        adminBtn.style.display = 'inline-block';
      }
    }
    // üëá –ï—Å–ª–∏ displayName –ø—É—Å—Ç ‚Äî –ø—Ä–æ–±—É–µ–º –æ–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
    if (!user.displayName) {
      await user.reload();
    }
    userName.textContent = user.displayName || "–ì–æ—Å—Ç—å";
    userName.style.display = 'block';
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π listener –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π —Å—Ç–∞—Ç—É—Å–æ–≤
    console.log('üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º listener –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', user.uid);
    initGlobalOrderStatusListener();
  } else {
    loginBtn.style.display = 'inline-block';
    registerBtn.style.display = 'inline-block';
    myBillBtn.style.display = 'none';
    billHistoryBtn.style.display = 'none';
    adminBtn.style.display = 'none';
    logoutBtn.style.display = 'none';
    userName.textContent = '';
    userName.style.display = 'none';
    isAdmin = false;
    
    // –û—Ç–∫–ª—é—á–∞–µ–º listener –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if (globalOrdersListener) {
      console.log('üîÑ –û—Ç–∫–ª—é—á–∞–µ–º listener –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
      globalOrdersListener();
      globalOrdersListener = null;
      lastOrderStatuses.clear();
    }
  }
});

// –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–∫—Ç–µ–π–ª–µ–π
async function loadCocktails() {
  try {
    console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∫–æ–∫—Ç–µ–π–ª–µ–π...');
    
    if (!cocktailsGrid) {
      console.error('‚ùå –≠–ª–µ–º–µ–Ω—Ç cocktailsGrid –Ω–µ –Ω–∞–π–¥–µ–Ω!');
      return;
    }
    
    let cocktailsSnapshot = await db.collection('cocktails').get();
    console.log('üìä –ü–æ–ª—É—á–µ–Ω–æ –∫–æ–∫—Ç–µ–π–ª–µ–π:', cocktailsSnapshot.size);
    cocktailsData = [];
    cocktailsGrid.innerHTML = '';
    
    if (cocktailsSnapshot.empty) {
      console.log('‚ö†Ô∏è –ö–æ–ª–ª–µ–∫—Ü–∏—è –∫–æ–∫—Ç–µ–π–ª–µ–π –ø—É—Å—Ç–∞, –¥–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ...');
      await addTestCocktails();
      // –ü–æ–≤—Ç–æ—Ä–Ω–æ –∑–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–∫—Ç–µ–π–ª–∏ –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
      const newSnapshot = await db.collection('cocktails').get();
      if (newSnapshot.empty) {
        cocktailsGrid.innerHTML = '<p style="text-align: center; color: #6b5c47; font-size: 1.2rem; margin: 2rem 0;">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–∫—Ç–µ–π–ª–µ–π</p>';
        return;
      }
      // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å –Ω–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
      cocktailsSnapshot = newSnapshot;
    }
    
    cocktailsSnapshot.forEach(doc => {
      const cocktail = { id: doc.id, ...doc.data() };
      cocktailsData.push(cocktail);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –≤ —Å—Ç–æ–ø-–ª–∏—Å—Ç–µ –ª–∏ –∫–æ–∫—Ç–µ–π–ª—å
      const isInStoplist = stoplistData.some(item => item.cocktailName === cocktail.name);
      
      const cocktailCard = document.createElement('div');
      cocktailCard.className = `cocktail-card ${isInStoplist ? 'stopped' : ''}`;
      cocktailCard.setAttribute('data-name', cocktail.name);
      cocktailCard.setAttribute('data-alcohol', cocktail.alcohol || 0);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
      const imageUrl = cocktail.image || 'https://i.pinimg.com/736x/5d/5d/5d/5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d.jpg';
      const hasImage = imageUrl && !imageUrl.includes('5d5d5d');
      const displayImage = hasImage ? imageUrl : '';
      
      cocktailCard.innerHTML = `
        <div class="image-container">
          ${displayImage ? 
            `<img src="${displayImage}" alt="${cocktail.name}">` : 
            `<div class="no-image-placeholder">
              <i class="fas fa-camera"></i>
              <p>–ö–æ–∫—Ç–µ–π–ª—å —É–∂–µ –¥–µ–ª–∞–µ—Ç —Å–µ–ª—Ñ–∏,<br>—Å–∫–æ—Ä–æ –≤—ã–ª–æ–∂–∏—Ç —Å—é–¥–∞</p>
            </div>`
          }
          ${(cocktail.alcohol !== undefined && cocktail.alcohol !== null) ? `
            <div class="alcohol-indicator">
              <i class="fas fa-wine-bottle"></i>
              <span class="alcohol-percent">${cocktail.alcohol}%</span>
            </div>
          ` : ''}
          ${isInStoplist ? `
            <div class="stoplist-badge">
              <i class="fas fa-ban"></i> –í —Å—Ç–æ–ø-–ª–∏—Å—Ç–µ
            </div>
          ` : ''}
          ${isAdmin ? `
            <div class="admin-actions">
              <button class="edit-btn" data-id="${cocktail.id}"><i class="fas fa-edit"></i></button>
              <button class="delete-btn" data-id="${cocktail.id}"><i class="fas fa-trash"></i></button>
            </div>
          ` : ''}
        </div>
        <div class="card-content">
          <h2>${cocktail.name}</h2>
          <!-- –ò–°–ü–†–ê–í–õ–ï–ù–û: –£–ª—É—á—à–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ "–°–æ—Å—Ç–∞–≤ –Ω–µ —É–∫–∞–∑–∞–Ω" -->
          <p class="ingredients">${(typeof cocktail.ingredients === 'string' && cocktail.ingredients.trim()) || '–°–æ—Å—Ç–∞–≤ –Ω–µ —É–∫–∞–∑–∞–Ω'}</p>
          <p class="mood">${cocktail.mood || ''}</p>
          ${cocktail.price ? `<div class="cocktail-price"><i class="fas fa-ruble-sign"></i> ${cocktail.price} ‚ÇΩ</div>` : ''}
          ${!isInStoplist ? `
            <button class="order-btn" data-name="${cocktail.name}" data-price="${cocktail.price || 500}">
              <i class="fas fa-glass-martini-alt"></i> –ó–∞–∫–∞–∑–∞—Ç—å
            </button>
          ` : `
            <button class="order-btn disabled" disabled>
              <i class="fas fa-ban"></i> –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω
            </button>
          `}
        </div>
      `;
      
      cocktailsGrid.appendChild(cocktailCard);
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ä–µ–π—Ç–∏–Ω–≥ –¥–ª—è –∫–æ–∫—Ç–µ–π–ª—è
      getCocktailAverageRating(cocktail.name).then(ratingData => {
        if (ratingData) {
          displayCocktailRating(cocktailCard, ratingData);
        }
      });
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–∏—Ö –∫–Ω–æ–ø–æ–∫
    if (isAdmin) {
      document.querySelectorAll('.edit-btn').forEach(btn => {
        btn.addEventListener('click', (e) => {
          e.stopPropagation();
          const id = btn.getAttribute('data-id');
          editCocktail(id);
        });
      });
      
      document.querySelectorAll('.delete-btn').forEach(btn => {
        btn.addEventListener('click', (e) => {
          e.stopPropagation();
          const id = btn.getAttribute('data-id');
          deleteCocktail(id);
        });
      });
    }
    
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –ø–æ —Ç–µ–∫—É—â–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    filterCocktailsByCategory();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∞–¥–º–∏–Ω—Å–∫–∏–π —Å–ø–∏—Å–æ–∫ –∫–æ–∫—Ç–µ–π–ª–µ–π
    if (isAdmin) {
      updateAdminCocktailsList();
    }
    
    console.log('‚úÖ –ö–æ–∫—Ç–µ–π–ª–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', cocktailsData.length);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–∫—Ç–µ–π–ª–µ–π:', error);
    showError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–∫—Ç–µ–π–ª–µ–π');
  }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–æ–ø-–ª–∏—Å—Ç–∞
async function loadStoplist() {
  try {
    const stoplistSnapshot = await db.collection('stoplist').get();
    stoplistData = [];
    currentStoplist.innerHTML = '';
    
    stoplistSnapshot.forEach(doc => {
      const item = { id: doc.id, ...doc.data() };
      stoplistData.push(item);
      
      const stoplistItem = document.createElement('div');
      stoplistItem.className = 'stoplist-item';
      stoplistItem.innerHTML = `
        ${isAdmin ? `<input type="checkbox" class="stoplist-checkbox" data-id="${item.id}">` : ''}
        <div class="stoplist-info" style="${isAdmin ? 'margin-left: 2rem;' : ''}">
          <strong>${item.cocktailName}</strong>
          <span>${item.reason}</span>
          <small>
            <i class="fas fa-clock"></i>
            ${item.timestamp}
            ${item.addedBy ? `<i class="fas fa-user"></i> ${item.addedBy === 'admin' ? '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä' : '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}` : ''}
          </small>
        </div>
        ${isAdmin ? `
          <button class="remove-from-stoplist" data-id="${item.id}" title="–£–¥–∞–ª–∏—Ç—å –∏–∑ —Å—Ç–æ–ø-–ª–∏—Å—Ç–∞">
            <i class="fas fa-times"></i>
          </button>
        ` : ''}
      `;
      
      currentStoplist.appendChild(stoplistItem);
    });
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    updateStoplistStats();
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ–∏–ª—å—Ç—Ä—ã
    initStoplistFilters();
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–∞—Å—Å–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
    initBulkActions();
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ —Å—Ç–æ–ø-–ª–∏—Å—Ç–∞
    if (isAdmin) {
      document.querySelectorAll('.remove-from-stoplist').forEach(btn => {
        btn.addEventListener('click', () => {
          const id = btn.getAttribute('data-id');
          removeFromStoplist(id);
        });
      });
    }
    
    // –ó–∞–ø–æ–ª–Ω—è–µ–º —Å–µ–ª–µ–∫—Ç –∫–æ–∫—Ç–µ–π–ª–µ–π –¥–ª—è —Å—Ç–æ–ø-–ª–∏—Å—Ç–∞
    await populateStoplistCocktailsSelect();
    
    // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–∫—Ç–µ–π–ª–∏, —á—Ç–æ–±—ã –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å—ã
    await loadCocktails();
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–æ–ø-–ª–∏—Å—Ç–∞:', error);
  }
}

// –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–µ–ª–µ–∫—Ç–∞ –∫–æ–∫—Ç–µ–π–ª–µ–π –¥–ª—è —Å—Ç–æ–ø-–ª–∏—Å—Ç–∞
async function populateStoplistCocktailsSelect() {
  if (!stoplistCocktails) return;
  
  try {
    // –û—á–∏—â–∞–µ–º —Å–µ–ª–µ–∫—Ç
    stoplistCocktails.innerHTML = '<option value="">–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–∫—Ç–µ–π–ª—å</option>';
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–æ–∫—Ç–µ–π–ª–∏
    const cocktailsSnapshot = await db.collection('cocktails').get();
    
    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–∫—Ç–µ–π–ª–∏ –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É
    const cocktails = [];
    cocktailsSnapshot.forEach(doc => {
      const cocktail = { id: doc.id, ...doc.data() };
      cocktails.push(cocktail);
    });
    
    cocktails.sort((a, b) => a.name.localeCompare(b.name, 'ru'));
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–ø—Ü–∏–∏ –≤ —Å–µ–ª–µ–∫—Ç, –∏—Å–∫–ª—é—á–∞—è —É–∂–µ –Ω–∞—Ö–æ–¥—è—â–∏–µ—Å—è –≤ —Å—Ç–æ–ø-–ª–∏—Å—Ç–µ
    cocktails.forEach(cocktail => {
      const isInStoplist = stoplistData.some(item => item.cocktailName === cocktail.name);
      
      if (!isInStoplist) {
        const option = document.createElement('option');
        option.value = cocktail.name;
        option.textContent = cocktail.name;
        option.setAttribute('data-alcohol', cocktail.alcohol || 0);
        stoplistCocktails.appendChild(option);
      }
    });
    
    // –ï—Å–ª–∏ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–∫—Ç–µ–π–ª–µ–π –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ —Å—Ç–æ–ø-–ª–∏—Å—Ç
    if (stoplistCocktails.children.length === 1) {
      const option = document.createElement('option');
      option.value = '';
      option.textContent = '–í—Å–µ –∫–æ–∫—Ç–µ–π–ª–∏ —É–∂–µ –≤ —Å—Ç–æ–ø-–ª–∏—Å—Ç–µ';
      option.disabled = true;
      stoplistCocktails.appendChild(option);
    }
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Å–µ–ª–µ–∫—Ç–∞ –∫–æ–∫—Ç–µ–π–ª–µ–π:', error);
  }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å—Ç–æ–ø-–ª–∏—Å—Ç–∞
function updateStoplistStats() {
  const stoplistStats = document.getElementById('stoplistStats');
  if (!stoplistStats) return;
  
  const totalCocktails = cocktailsData.length;
  const stoplistCount = stoplistData.length;
  const availableCount = totalCocktails - stoplistCount;
  
  stoplistStats.innerHTML = `
    <div class="stat-item">
      <i class="fas fa-ban"></i>
      <span>–í —Å—Ç–æ–ø-–ª–∏—Å—Ç–µ: ${stoplistCount}</span>
    </div>
    <div class="stat-item">
      <i class="fas fa-check-circle"></i>
      <span>–î–æ—Å—Ç—É–ø–Ω–æ: ${availableCount}</span>
    </div>
    <div class="stat-item">
      <i class="fas fa-cocktail"></i>
      <span>–í—Å–µ–≥–æ: ${totalCocktails}</span>
    </div>
  `;
}

// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
let currentFilter = 'all';
let currentSearchTerm = '';

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–∏—Å–∫–∞ –∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤ —Å—Ç–æ–ø-–ª–∏—Å—Ç–∞
function initStoplistFilters() {
  const searchInput = document.getElementById('stoplistSearch');
  const filterButtons = document.querySelectorAll('.filter-btn');
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–∏—Å–∫–∞
  if (searchInput) {
    searchInput.addEventListener('input', (e) => {
      currentSearchTerm = e.target.value.toLowerCase();
      filterStoplistItems();
    });
  }
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤
  filterButtons.forEach(btn => {
    btn.addEventListener('click', () => {
      // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —Å–æ –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫
      filterButtons.forEach(b => b.classList.remove('active'));
      // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å –∫ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–µ
      btn.classList.add('active');
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ñ–∏–ª—å—Ç—Ä
      currentFilter = btn.getAttribute('data-filter');
      filterStoplistItems();
    });
  });
}

// –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å—Ç–æ–ø-–ª–∏—Å—Ç–∞
function filterStoplistItems() {
  const stoplistItems = document.querySelectorAll('.stoplist-item');
  let visibleCount = 0;
  
  stoplistItems.forEach(item => {
    const cocktailName = item.querySelector('strong').textContent.toLowerCase();
    const reason = item.querySelector('span').textContent.toLowerCase();
    const addedBy = item.querySelector('small').textContent.toLowerCase();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–∏—Å–∫
    const matchesSearch = !currentSearchTerm || 
      cocktailName.includes(currentSearchTerm) || 
      reason.includes(currentSearchTerm);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–ª—å—Ç—Ä
    let matchesFilter = true;
    if (currentFilter === 'admin') {
      matchesFilter = addedBy.includes('–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä');
    } else if (currentFilter === 'user') {
      matchesFilter = addedBy.includes('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å');
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–ª–∏ —Å–∫—Ä—ã–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç
    if (matchesSearch && matchesFilter) {
      item.style.display = 'flex';
      visibleCount++;
    } else {
      item.style.display = 'none';
    }
  });
  
  // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å —É—á–µ—Ç–æ–º —Ñ–∏–ª—å—Ç—Ä–æ–≤
  updateFilteredStats(visibleCount);
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å —É—á–µ—Ç–æ–º —Ñ–∏–ª—å—Ç—Ä–æ–≤
function updateFilteredStats(visibleCount) {
  const stoplistStats = document.getElementById('stoplistStats');
  if (!stoplistStats) return;
  
  const totalCocktails = cocktailsData.length;
  const stoplistCount = stoplistData.length;
  const availableCount = totalCocktails - stoplistCount;
  
  let filterText = '';
  if (currentFilter !== 'all' || currentSearchTerm) {
    filterText = ` (–ø–æ–∫–∞–∑–∞–Ω–æ: ${visibleCount})`;
  }
  
  stoplistStats.innerHTML = `
    <div class="stat-item">
      <i class="fas fa-ban"></i>
      <span>–í —Å—Ç–æ–ø-–ª–∏—Å—Ç–µ: ${stoplistCount}${filterText}</span>
    </div>
    <div class="stat-item">
      <i class="fas fa-check-circle"></i>
      <span>–î–æ—Å—Ç—É–ø–Ω–æ: ${availableCount}</span>
    </div>
    <div class="stat-item">
      <i class="fas fa-cocktail"></i>
      <span>–í—Å–µ–≥–æ: ${totalCocktails}</span>
    </div>
  `;
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–∞—Å—Å–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
function initBulkActions() {
  const bulkActions = document.getElementById('bulkActions');
  const bulkRemoveBtn = document.getElementById('bulkRemoveBtn');
  const selectAllBtn = document.getElementById('selectAllBtn');
  const clearSelectionBtn = document.getElementById('clearSelectionBtn');
  
  if (!isAdmin || !bulkActions) return;
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –º–∞—Å—Å–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
  bulkActions.style.display = 'flex';
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —á–µ–∫–±–æ–∫—Å–æ–≤
  document.addEventListener('change', (e) => {
    if (e.target.classList.contains('stoplist-checkbox')) {
      const item = e.target.closest('.stoplist-item');
      if (e.target.checked) {
        item.classList.add('selected');
      } else {
        item.classList.remove('selected');
      }
      updateBulkActionsVisibility();
    }
  });
  
  // –í—ã–±—Ä–∞—Ç—å –≤—Å–µ
  if (selectAllBtn) {
    selectAllBtn.addEventListener('click', () => {
      const checkboxes = document.querySelectorAll('.stoplist-checkbox');
      checkboxes.forEach(checkbox => {
        checkbox.checked = true;
        checkbox.closest('.stoplist-item').classList.add('selected');
      });
      updateBulkActionsVisibility();
    });
  }
  
  // –°–Ω—è—Ç—å –≤—ã–±–æ—Ä
  if (clearSelectionBtn) {
    clearSelectionBtn.addEventListener('click', () => {
      const checkboxes = document.querySelectorAll('.stoplist-checkbox');
      checkboxes.forEach(checkbox => {
        checkbox.checked = false;
        checkbox.closest('.stoplist-item').classList.remove('selected');
      });
      updateBulkActionsVisibility();
    });
  }
  
  // –ú–∞—Å—Å–æ–≤–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ
  if (bulkRemoveBtn) {
    bulkRemoveBtn.addEventListener('click', () => {
      const selectedIds = getSelectedStoplistItems();
      if (selectedIds.length === 0) {
        showError('–í—ã–±–µ—Ä–∏—Ç–µ —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è');
        return;
      }
      
      const confirmed = confirm(
        `–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å ${selectedIds.length} –∫–æ–∫—Ç–µ–π–ª–µ–π –∏–∑ —Å—Ç–æ–ø-–ª–∏—Å—Ç–∞?\n\n` +
        `–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.`
      );
      
      if (confirmed) {
        bulkRemoveFromStoplist(selectedIds);
      }
    });
  }
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å—Ç–æ–ø-–ª–∏—Å—Ç–∞
function getSelectedStoplistItems() {
  const checkboxes = document.querySelectorAll('.stoplist-checkbox:checked');
  return Array.from(checkboxes).map(checkbox => checkbox.getAttribute('data-id'));
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏ –∫–Ω–æ–ø–æ–∫ –º–∞—Å—Å–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
function updateBulkActionsVisibility() {
  const selectedCount = getSelectedStoplistItems().length;
  const bulkRemoveBtn = document.getElementById('bulkRemoveBtn');
  
  if (bulkRemoveBtn) {
    bulkRemoveBtn.innerHTML = `<i class="fas fa-trash"></i> –£–¥–∞–ª–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ (${selectedCount})`;
    bulkRemoveBtn.disabled = selectedCount === 0;
  }
}

// –ú–∞—Å—Å–æ–≤–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –∏–∑ —Å—Ç–æ–ø-–ª–∏—Å—Ç–∞
async function bulkRemoveFromStoplist(ids) {
  try {
    const batch = db.batch();
    
    ids.forEach(id => {
      const docRef = db.collection('stoplist').doc(id);
      batch.delete(docRef);
    });
    
    await batch.commit();
    
    // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–æ–ø-–ª–∏—Å—Ç
    await loadStoplist();
    showSuccess(`–£–¥–∞–ª–µ–Ω–æ ${ids.length} –∫–æ–∫—Ç–µ–π–ª–µ–π –∏–∑ —Å—Ç–æ–ø-–ª–∏—Å—Ç–∞`);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –º–∞—Å—Å–æ–≤–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ —Å—Ç–æ–ø-–ª–∏—Å—Ç–∞:', error);
    showError('–û—à–∏–±–∫–∞ –º–∞—Å—Å–æ–≤–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ —Å—Ç–æ–ø-–ª–∏—Å—Ç–∞');
  }
}

// Real-time listener –¥–ª—è –∑–∞–∫–∞–∑–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
let userOrdersListener = null;

// –ì–ª–æ–±–∞–ª—å–Ω—ã–π listener –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π —Å—Ç–∞—Ç—É—Å–æ–≤ –∑–∞–∫–∞–∑–æ–≤
let globalOrdersListener = null;
let lastOrderStatuses = new Map(); // –•—Ä–∞–Ω–∏–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å—Ç–∞—Ç—É—Å—ã –∑–∞–∫–∞–∑–æ–≤

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ listener'–∞ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π —Å—Ç–∞—Ç—É—Å–æ–≤
function initGlobalOrderStatusListener() {
  const currentUser = auth.currentUser;
  if (!currentUser) {
    console.log('‚ùå initGlobalOrderStatusListener: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
    return;
  }
  
  console.log('üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ listener –¥–ª—è –∑–∞–∫–∞–∑–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', currentUser.uid);
  console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º Firebase –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ:', !!db);
  
  // –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π listener, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
  if (globalOrdersListener) {
    console.log('üîÑ –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ listener');
    globalOrdersListener();
    globalOrdersListener = null;
  }
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º listener –¥–ª—è –∑–∞–∫–∞–∑–æ–≤ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  globalOrdersListener = db.collection('orders')
    .where('userId', '==', currentUser.uid)
    .onSnapshot((snapshot) => {
      console.log('üìä –ü–æ–ª—É—á–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤:', snapshot.docChanges().length, '–∏–∑–º–µ–Ω–µ–Ω–∏–π');
      console.log('üìã –í—Å–µ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ snapshot:', snapshot.docs.length);
      
      // –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ (–Ω–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π), –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≤—Å–µ –∑–∞–∫–∞–∑—ã
      if (snapshot.docChanges().length === 0 && snapshot.docs.length > 0) {
        console.log('üîÑ –ü–µ—Ä–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞: –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–∫–∞–∑—ã');
        snapshot.docs.forEach(doc => {
          const orderData = { id: doc.id, ...doc.data() };
          lastOrderStatuses.set(orderData.id, orderData.status);
          lastOrderQueuePositions.set(orderData.id, orderData.queuePosition);
          console.log(`üìù –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –∑–∞–∫–∞–∑ ${orderData.id} —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º: ${orderData.status}, –ø–æ–∑–∏—Ü–∏—è: ${orderData.queuePosition}`);
        });
        return;
      }
      
      snapshot.docChanges().forEach((change) => {
        const orderData = { id: change.doc.id, ...change.doc.data() };
        const orderId = orderData.id;
        const newStatus = orderData.status;
        
        console.log(`üìù –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ ${orderId}:`, {
          type: change.type,
          status: newStatus,
          updatedBy: orderData.updatedBy || 'unknown'
        });
        
        if (change.type === 'modified') {
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª—Å—è –ª–∏ —Å—Ç–∞—Ç—É—Å
          const lastStatus = lastOrderStatuses.get(orderId);
          const lastQueuePosition = lastOrderQueuePositions.get(orderId);
          const newQueuePosition = orderData.queuePosition;
          
          console.log(`üîÑ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–≤ –¥–ª—è –∑–∞–∫–∞–∑–∞ ${orderId}:`, {
            lastStatus,
            newStatus,
            statusChanged: lastStatus !== newStatus,
            lastQueuePosition,
            newQueuePosition,
            queuePositionChanged: lastQueuePosition !== newQueuePosition
          });
          
          if (lastStatus && lastStatus !== newStatus) {
            // –°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–∏–ª—Å—è, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            console.log(`üîî –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –∑–∞–∫–∞–∑–∞ ${orderId}: ${lastStatus} ‚Üí ${newStatus}`);
            showStatusUpdateNotification(orderData, newStatus);
          }
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª–∞—Å—å –ª–∏ –ø–æ–∑–∏—Ü–∏—è –≤ –æ—á–µ—Ä–µ–¥–∏
          if (lastQueuePosition && lastQueuePosition !== newQueuePosition && newQueuePosition < lastQueuePosition) {
            // –ü–æ–∑–∏—Ü–∏—è –≤ –æ—á–µ—Ä–µ–¥–∏ —É–º–µ–Ω—å—à–∏–ª–∞—Å—å (–∑–∞–∫–∞–∑ –ø—Ä–æ–¥–≤–∏–Ω—É–ª—Å—è)
            console.log(`üéØ –ó–∞–∫–∞–∑ ${orderId} –ø—Ä–æ–¥–≤–∏–Ω—É–ª—Å—è –≤ –æ—á–µ—Ä–µ–¥–∏: #${lastQueuePosition} ‚Üí #${newQueuePosition}`);
            showQueuePositionUpdateNotification(orderData, lastQueuePosition, newQueuePosition);
          }
          
          // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å—Ç–∞—Ç—É—Å –∏ –ø–æ–∑–∏—Ü–∏—é
          lastOrderStatuses.set(orderId, newStatus);
          lastOrderQueuePositions.set(orderId, newQueuePosition);
        } else if (change.type === 'added') {
          // –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ - —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ —Å—Ç–∞—Ç—É—Å –∏ –ø–æ–∑–∏—Ü–∏—é
          console.log(`‚ûï –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ ${orderId} —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º: ${newStatus}, –ø–æ–∑–∏—Ü–∏—è: ${orderData.queuePosition}`);
          lastOrderStatuses.set(orderData.id, orderData.status);
          lastOrderQueuePositions.set(orderData.id, orderData.queuePosition);
        }
      });
    }, (error) => {
      console.error('‚ùå –û—à–∏–±–∫–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ listener –¥–ª—è –∑–∞–∫–∞–∑–æ–≤:', error);
    });
    
  console.log('‚úÖ –ì–ª–æ–±–∞–ª—å–Ω—ã–π listener –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞–∫–∞–∑–æ–≤ —Å real-time –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏
async function loadOrderHistory(userId) {
  try {
    // –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π listener, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
    if (userOrdersListener) {
      userOrdersListener();
      userOrdersListener = null;
    }
    
    ordersList.innerHTML = '';
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º real-time listener –¥–ª—è –∑–∞–∫–∞–∑–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    userOrdersListener = db.collection('orders')
      .where('userId', '==', userId)
      .onSnapshot((snapshot) => {
        ordersList.innerHTML = '';
        
        if (snapshot.empty) {
          ordersList.innerHTML = '<p class="no-orders">–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤</p>';
          return;
        }
        
        const userOrders = [];
        snapshot.forEach(doc => {
          const order = doc.data();
          userOrders.push({ id: doc.id, ...order });
        });
        
        // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –≤—Ä–µ–º–µ–Ω–∏ (–Ω–æ–≤—ã–µ –ø–µ—Ä–≤—ã–º–∏)
        userOrders.sort((a, b) => {
          const aTime = a.createdAt?.toDate ? a.createdAt.toDate().getTime() : (a.displayTime ? Date.parse(a.displayTime) : 0);
          const bTime = b.createdAt?.toDate ? b.createdAt.toDate().getTime() : (b.displayTime ? Date.parse(b.displayTime) : 0);
          return bTime - aTime;
        });
        
        userOrders.forEach(order => {
          const orderElement = document.createElement('div');
          orderElement.className = 'order-item';
          orderElement.setAttribute('data-order-id', order.id);
          
          // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–ª–∞—Å—Å —Å—Ç–∞—Ç—É—Å–∞ –¥–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏
          const statusClass = order.status || 'pending';
          const statusText = getStatusText(order.status);
          
          orderElement.innerHTML = `
            <div class="order-header">
              <span class="order-name">${order.name}</span>
              <span class="order-status ${statusClass}">${statusText}</span>
            </div>
            <div class="order-time" style="font-size: 1.1rem;">${order.displayTime || (order.createdAt?.toDate ? order.createdAt.toDate().toLocaleString('ru-RU') : '')}</div>
          `;
          
          // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–∑–∏—Ü–∏–∏ –≤ –æ—á–µ—Ä–µ–¥–∏, –µ—Å–ª–∏ –∑–∞–∫–∞–∑ –∞–∫—Ç–∏–≤–µ–Ω
          if (order.queuePosition && ['confirmed', 'preparing', 'ready'].includes(order.status)) {
            const queueContainer = document.createElement('div');
            queueContainer.className = 'order-queue-info';
            displayQueuePosition(order, queueContainer);
            orderElement.appendChild(queueContainer);
          }
          
          ordersList.appendChild(orderElement);
        });
        
        // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–æ–≤ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –≤ initGlobalOrderStatusListener
        // –ó–¥–µ—Å—å –º—ã —Ç–æ–ª—å–∫–æ –æ–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞–∫–∞–∑–æ–≤
      }, (error) => {
        console.error('–û—à–∏–±–∫–∞ real-time listener –¥–ª—è –∑–∞–∫–∞–∑–æ–≤:', error);
        showError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–∫–∞–∑–æ–≤');
      });
      
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞–∫–∞–∑–æ–≤:', error);
    showError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–∫–∞–∑–æ–≤');
  }
}

// === –ù–û–í–´–ï –§–£–ù–ö–¶–ò–ò –î–õ–Ø –ê–î–ú–ò–ù-–ü–ê–ù–ï–õ–ò ===

// Real-time listener –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–∏—Ö –∑–∞–∫–∞–∑–æ–≤
let adminOrdersListener = null;

// –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ —Å real-time –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏
async function loadAdminOrders() {
  try {
    // –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π listener, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
    if (adminOrdersListener) {
      adminOrdersListener();
      adminOrdersListener = null;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —ç–ª–µ–º–µ–Ω—Ç adminOrdersList
    if (!adminOrdersList) {
      console.error('–≠–ª–µ–º–µ–Ω—Ç adminOrdersList –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ DOM');
      return;
    }

    adminOrdersList.innerHTML = '';

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º real-time listener –¥–ª—è –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤
    adminOrdersListener = db.collection('orders')
      .orderBy('createdAt', 'desc')
      .onSnapshot((snapshot) => {
        adminOrdersList.innerHTML = '';

        if (snapshot.empty) {
          adminOrdersList.innerHTML = '<p class="no-orders">–ó–∞–∫–∞–∑–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç</p>';
          return;
        }

        // –°–æ—Ä—Ç–∏—Ä—É–µ–º –∑–∞–∫–∞–∑—ã –ø–æ –ø–æ–∑–∏—Ü–∏–∏ –≤ –æ—á–µ—Ä–µ–¥–∏ –¥–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤
        const orders = [];
        snapshot.forEach(doc => {
          orders.push({ id: doc.id, ...doc.data() });
        });
        
        // –°–æ—Ä—Ç–∏—Ä—É–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã –ø–æ –ø–æ–∑–∏—Ü–∏–∏ –≤ –æ—á–µ—Ä–µ–¥–∏
        const activeOrders = orders.filter(order => 
          ['confirmed', 'preparing', 'ready'].includes(order.status)
        ).sort((a, b) => (a.queuePosition || 0) - (b.queuePosition || 0));
        
        // –û—Å—Ç–∞–ª—å–Ω—ã–µ –∑–∞–∫–∞–∑—ã —Å–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –≤—Ä–µ–º–µ–Ω–∏
        const otherOrders = orders.filter(order => 
          !['confirmed', 'preparing', 'ready'].includes(order.status)
        ).sort((a, b) => {
          const aTime = a.createdAt?.toDate ? a.createdAt.toDate().getTime() : 0;
          const bTime = b.createdAt?.toDate ? b.createdAt.toDate().getTime() : 0;
          return bTime - aTime;
        });
        
        // –û–±—ä–µ–¥–∏–Ω—è–µ–º —Å–ø–∏—Å–∫–∏: —Å–Ω–∞—á–∞–ª–∞ –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã –≤ –ø–æ—Ä—è–¥–∫–µ –æ—á–µ—Ä–µ–¥–∏, –ø–æ—Ç–æ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ
        const sortedOrders = [...activeOrders, ...otherOrders];
        
        sortedOrders.forEach(order => {
          const orderElement = document.createElement('div');
          orderElement.className = 'admin-order-item';
          orderElement.setAttribute('data-order-id', order.id);
          
          // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–∑–∏—Ü–∏–∏ –≤ –æ—á–µ—Ä–µ–¥–∏ –¥–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤
          let queueInfo = '';
          if (order.queuePosition && ['confirmed', 'preparing', 'ready'].includes(order.status)) {
            queueInfo = `
              <div class="admin-queue-info">
                <i class="fas fa-list-ol"></i>
                <span>–ü–æ–∑–∏—Ü–∏—è –≤ –æ—á–µ—Ä–µ–¥–∏: #${order.queuePosition}</span>
                ${order.queuePosition === 1 ? '<span class="queue-next">üéØ –°–ª–µ–¥—É—é—â–∏–π</span>' : ''}
              </div>
            `;
          }
          
          orderElement.innerHTML = `
            <div class="admin-order-header">
              <div>
                <strong>${order.name}</strong>
                <div>–ö–ª–∏–µ–Ω—Ç: ${order.user || '–ì–æ—Å—Ç—å'}</div>
                <small>ID: ${order.id}</small>
                <small>${order.displayTime || (order.createdAt?.toDate ? order.createdAt.toDate().toLocaleString('ru-RU') : '')}</small>
                ${queueInfo}
              </div>
              <div>
                <div class="admin-order-status ${order.status || 'pending'}">${getStatusText(order.status)}</div>
                <button class="change-status-btn" data-id="${order.id}">
                  <i class="fas fa-edit"></i> –°—Ç–∞—Ç—É—Å
                </button>
              </div>
            </div>
          `;
          adminOrdersList.appendChild(orderElement);
        });

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∫–Ω–æ–ø–æ–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
        document.querySelectorAll('.change-status-btn').forEach(btn => {
          btn.addEventListener('click', (e) => {
            e.stopPropagation();
            const orderId = btn.getAttribute('data-id');
            openStatusModal(orderId);
          });
        });

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏, –µ—Å–ª–∏ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –æ—Ç–∫—Ä—ã—Ç–∞
        if (adminPanel && adminPanel.style.display === 'block') {
          showAdminStatusUpdateNotification();
        }
      }, (error) => {
        console.error('–û—à–∏–±–∫–∞ real-time listener –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–∏—Ö –∑–∞–∫–∞–∑–æ–≤:', error);
        if (adminOrdersList) {
          adminOrdersList.innerHTML = '<p class="error">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–∫–∞–∑–æ–≤</p>';
        }
      });

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏:', error);
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —ç–ª–µ–º–µ–Ω—Ç adminOrdersList –ø–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º
    if (adminOrdersList) {
      adminOrdersList.innerHTML = '<p class="error">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–∫–∞–∑–æ–≤</p>';
    }
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
function openStatusModal(orderId) {
  currentOrderId = orderId;
  // –ë–µ–∑–æ–ø–∞—Å–Ω–æ –∏—â–µ–º —ç–ª–µ–º–µ–Ω—Ç –∑–∞–∫–∞–∑–∞
  const orderElement = document.querySelector(`.change-status-btn[data-id="${orderId}"]`)?.closest('.admin-order-item');
  if (!orderElement) {
    console.error(`–≠–ª–µ–º–µ–Ω—Ç –∑–∞–∫–∞–∑–∞ —Å ID ${orderId} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    return;
  }
  
  const orderName = orderElement.querySelector('strong')?.textContent || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∑–∞–∫–∞–∑';
  const orderUser = orderElement.querySelector('div > div:nth-child(2)')?.textContent || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–ª–∏–µ–Ω—Ç';
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ statusOrderInfo –ø–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º
  if (statusOrderInfo) {
    statusOrderInfo.innerHTML = `
      <p><strong>–ö–æ–∫—Ç–µ–π–ª—å:</strong> ${orderName}</p>
      <p><strong>–ö–ª–∏–µ–Ω—Ç:</strong> ${orderUser}</p>
      <p><strong>ID –∑–∞–∫–∞–∑–∞:</strong> ${orderId}</p>
    `;
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ statusModal –ø–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º
  openModal(statusModal); // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞
async function changeOrderStatus(orderId, newStatus) {
  if (!orderId) return;

  try {
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–µ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    const orderDoc = await db.collection('orders').doc(orderId).get();
    const orderData = orderDoc.data();
    const orderName = orderData?.name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∑–∞–∫–∞–∑';
    const userName = orderData?.user || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–ª–∏–µ–Ω—Ç';

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ Firebase
    await db.collection('orders').doc(orderId).update({
      status: newStatus,
      updatedAt: firebase.firestore.FieldValue.serverTimestamp ? firebase.firestore.FieldValue.serverTimestamp() : new Date()
    });

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram
    const telegramResult = await sendStatusUpdateToTelegram(orderId, newStatus, orderName, userName);
    if (telegramResult.success) {
      console.log('‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram');
    } else {
      console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram:', telegramResult.error);
    }

    // –¢–∞–∫–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ webhook —Å–µ—Ä–≤–µ—Ä –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å Telegram
    const webhookResult = await updateOrderStatusViaWebhook(orderId, newStatus);
    if (webhookResult.success) {
      console.log('‚úÖ –°—Ç–∞—Ç—É—Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω —Å Telegram —á–µ—Ä–µ–∑ webhook');
    } else {
      console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å Telegram:', webhookResult.error);
    }

    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å—Ç–∞—Ç—É—Å–∞
    closeModal(statusModal); // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é
    
    // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤ –≤ –∞–¥–º–∏–Ω–∫–µ
    if (adminPanel && adminPanel.style.display === 'block') {
      await loadAdminOrders();
    }
    
    showSuccess('–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ Telegram');
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞:', error);
    showError('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞');
  }
}

// === –ö–û–ù–ï–¶ –ù–û–í–´–• –§–£–ù–ö–¶–ò–ô ===

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞
function getStatusText(status) {
  switch(status) {
    case 'confirmed': return '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω';
    case 'preparing': return '–ì–æ—Ç–æ–≤–∏—Ç—Å—è';
    case 'ready': return '–ì–æ—Ç–æ–≤';
    case 'completed': return '–í—ã–ø–æ–ª–Ω–µ–Ω';
    case 'cancelled': return '–û—Ç–º–µ–Ω—ë–Ω';
    default: return '–í –æ–±—Ä–∞–±–æ—Ç–∫–µ';
  }
}

// === –û–ë–ù–û–í–õ–ï–ù–ù–´–ï –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –û–¢–ö–†–´–¢–ò–Ø –ú–û–î–ê–õ–¨–ù–´–• –û–ö–û–ù ===

// –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª–∫–∏ –≤—Ö–æ–¥–∞
loginBtn?.addEventListener('click', () => {
  openModal(authModal);
});

// –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª–∫–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
registerBtn?.addEventListener('click', () => {
  openModal(registerModal);
});

// –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å—á–µ—Ç–∞
myBillBtn?.addEventListener('click', async () => {
  await showMyBill();
});

// –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –∏—Å—Ç–æ—Ä–∏–∏ —Å—á–µ—Ç–æ–≤
billHistoryBtn?.addEventListener('click', async () => {
  if (auth.currentUser) {
    await loadBillHistory(auth.currentUser.uid);
    openModal(billHistoryModal);
  }
});

// –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª–∫–∏ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
adminBtn?.addEventListener('click', async () => {
  if (isAdmin) {
    await loadCocktails();
    await loadAdminOrders(); // –¢–µ–ø–µ—Ä—å —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    await loadStoplist();
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç—É—Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    const statusData = await monitorSystem();
    displaySystemStatus(statusData);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±–∞–∑–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ Telegram
    displayTelegramInfo();
    
    openModal(adminPanel);
  }
});

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–∫—Ç–µ–π–ª—è (–æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–≤–µ—Ä—Ö –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏)
addCocktailBtn?.addEventListener('click', () => {
  // –°–±—Ä–æ—Å —Ñ–æ—Ä–º—ã (–∫–∞–∫ —É –≤–∞—Å –±—ã–ª–æ)
  const formTitle = document.getElementById('formTitle');
  console.log('üîç –ü—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–æ–∫—Ç–µ–π–ª—è - —ç–ª–µ–º–µ–Ω—Ç formTitle –Ω–∞–π–¥–µ–Ω:', !!formTitle, formTitle ? formTitle.textContent : '–Ω–µ –Ω–∞–π–¥–µ–Ω');
  const cocktailId = document.getElementById('cocktailId');
  const cocktailName = document.getElementById('cocktailName');
  const cocktailIngredients = document.getElementById('cocktailIngredients');
  const cocktailMood = document.getElementById('cocktailMood');
  const cocktailAlcohol = document.getElementById('cocktailAlcohol');
  const cocktailCategory = document.getElementById('cocktailCategory');
  const previewImage = document.getElementById('previewImage');

  if (formTitle) {
    formTitle.innerHTML = '<i class="fas fa-cocktail"></i> –î–æ–±–∞–≤–∏—Ç—å –∫–æ–∫—Ç–µ–π–ª—å';
    console.log('‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∑–∞–≥–æ–ª–æ–≤–æ–∫: –î–æ–±–∞–≤–∏—Ç—å –∫–æ–∫—Ç–µ–π–ª—å');
  }
  if (cocktailId) cocktailId.value = '';
  if (cocktailName) cocktailName.value = '';
  if (cocktailIngredients) cocktailIngredients.value = '';
  if (cocktailMood) cocktailMood.value = '';
  if (cocktailAlcohol) cocktailAlcohol.value = '';
  
  const cocktailPrice = document.getElementById('cocktailPrice');
  if (cocktailPrice) cocktailPrice.value = '';
  
  if (cocktailCategory) cocktailCategory.value = '';
  if (previewImage) {
    previewImage.style.display = 'none';
    previewImage.src = '';
  }
  // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Ñ–æ—Ä–º—ã –∫–æ–∫—Ç–µ–π–ª—è
  console.log('üîç –ü–µ—Ä–µ–¥ –æ—Ç–∫—Ä—ã—Ç–∏–µ–º —Ñ–æ—Ä–º—ã –∫–æ–∫—Ç–µ–π–ª—è - –∑–∞–≥–æ–ª–æ–≤–æ–∫:', formTitle ? formTitle.innerHTML : 'formTitle –Ω–µ –Ω–∞–π–¥–µ–Ω');
  openModal(cocktailFormModal); 
});

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
tabBtns.forEach(btn => {
  btn.addEventListener('click', () => {
    // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —É –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫
    tabBtns.forEach(b => b.classList.remove('active'));
    // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —Ç–µ–∫—É—â–µ–π –∫–Ω–æ–ø–∫–µ
    btn.classList.add('active');
    
    // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –≤–∫–ª–∞–¥–∫–∏
    tabContents.forEach(content => content.classList.remove('active'));
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω—É–∂–Ω—É—é –≤–∫–ª–∞–¥–∫—É
    const tabId = btn.getAttribute('data-tab');
    const tabElement = document.getElementById(`${tabId}-tab`);
    if (tabElement) {
        tabElement.classList.add('active');
    }
  });
});

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
toggleForm?.addEventListener('click', (e) => {
  if (e.target.id === 'switchToRegister') {
    closeModal(authModal); // –ó–∞–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ –≤—Ö–æ–¥–∞
    openModal(registerModal); // –û—Ç–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    e.preventDefault();
  }
});

// === –û–ë–ù–û–í–õ–ï–ù–ù–´–ï –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –ó–ê–ö–†–´–¢–ò–Ø –ú–û–î–ê–õ–¨–ù–´–• –û–ö–û–ù ===

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª–æ–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –∑–∞–∫—Ä—ã—Ç–∏—è (X)
closeBtns.forEach(btn => {
  btn?.addEventListener('click', (e) => {
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω—É–∂–Ω–æ –∑–∞–∫—Ä—ã—Ç—å, –ø–æ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É –∫–Ω–æ–ø–∫–∏
    const modalContent = e.target.closest('.modal-content');
    if (modalContent) {
      const modal = modalContent.parentElement;
      closeModal(modal);
    }
  });
});

// –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
window.addEventListener('click', (e) => {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–ª–∏–∫–Ω—É–ª–∏ –ª–∏ –º—ã –≤–Ω–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  if (e.target.classList.contains('modal')) {
    closeModal(e.target);
  }
});

// –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω –ø–æ –æ—Ç–¥–µ–ª—å–Ω—ã–º –∫–Ω–æ–ø–∫–∞–º
closeNotification?.addEventListener('click', () => {
  closeModal(notificationModal);
  if (champagneAnimation) champagneAnimation.innerHTML = '';
});

closeSuccess?.addEventListener('click', () => {
  closeModal(successModal);
});

closeError?.addEventListener('click', () => {
  closeModal(errorModal);
});

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
document.getElementById('closeOrderModal')?.addEventListener('click', () => {
  // –û—á–∏—â–∞–µ–º –∑–∞–≥–ª—É—à–∫—É –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏
  const placeholder = document.querySelector('.order-image-placeholder');
  if (placeholder) {
    placeholder.style.display = 'none';
  }
  closeModal(orderModal);
});

// === –û–°–¢–ê–õ–¨–ù–û–ô –ö–û–î (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π, –∫—Ä–æ–º–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è openModal/closeModal –≥–¥–µ –Ω—É–∂–Ω–æ) ===

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥–∞
authForm?.addEventListener('submit', async (e) => {
  e.preventDefault();
  const phoneInput = document.getElementById('phone');
  const passwordInput = document.getElementById('password');

  if (!phoneInput || !passwordInput) {
    showError('‚ùå –û—à–∏–±–∫–∞: –ø–æ–ª—è –≤–≤–æ–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.');
    return;
  }

  const phone = phoneInput.value;
  const password = passwordInput.value;

  const loader = document.getElementById('loader');
  if (loader) loader.classList.add('active');

  try {
    // –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ –≤—Ö–æ–¥–∞ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É
    // –ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º email –∫–∞–∫ –∑–∞–≥–ª—É—à–∫—É
    const email = `${phone.replace(/\D/g, '')}@asafievbar.com`;
    const userCredential = await auth.signInWithEmailAndPassword(email, password);
    await userCredential.user.reload();
    const updatedUser = auth.currentUser;
    
    // –ò–º–∏—Ç–∏—Ä—É–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–π –∞–Ω–∏–º–∞—Ü–∏–∏ (300ms)
    await new Promise(resolve => setTimeout(resolve, 300));
    
    if (userName) {
        userName.textContent = updatedUser.displayName || "–ì–æ—Å—Ç—å";
        userName.style.display = 'block';
    }
    closeModal(authModal); // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø–ª–∞–≤–Ω–æ–µ –ø–æ—è–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    document.querySelectorAll('.cocktail-card').forEach(card => {
      card.classList.add('fade-in-content');
    });
    
  } catch (error) {
    showError('‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: ' + error.message);
  } finally {
    if (loader) loader.classList.remove('active');
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
registerForm?.addEventListener('submit', async (e) => {
  e.preventDefault();
  const displayNameInput = document.getElementById('displayName');
  const regPhoneInput = document.getElementById('regPhone');
  const regPasswordInput = document.getElementById('regPassword');

  if (!displayNameInput || !regPhoneInput || !regPasswordInput) {
    showError('‚ùå –û—à–∏–±–∫–∞: –ø–æ–ª—è –≤–≤–æ–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.');
    return;
  }

  const displayName = displayNameInput.value;
  const phone = regPhoneInput.value;
  const password = regPasswordInput.value;

  const loader = document.getElementById('loader');
  if (loader) loader.classList.add('active');

  try {
    // –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É
    // –ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º email –∫–∞–∫ –∑–∞–≥–ª—É—à–∫—É
    const email = `${phone.replace(/\D/g, '')}@asafievbar.com`;
    const userCredential = await auth.createUserWithEmailAndPassword(email, password);
    await userCredential.user.updateProfile({ displayName });
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Firestore
    await db.collection('users').doc(userCredential.user.uid).set({
      displayName: displayName,
      phone: phone,
      role: 'user', // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –æ–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
      createdAt: new Date()
    });
    
    await new Promise(resolve => setTimeout(resolve, 300));
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —É—Å–ø–µ—Ö–∞
    closeModal(registerModal); // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é
    openModal(successModal); // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é
    
    document.querySelectorAll('.cocktail-card').forEach(card => {
      card.classList.add('fade-in-content');
    });
    
  } catch (error) {
    showError('‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ' + error.message);
  } finally {
    if (loader) loader.classList.remove('active');
  }
});

// –í—ã—Ö–æ–¥
logoutBtn?.addEventListener('click', async () => {
  // –û—Ç–∫–ª—é—á–∞–µ–º real-time listeners –ø–µ—Ä–µ–¥ –≤—ã—Ö–æ–¥–æ–º
  if (userOrdersListener) {
    userOrdersListener();
    userOrdersListener = null;
  }
  if (adminOrdersListener) {
    adminOrdersListener();
    adminOrdersListener = null;
  }
  if (globalOrdersListener) {
    globalOrdersListener();
    globalOrdersListener = null;
  }
  lastOrderStatuses.clear();
  
  await auth.signOut();
});

// –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–∫—Ç–µ–π–ª—è
function editCocktail(id) {
  const cocktail = cocktailsData.find(c => c.id === id);
  if (cocktail) {
    const formTitle = document.getElementById('formTitle');
    console.log('üîç –ü—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–∫—Ç–µ–π–ª—è - —ç–ª–µ–º–µ–Ω—Ç formTitle –Ω–∞–π–¥–µ–Ω:', !!formTitle, formTitle ? formTitle.textContent : '–Ω–µ –Ω–∞–π–¥–µ–Ω');
    const cocktailId = document.getElementById('cocktailId');
    const cocktailName = document.getElementById('cocktailName');
    const cocktailIngredients = document.getElementById('cocktailIngredients');
    const cocktailMood = document.getElementById('cocktailMood');
    const cocktailAlcohol = document.getElementById('cocktailAlcohol');
    const cocktailCategory = document.getElementById('cocktailCategory');
    const previewImage = document.getElementById('previewImage');

    if (formTitle) {
      formTitle.innerHTML = '<i class="fas fa-edit"></i> –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–∫—Ç–µ–π–ª—å';
      console.log('‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∑–∞–≥–æ–ª–æ–≤–æ–∫: –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–∫—Ç–µ–π–ª—å');
    }
    if (cocktailId) cocktailId.value = cocktail.id;
    if (cocktailName) cocktailName.value = cocktail.name;
    if (cocktailIngredients) cocktailIngredients.value = cocktail.ingredients || '';
    if (cocktailMood) cocktailMood.value = cocktail.mood || '';
    if (cocktailAlcohol) cocktailAlcohol.value = cocktail.alcohol || '';
    
    const cocktailPrice = document.getElementById('cocktailPrice');
    if (cocktailPrice) cocktailPrice.value = cocktail.price || 500;
    
    if (cocktailCategory) cocktailCategory.value = cocktail.category || 'signature';

    if (cocktail.image) {
      if (previewImage) {
        previewImage.src = cocktail.image;
        previewImage.style.display = 'block';
      }
    } else {
      if (previewImage) {
        previewImage.style.display = 'none';
      }
    }
    
    console.log('üîç –ü–µ—Ä–µ–¥ –æ—Ç–∫—Ä—ã—Ç–∏–µ–º —Ñ–æ—Ä–º—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è - –∑–∞–≥–æ–ª–æ–≤–æ–∫:', formTitle ? formTitle.innerHTML : 'formTitle –Ω–µ –Ω–∞–π–¥–µ–Ω');
    openModal(cocktailFormModal); // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é
  }
}

// –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–∫—Ç–µ–π–ª—è
async function deleteCocktail(id) {
  if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç –∫–æ–∫—Ç–µ–π–ª—å?')) {
    try {
      await db.collection('cocktails').doc(id).delete();
      await loadCocktails();
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –∞–¥–º–∏–Ω—Å–∫–∏–π —Å–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è
      if (isAdmin) {
        updateAdminCocktailsList();
      }
      
      showSuccess('–ö–æ–∫—Ç–µ–π–ª—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω');
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∫–æ–∫—Ç–µ–π–ª—è:', error);
      showError('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∫–æ–∫—Ç–µ–π–ª—è');
    }
  }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã –∫–æ–∫—Ç–µ–π–ª—è
cocktailForm?.addEventListener('submit', async (e) => {
  e.preventDefault();
  
  const cocktailId = document.getElementById('cocktailId');
  const cocktailName = document.getElementById('cocktailName');
  const cocktailIngredients = document.getElementById('cocktailIngredients');
  const cocktailMood = document.getElementById('cocktailMood');
  const cocktailAlcohol = document.getElementById('cocktailAlcohol');
  const cocktailPrice = document.getElementById('cocktailPrice');
  const cocktailCategory = document.getElementById('cocktailCategory');
  const cocktailImage = document.getElementById('cocktailImage');

  if (!cocktailName || !cocktailIngredients) {
    showError('‚ùå –û—à–∏–±–∫–∞: –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.');
    return;
  }

  const id = cocktailId ? cocktailId.value : '';
  const name = cocktailName.value;
  const ingredients = cocktailIngredients.value;
  const mood = cocktailMood ? cocktailMood.value : '';
  const alcohol = cocktailAlcohol ? cocktailAlcohol.value : '';
  const price = cocktailPrice ? parseInt(cocktailPrice.value) : 500;
  const category = cocktailCategory ? cocktailCategory.value : '';
  const imageFile = cocktailImage ? cocktailImage.files[0] : null;
  
  try {
    let imageUrl = '';
    
    // –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω —Ñ–∞–π–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –∑–∞–≥—Ä—É–∂–∞–µ–º –µ–≥–æ
    if (imageFile) {
      const storageRef = storage.ref();
      const imageRef = storageRef.child(`cocktails/${Date.now()}_${imageFile.name}`);
      const snapshot = await imageRef.put(imageFile);
      imageUrl = await snapshot.ref.getDownloadURL();
    }
    
    const cocktailData = {
      name: name,
      ingredients: ingredients,
      mood: mood,
      alcohol: alcohol ? parseInt(alcohol) : null,
      price: price,
      category: category || 'signature', // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∞–≤—Ç–æ—Ä—Å–∫–∏–π, –µ—Å–ª–∏ –Ω–µ –≤—ã–±—Ä–∞–Ω–æ
      updatedAt: new Date()
    };
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å –Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ
    if (imageUrl) {
      cocktailData.image = imageUrl;
    } else if (!id) {
      // –ï—Å–ª–∏ –Ω–æ–≤—ã–π –∫–æ–∫—Ç–µ–π–ª—å –∏ –Ω–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, —Å—Ç–∞–≤–∏–º –∑–∞–≥–ª—É—à–∫—É
      cocktailData.image = 'https://i.pinimg.com/736x/5d/5d/5d/5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d.jpg';
    }
    
    if (id) {
      // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫–æ–∫—Ç–µ–π–ª—è
      await db.collection('cocktails').doc(id).update(cocktailData);
    } else {
      // –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–æ–∫—Ç–µ–π–ª—è
      cocktailData.createdAt = new Date();
      await db.collection('cocktails').add(cocktailData);
    }
    
    closeModal(cocktailFormModal); // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é
    await loadCocktails();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∞–¥–º–∏–Ω—Å–∫–∏–π —Å–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
    if (isAdmin) {
      updateAdminCocktailsList();
    }
    showSuccess(id ? '–ö–æ–∫—Ç–µ–π–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω' : '–ö–æ–∫—Ç–µ–π–ª—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω');
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–∫—Ç–µ–π–ª—è:', error);
    showError('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–∫—Ç–µ–π–ª—è');
  }
});

// –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
const cocktailImageInput = document.getElementById('cocktailImage');
if (cocktailImageInput) {
    cocktailImageInput.addEventListener('change', function(e) {
    const file = e.target.files[0];
    if (file) {
        const reader = new FileReader();
        reader.onload = function(e) {
        const preview = document.getElementById('previewImage');
        if (preview) {
            preview.src = e.target.result;
            preview.style.display = 'block';
        }
        };
        reader.readAsDataURL(file);
    }
    });
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —Å—Ç–æ–ø-–ª–∏—Å—Ç
addToStoplist?.addEventListener('click', async () => {
  if (!stoplistCocktails || !stopReason) {
    showError('‚ùå –û—à–∏–±–∫–∞: –ø–æ–ª—è –≤–≤–æ–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.');
    return;
  }

  const cocktailName = stoplistCocktails.value;
  const reason = stopReason.value;
  
  if (!cocktailName || !reason) {
    showError('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è');
    return;
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω –ª–∏ —É–∂–µ —ç—Ç–æ—Ç –∫–æ–∫—Ç–µ–π–ª—å –≤ —Å—Ç–æ–ø-–ª–∏—Å—Ç
  const alreadyInStoplist = stoplistData.some(item => item.cocktailName === cocktailName);
  if (alreadyInStoplist) {
    showError('–≠—Ç–æ—Ç –∫–æ–∫—Ç–µ–π–ª—å —É–∂–µ –≤ —Å—Ç–æ–ø-–ª–∏—Å—Ç–µ');
    return;
  }
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
  const confirmed = confirm(
    `–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–∫—Ç–µ–π–ª—å "${cocktailName}" –≤ —Å—Ç–æ–ø-–ª–∏—Å—Ç?\n\n` +
    `–ü—Ä–∏—á–∏–Ω–∞: ${reason}\n\n` +
    `–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ —Å–¥–µ–ª–∞–µ—Ç –∫–æ–∫—Ç–µ–π–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã–º –¥–ª—è –∑–∞–∫–∞–∑–∞.`
  );
  
  if (!confirmed) {
    return;
  }
  
  try {
    await db.collection('stoplist').add({
      cocktailName: cocktailName,
      reason: reason,
      timestamp: new Date().toLocaleString('ru-RU'),
      addedBy: isAdmin ? 'admin' : 'user'
    });
    
    // –û—á–∏—â–∞–µ–º –ø–æ–ª—è
    stopReason.value = '';
    stoplistCocktails.value = '';
    
    // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–æ–ø-–ª–∏—Å—Ç –∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Å–µ–ª–µ–∫—Ç
    await loadStoplist();
    showSuccess(`–ö–æ–∫—Ç–µ–π–ª—å "${cocktailName}" –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å—Ç–æ–ø-–ª–∏—Å—Ç`);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ —Å—Ç–æ–ø-–ª–∏—Å—Ç:', error);
    showError('–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ —Å—Ç–æ–ø-–ª–∏—Å—Ç');
  }
});

// –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ —Å—Ç–æ–ø-–ª–∏—Å—Ç–∞
async function removeFromStoplist(id) {
  try {
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–∫—Ç–µ–π–ª–µ –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º
    const stoplistItem = stoplistData.find(item => item.id === id);
    const cocktailName = stoplistItem ? stoplistItem.cocktailName : '–∫–æ–∫—Ç–µ–π–ª—å';
    const reason = stoplistItem ? stoplistItem.reason : '';
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    const confirmed = confirm(
      `–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∫–æ–∫—Ç–µ–π–ª—å "${cocktailName}" –∏–∑ —Å—Ç–æ–ø-–ª–∏—Å—Ç–∞?\n\n` +
      `–ü—Ä–∏—á–∏–Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: ${reason}\n\n` +
      `–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ —Å–¥–µ–ª–∞–µ—Ç –∫–æ–∫—Ç–µ–π–ª—å —Å–Ω–æ–≤–∞ –¥–æ—Å—Ç—É–ø–Ω—ã–º –¥–ª—è –∑–∞–∫–∞–∑–∞.`
    );
    
    if (!confirmed) {
      return;
    }
    
    await db.collection('stoplist').doc(id).delete();
    await loadStoplist();
    showSuccess(`–ö–æ–∫—Ç–µ–π–ª—å "${cocktailName}" —É–¥–∞–ª—ë–Ω –∏–∑ —Å—Ç–æ–ø-–ª–∏—Å—Ç–∞`);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ —Å—Ç–æ–ø-–ª–∏—Å—Ç–∞:', error);
    showError('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ —Å—Ç–æ–ø-–ª–∏—Å—Ç–∞');
  }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
statusButtons.forEach(btn => {
  btn.addEventListener('click', () => {
    const status = btn.getAttribute('data-status');
    changeOrderStatus(currentOrderId, status);
  });
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
checkSystemBtn?.addEventListener('click', async () => {
  const statusData = await monitorSystem();
  displaySystemStatus(statusData);
});

testWebhookBtn?.addEventListener('click', testWebhookServer);

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
const diagnoseBtn = document.getElementById('diagnoseBtn');
diagnoseBtn?.addEventListener('click', async () => {
  try {
    showSuccess('üîç –ó–∞–ø—É—Å–∫ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏...');
    
    const baseUrl = WEBHOOK_SERVER_URL.replace(/\/+$/, '');
    const response = await fetch(`${baseUrl}/diagnose`);
    
    if (!response.ok) {
      throw new Error(`HTTP ${response.status}: ${response.statusText}`);
    }
    
    const data = await response.json();
    
    console.log('üîç –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:', data);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
    const diagnosticResults = `
      <h4>üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã</h4>
      <div class="diagnostic-results">
        <h5>üåê –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:</h5>
        <ul>
          <li><strong>PORT:</strong> ${data.environment.PORT || '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù'}</li>
          <li><strong>RAILWAY_PUBLIC_DOMAIN:</strong> ${data.environment.RAILWAY_PUBLIC_DOMAIN || '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù'}</li>
          <li><strong>TELEGRAM_BOT_TOKEN:</strong> ${data.environment.TELEGRAM_BOT_TOKEN}</li>
          <li><strong>TELEGRAM_CHAT_ID:</strong> ${data.environment.TELEGRAM_CHAT_ID}</li>
          <li><strong>FIREBASE_PRIVATE_KEY_ID:</strong> ${data.environment.FIREBASE_PRIVATE_KEY_ID}</li>
          <li><strong>FIREBASE_CLIENT_EMAIL:</strong> ${data.environment.FIREBASE_CLIENT_EMAIL}</li>
          <li><strong>FIREBASE_PRIVATE_KEY:</strong> ${data.environment.FIREBASE_PRIVATE_KEY}</li>
        </ul>
        <p><strong>–í—Ä–µ–º—è:</strong> ${new Date(data.timestamp).toLocaleString('ru-RU')}</p>
      </div>
    `;
    
    // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
    const diagnosticModal = document.createElement('div');
    diagnosticModal.className = 'modal';
    diagnosticModal.innerHTML = `
      <div class="modal-content">
        <span class="close">&times;</span>
        ${diagnosticResults}
      </div>
    `;
    
    document.body.appendChild(diagnosticModal);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    diagnosticModal.style.display = 'block';
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è
    const closeBtn = diagnosticModal.querySelector('.close');
    closeBtn.addEventListener('click', () => {
      document.body.removeChild(diagnosticModal);
    });
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    diagnosticModal.addEventListener('click', (e) => {
      if (e.target === diagnosticModal) {
        document.body.removeChild(diagnosticModal);
      }
    });
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:', error);
    
    // Fallback –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –±–∞–∑–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    const fallbackResults = `
      <h4>üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã (Fallback)</h4>
      <div class="diagnostic-results">
        <h5>‚ö†Ô∏è Endpoint /diagnose –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω</h5>
        <p><strong>URL webhook —Å–µ—Ä–≤–µ—Ä–∞:</strong> ${WEBHOOK_SERVER_URL}</p>
        <p><strong>–°—Ç–∞—Ç—É—Å:</strong> Endpoint –Ω–µ –Ω–∞–π–¥–µ–Ω (404)</p>
        <p><strong>–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:</strong></p>
        <ul>
          <li>Railway —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–µ—Ç –Ω–µ webhook-server.js</li>
          <li>–°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω</li>
          <li>–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Railway</li>
        </ul>
        <p><strong>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</strong></p>
        <ul>
          <li>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ Railway Dashboard ‚Üí Logs</li>
          <li>–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è webhook-server.js</li>
          <li>–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Railway —Å–µ—Ä–≤–∏—Å</li>
        </ul>
      </div>
    `;
    
    // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è fallback –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
    const diagnosticModal = document.createElement('div');
    diagnosticModal.className = 'modal';
    diagnosticModal.innerHTML = `
      <div class="modal-content">
        <span class="close">&times;</span>
        ${fallbackResults}
      </div>
    `;
    
    document.body.appendChild(diagnosticModal);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    diagnosticModal.style.display = 'block';
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è
    const closeBtn = diagnosticModal.querySelector('.close');
    closeBtn.addEventListener('click', () => {
      document.body.removeChild(diagnosticModal);
    });
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    diagnosticModal.addEventListener('click', (e) => {
      if (e.target === diagnosticModal) {
        document.body.removeChild(diagnosticModal);
      }
    });
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ URL webhook —Å–µ—Ä–≤–µ—Ä–∞
const setupWebhookUrlBtn = document.getElementById('setupWebhookUrlBtn');
setupWebhookUrlBtn?.addEventListener('click', () => {
  const currentUrl = getWebhookServerUrl();
  const newUrl = prompt(`üåê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ URL webhook —Å–µ—Ä–≤–µ—Ä–∞\n\n–¢–µ–∫—É—â–∏–π URL: ${currentUrl}\n\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π URL:`, currentUrl);
  
  if (newUrl && newUrl !== currentUrl) {
    if (newUrl.startsWith('http://') || newUrl.startsWith('https://')) {
      updateWebhookServerUrl(newUrl);
      showSuccess(`‚úÖ URL webhook —Å–µ—Ä–≤–µ—Ä–∞ –æ–±–Ω–æ–≤–ª–µ–Ω: ${newUrl}`);
      
      // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏—Å—Ç–µ–º—É –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è URL
      setTimeout(async () => {
        const statusData = await monitorSystem();
        displaySystemStatus(statusData);
      }, 1000);
    } else {
      showError('‚ùå URL –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å http:// –∏–ª–∏ https://');
    }
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Railway URL
const forceRailwayBtn = document.getElementById('forceRailwayBtn');
forceRailwayBtn?.addEventListener('click', () => {
  forceRailwayUrl();
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å–±—Ä–æ—Å–∞ URL
const resetUrlBtn = document.getElementById('resetUrlBtn');
resetUrlBtn?.addEventListener('click', () => {
  const confirmed = confirm('‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï!\n\n–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ URL webhook —Å–µ—Ä–≤–µ—Ä–∞?\n\n–°—Ç—Ä–∞–Ω–∏—Ü–∞ –±—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω–∞.');
  
  if (confirmed) {
    showSuccess('üîÑ –°–±—Ä–∞—Å—ã–≤–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ URL...');
    resetWebhookServerUrl();
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∞–≤—Ç–æ–Ω–∞—Å—Ç—Ä–æ–π–∫–∏
const autoSetupBtn = document.getElementById('autoSetupBtn');
autoSetupBtn?.addEventListener('click', async () => {
  showSuccess('üöÄ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–Ω–∞—Å—Ç—Ä–æ–π–∫–∏...');
  
  try {
    // –®–∞–≥ 1: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ URL webhook —Å–µ—Ä–≤–µ—Ä–∞
    const railwayUrl = prompt('üåê –í–≤–µ–¥–∏—Ç–µ –≤–∞—à Railway URL (–Ω–∞–ø—Ä–∏–º–µ—Ä: https://your-app.railway.app):');
    
    if (!railwayUrl) {
      showError('‚ùå URL –Ω–µ –≤–≤–µ–¥–µ–Ω. –ê–≤—Ç–æ–Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.');
      return;
    }
    
    if (!railwayUrl.startsWith('http://') && !railwayUrl.startsWith('https://')) {
      showError('‚ùå URL –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å http:// –∏–ª–∏ https://');
      return;
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º URL
    updateWebhookServerUrl(railwayUrl);
    showSuccess('‚úÖ URL webhook —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
    
    // –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏—Å—Ç–µ–º—É
    showSuccess('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏—Å—Ç–µ–º—É...');
    const statusData = await monitorSystem();
    displaySystemStatus(statusData);
    
    // –®–∞–≥ 3: –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Telegram webhook
    showSuccess('üì± –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Telegram webhook...');
    await setupTelegramWebhook();
    
    showSuccess('üéâ –ê–≤—Ç–æ–Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
    
  } catch (error) {
    showError(`‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ–Ω–∞—Å—Ç—Ä–æ–π–∫–∏: ${error.message}`);
    console.error('‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ–Ω–∞—Å—Ç—Ä–æ–π–∫–∏:', error);
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∑–∞–∫–∞–∑–æ–≤
cleanupOrdersBtn?.addEventListener('click', async () => {
  const confirmed = confirm('‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï!\n\n–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –í–°–ï –∑–∞–∫–∞–∑—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö?\n\n–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å!');
  
  if (!confirmed) {
    console.log('‚ùå –û—á–∏—Å—Ç–∫–∞ –∑–∞–∫–∞–∑–æ–≤ –æ—Ç–º–µ–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º');
    return;
  }
  
  const button = cleanupOrdersBtn;
  const originalText = button.innerHTML;
  
  try {
    button.disabled = true;
    button.innerHTML = '<i class="fas fa-spinner fa-spin"></i> –û—á–∏—â–∞–µ–º...';
    
    console.log('üßπ –ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤...');
    
    const response = await fetch(`${WEBHOOK_SERVER_URL}/cleanup-orders`, {
      method: 'DELETE',
      headers: {
        'Content-Type': 'application/json'
      }
    });
    
    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }
    
    const result = await response.json();
    
    if (result.success) {
      console.log('‚úÖ –ó–∞–∫–∞–∑—ã —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω—ã:', result);
      alert(`‚úÖ –£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ ${result.deletedCount} –∑–∞–∫–∞–∑–æ–≤!`);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤
      if (auth.currentUser) {
        await loadOrderHistory(auth.currentUser.uid);
        await loadAdminOrders();
      }
    } else {
      throw new Error(result.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∑–∞–∫–∞–∑–æ–≤:', error);
    alert(`‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∑–∞–∫–∞–∑–æ–≤: ${error.message}`);
  } finally {
    button.disabled = false;
    button.innerHTML = originalText;
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è Telegram —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
setupWebhookBtn?.addEventListener('click', setupTelegramWebhook);
deleteWebhookBtn?.addEventListener('click', deleteTelegramWebhook);
getWebhookInfoBtn?.addEventListener('click', getTelegramWebhookInfo);
sendTestMessageBtn?.addEventListener('click', sendTestMessage);

// –ó–∞–∫–∞–∑ (–∫–Ω–æ–ø–∫–∞)
document.addEventListener('click', (e) => {
  const btn = e.target.closest('.order-btn');
  if (btn && !btn.disabled && !btn.classList.contains('loading')) {
    const user = auth.currentUser;
    if (!user) {
      showError('üîí –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –∏–ª–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –¥–ª—è –∑–∞–∫–∞–∑–∞.');
      return;
    }
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
    btn.classList.add('loading');
    btn.disabled = true;
    const originalText = btn.innerHTML;
    btn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> –ó–∞–≥—Ä—É–∂–∞–µ–º...';
    
    const name = btn.getAttribute('data-name');
    const price = parseInt(btn.getAttribute('data-price')) || 500;
    // üëá –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ–∫—Ç–µ–π–ª—è –∏–∑ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏
    const card = btn.closest('.cocktail-card');
    const imgElement = card?.querySelector('img');
    const imgSrc = imgElement ? imgElement.src : '';
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ä–µ–∞–ª—å–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–ª–∏ —ç—Ç–æ –∑–∞–≥–ª—É—à–∫–∞
    const hasRealImage = imgSrc && !imgSrc.includes('5d5d5d') && !imgSrc.includes('placeholder');
    
    currentOrder = { 
      name, 
      user: user.displayName || "–ì–æ—Å—Ç—å", 
      userId: user.uid,
      displayTime: new Date().toLocaleString('ru-RU'),
      image: hasRealImage ? imgSrc : '',
      status: 'pending', // –°—Ç–∞—Ç—É—Å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
      price: price,
      originalPrice: price,
      discount: 0,
      promoCode: null
    };
    if (orderSummary) {
        orderSummary.innerHTML = `
        <strong>üç∏ –ö–æ–∫—Ç–µ–π–ª—å:</strong> ${name}<br>
        <strong>üì¨ –í–∞—à–µ –∏–º—è:</strong> ${currentOrder.user}
        `;
    }
    
    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ü–µ–Ω—É
    const orderPriceEl = document.getElementById('orderPrice');
    const totalPriceEl = document.getElementById('totalPrice');
    if (orderPriceEl) orderPriceEl.textContent = `${price} ‚ÇΩ`;
    if (totalPriceEl) totalPriceEl.textContent = `${price} ‚ÇΩ`;
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–æ–º–æ–∫–æ–¥
    const promoCodeInput = document.getElementById('promoCodeInput');
    const promoMessage = document.getElementById('promoMessage');
    const discountInfo = document.getElementById('discountInfo');
    if (promoCodeInput) promoCodeInput.value = '';
    if (promoMessage) {
      promoMessage.textContent = '';
      promoMessage.classList.remove('success', 'error');
    }
    if (discountInfo) discountInfo.style.display = 'none';
    // üëá –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏ –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–ª–∏ –∑–∞–≥–ª—É—à–∫—É
    const orderImagePreview = document.getElementById('orderImagePreview');
    if (orderImagePreview) {
        if (hasRealImage && imgSrc) {
            orderImagePreview.src = imgSrc;
            orderImagePreview.style.display = 'block';
            orderImagePreview.alt = name;
        } else {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥–ª—É—à–∫—É –¥–ª—è –∫–æ–∫—Ç–µ–π–ª–µ–π –±–µ–∑ —Ñ–æ—Ç–æ
            orderImagePreview.style.display = 'none';
            // –°–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫—É, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
            let placeholder = document.querySelector('.order-image-placeholder');
            if (!placeholder) {
                placeholder = document.createElement('div');
                placeholder.className = 'order-image-placeholder';
                placeholder.innerHTML = `
                    <i class="fas fa-camera"></i>
                    <p>–ö–æ–∫—Ç–µ–π–ª—å —É–∂–µ –¥–µ–ª–∞–µ—Ç —Å–µ–ª—Ñ–∏,<br>—Å–∫–æ—Ä–æ –≤—ã–ª–æ–∂–∏—Ç —Å—é–¥–∞</p>
                `;
                orderImagePreview.parentNode.appendChild(placeholder);
            }
            placeholder.style.display = 'block';
        }
    }
    openModal(orderModal); // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é
    
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –ø–æ—Å–ª–µ –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    btn.classList.remove('loading');
    btn.disabled = false;
    btn.innerHTML = originalText;
  }
});

// –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
confirmOrderBtn?.addEventListener('click', async () => {
  if (!currentOrder) return;
  
  // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∫–ª–∏–∫–∏
  if (confirmOrderBtn.disabled || confirmOrderBtn.classList.contains('loading')) {
    return;
  }
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
  confirmOrderBtn.classList.add('loading');
  confirmOrderBtn.disabled = true;
  const originalText = confirmOrderBtn.innerHTML;
  confirmOrderBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–∫–∞–∑...';

  try {
    // –ü–æ–ª—É—á–∞–µ–º —Å–ª–µ–¥—É—é—â—É—é –ø–æ–∑–∏—Ü–∏—é –≤ –æ—á–µ—Ä–µ–¥–∏
    const queuePosition = await getNextQueuePosition();
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–∫–∞–∑ –≤ Firestore —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ –ø–æ–ª—è–º–∏ –≤—Ä–µ–º–µ–Ω–∏ –∏ –ø–æ–∑–∏—Ü–∏–µ–π –≤ –æ—á–µ—Ä–µ–¥–∏
    const now = new Date();
    const orderData = {
      ...currentOrder,
      displayTime: now.toLocaleString('ru-RU'),
      queuePosition: queuePosition, // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é –≤ –æ—á–µ—Ä–µ–¥–∏
      status: 'pending', // –ù–∞—á–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å
      createdAt: firebase.firestore.FieldValue.serverTimestamp ? firebase.firestore.FieldValue.serverTimestamp() : now
    };
    const docRef = await db.collection('orders').add(orderData);
    
    // –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await createOrUpdateBill(currentOrder, docRef.id);
    
    // –ï—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –ø—Ä–æ–º–æ–∫–æ–¥, —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π
    if (currentOrder.promoCode) {
      try {
        await db.collection('promocodes').doc(currentOrder.promoCode).update({
          usedCount: firebase.firestore.FieldValue.increment(1),
          lastUsedAt: firebase.firestore.FieldValue.serverTimestamp()
        });
        console.log(`‚úÖ –ü—Ä–æ–º–æ–∫–æ–¥ ${currentOrder.promoCode} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω`);
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–∞ –ø—Ä–æ–º–æ–∫–æ–¥–∞:', error);
      }
    }

    const promoInfo = currentOrder.promoCode ? `\nüí≥ *–ü—Ä–æ–º–æ–∫–æ–¥:* ${currentOrder.promoCode} (-${currentOrder.promoDiscount}%)` : '';
    const priceInfo = currentOrder.discount > 0 
      ? `\nüí∞ *–¶–µ–Ω–∞:* ~~${currentOrder.originalPrice}‚ÇΩ~~ ‚Üí ${currentOrder.price}‚ÇΩ`
      : `\nüí∞ *–¶–µ–Ω–∞:* ${currentOrder.price}‚ÇΩ`;
    
    const message = `
üÜï *–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –≤ Asafiev Bar!*
üç∏ *–ö–æ–∫—Ç–µ–π–ª—å:* ${currentOrder.name}
üë§ *–ò–º—è –∫–ª–∏–µ–Ω—Ç–∞:* ${currentOrder.user}
üïí *–í—Ä–µ–º—è:* ${currentOrder.displayTime}${priceInfo}${promoInfo}
üÜî *ID –∑–∞–∫–∞–∑–∞:* ${docRef.id}
        `.trim();

    // –°–æ–∑–¥–∞–µ–º inline-–∫–Ω–æ–ø–∫–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–º
    const inlineKeyboard = {
      inline_keyboard: [
        [
          { text: "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data: `confirmed_${docRef.id}` },
          { text: "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data: `cancelled_${docRef.id}` }
        ],
        [
          { text: "üë®‚Äçüç≥ –ì–æ—Ç–æ–≤–∏—Ç—Å—è", callback_data: `preparing_${docRef.id}` },
          { text: "üç∏ –ì–æ—Ç–æ–≤", callback_data: `ready_${docRef.id}` }
        ],
        [
          { text: "‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω", callback_data: `completed_${docRef.id}` }
        ]
      ]
    };

    // –ò–°–ü–†–ê–í–õ–ï–ù–û: –£–±—Ä–∞–Ω –ª–∏—à–Ω–∏–π –ø—Ä–æ–±–µ–ª –≤ URL Telegram API
    const telegramUrl = `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`;
    const response = await fetch(telegramUrl, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        chat_id: TELEGRAM_CHAT_ID,
        text: message,
        parse_mode: 'Markdown',
        reply_markup: inlineKeyboard
      })
    });
    
    if (!response.ok) {
      throw new Error(`Telegram API error: ${response.status}`);
    }

    // –í–∏–±—Ä–∞—Ü–∏—è –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –∑–∞–∫–∞–∑–µ (–µ—Å–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è)
    if (navigator.vibrate) {
      navigator.vibrate([200, 100, 200]);
    } else if ('ontouchstart' in window || navigator.maxTouchPoints > 0) {
      // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –≤–∏–±—Ä–∞—Ü–∏—è –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
      try {
        if (window.Telegram && window.Telegram.WebApp) {
          window.Telegram.WebApp.HapticFeedback.impactOccurred('medium');
        }
      } catch (e) {
        console.log('Haptic feedback not available');
      }
    }

    // –ê–Ω–∏–º–∞—Ü–∏—è —à–∞–º–ø–∞–Ω—Å–∫–æ–≥–æ
    createChampagneAnimation();

    // –û—á–∏—â–∞–µ–º –∑–∞–≥–ª—É—à–∫—É –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –∑–∞–∫–∞–∑–µ
    const placeholder = document.querySelector('.order-image-placeholder');
    if (placeholder) {
      placeholder.style.display = 'none';
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    closeModal(orderModal); // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é
    openModal(notificationModal); // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é
    currentOrder = null;
    
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞:", error);
    showError('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑.');
  } finally {
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–∫–∏
    confirmOrderBtn.classList.remove('loading');
    confirmOrderBtn.disabled = false;
    confirmOrderBtn.innerHTML = originalText;
  }
});

// === –°–ò–°–¢–ï–ú–ê –°–ß–ï–¢–û–í ===

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—á–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function createOrUpdateBill(orderData, orderId) {
  try {
    const user = firebase.auth().currentUser;
    if (!user) return;

    // –ò—â–µ–º –æ—Ç–∫—Ä—ã—Ç—ã–π —Å—á–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const billsSnapshot = await db.collection('bills')
      .where('userId', '==', user.uid)
      .where('status', '==', 'open')
      .get();

    const billItem = {
      orderId: orderId,
      cocktailId: orderData.cocktailId || '',
      cocktailName: orderData.name,
      cocktailImage: orderData.image || '',
      price: orderData.price,
      originalPrice: orderData.originalPrice || orderData.price,
      discount: orderData.discount || 0,
      promoCode: orderData.promoCode || null,
      promoDiscount: orderData.promoDiscount || 0,
      timestamp: new Date(), // –ò—Å–ø–æ–ª—å–∑—É–µ–º new Date() –≤–º–µ—Å—Ç–æ serverTimestamp() –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞
      status: orderData.status || 'pending',
      rated: false
    };

    if (billsSnapshot.empty) {
      // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Å—á–µ—Ç
      await db.collection('bills').add({
        userId: user.uid,
        userName: user.displayName || '–ì–æ—Å—Ç—å',
        userPhone: user.phoneNumber || user.email || '',
        items: [billItem],
        totalAmount: orderData.price,
        status: 'open',
        createdAt: firebase.firestore.FieldValue.serverTimestamp(),
        updatedAt: firebase.firestore.FieldValue.serverTimestamp(),
        paidAt: null,
        paymentMethod: null,
        paymentId: null
      });
      console.log('‚úÖ –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π —Å—á–µ—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    } else {
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Å—á–µ—Ç
      const billDoc = billsSnapshot.docs[0];
      const billData = billDoc.data();
      const currentItems = billData.items || [];
      const currentTotal = billData.totalAmount || 0;

      await billDoc.ref.update({
        items: firebase.firestore.FieldValue.arrayUnion(billItem),
        totalAmount: currentTotal + orderData.price,
        updatedAt: firebase.firestore.FieldValue.serverTimestamp()
      });
      console.log('‚úÖ –°—á–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω');
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è/–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—á–µ—Ç–∞:', error);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—á–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function showMyBill() {
  const user = firebase.auth().currentUser;
  if (!user) {
    showError('–í–æ–π–¥–∏—Ç–µ, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å–≤–æ–π —Å—á–µ—Ç');
    return;
  }

  try {
    // –ü–æ–ª—É—á–∞–µ–º –æ—Ç–∫—Ä—ã—Ç—ã–π —Å—á–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const billsSnapshot = await db.collection('bills')
      .where('userId', '==', user.uid)
      .where('status', '==', 'open')
      .get();

    if (billsSnapshot.empty) {
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
      const modal = document.createElement('div');
      modal.className = 'modal';
      modal.style.display = 'block';
      modal.innerHTML = `
        <div class="modal-content">
          <span class="close">&times;</span>
          <div style="text-align: center; padding: 2rem;">
            <div style="font-size: 3rem; margin-bottom: 1rem;">üìã</div>
            <h3>–°—á–µ—Ç –ø—É—Å—Ç</h3>
            <p style="color: #6c757d; margin-top: 1rem;">–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤ –≤ —Å—á–µ—Ç–µ</p>
          </div>
        </div>
      `;
      document.body.appendChild(modal);
      document.body.classList.add('modal-open');
      
      const closeBtn = modal.querySelector('.close');
      closeBtn.addEventListener('click', () => {
        modal.remove();
        document.body.classList.remove('modal-open');
      });
      
      modal.addEventListener('click', (e) => {
        if (e.target === modal) {
          modal.remove();
          document.body.classList.remove('modal-open');
        }
      });
      return;
    }

    const billDoc = billsSnapshot.docs[0];
    const billData = billDoc.data();
    const billId = billDoc.id;

    // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å—á–µ—Ç–∞
    showBillModal(billData, billId);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—á–µ—Ç–∞:', error);
    showError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—á–µ—Ç–∞');
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å—á–µ—Ç–∞
function showBillModal(billData, billId) {
  const items = billData.items || [];
  
  // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –≤—Ä–µ–º–µ–Ω–∏ (–Ω–æ–≤—ã–µ —Å–≤–µ—Ä—Ö—É)
  items.sort((a, b) => {
    if (!a.timestamp || !b.timestamp) return 0;
    return b.timestamp - a.timestamp;
  });

  // –°–æ–∑–¥–∞–µ–º HTML –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å—á–µ—Ç–∞
  const itemsHTML = items.map(item => {
    const statusText = getStatusText(item.status);
    const statusIcon = getStatusIcon(item.status);
    const priceDisplay = item.discount > 0 
      ? `<span class="bill-item-original-price">${item.originalPrice} ‚ÇΩ</span> ${item.price} ‚ÇΩ`
      : `${item.price} ‚ÇΩ`;

    return `
      <div class="bill-item" data-status="${item.status}">
        ${item.cocktailImage ? `<img src="${item.cocktailImage}" alt="${item.cocktailName}" class="bill-item-image">` : ''}
        <div class="bill-item-info">
          <div class="bill-item-name">${item.cocktailName}</div>
          ${item.promoCode ? `<div class="bill-item-promo">üé´ ${item.promoCode} (-${item.promoDiscount}%)</div>` : ''}
          <div class="bill-item-status">
            <span class="status-icon">${statusIcon}</span>
            <span class="status-text">${statusText}</span>
          </div>
        </div>
        <div class="bill-item-price">${priceDisplay}</div>
      </div>
    `;
  }).join('');

  // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
  const modal = document.createElement('div');
  modal.id = 'billModal';
  modal.className = 'modal bill-modal';
  modal.style.display = 'block';

  modal.innerHTML = `
    <div class="modal-content bill-content">
      <span class="close">&times;</span>
      <h3><i class="fas fa-receipt"></i> –ú–æ–π —Å—á–µ—Ç</h3>
      
      <div class="bill-header">
        <div class="bill-user-info">
          <i class="fas fa-user"></i> ${billData.userName}
        </div>
        <div class="bill-items-count">
          <i class="fas fa-shopping-bag"></i> ${items.length} ${getItemsWord(items.length)}
        </div>
      </div>

      <div class="bill-items">
        ${itemsHTML || '<p class="no-items">–ù–µ—Ç –∑–∞–∫–∞–∑–æ–≤</p>'}
      </div>

      <div class="bill-total">
        <span>–ò—Ç–æ–≥–æ –∫ –æ–ø–ª–∞—Ç–µ:</span>
        <span class="total-amount">${billData.totalAmount} ‚ÇΩ</span>
      </div>

      <div class="bill-footer-note">
        <i class="fas fa-info-circle"></i>
        –û–ø–ª–∞—Ç–∞ —Å—á–µ—Ç–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –∫–æ–Ω—Ü–µ –≤–µ—á–µ—Ä–∞
      </div>
    </div>
  `;

  document.body.appendChild(modal);
  document.body.classList.add('modal-open');

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è
  const closeBtn = modal.querySelector('.close');
  closeBtn.addEventListener('click', () => {
    modal.remove();
    document.body.classList.remove('modal-open');
  });

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  modal.addEventListener('click', (e) => {
    if (e.target === modal) {
      modal.remove();
      document.body.classList.remove('modal-open');
    }
  });
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
function getStatusIcon(status) {
  const icons = {
    'pending': '‚è≥',
    'confirmed': '‚úÖ',
    'preparing': 'üë®‚Äçüç≥',
    'ready': 'üç∏',
    'completed': '‚úÖ',
    'cancelled': '‚ùå'
  };
  return icons[status] || '‚è≥';
}

function getItemsWord(count) {
  if (count % 10 === 1 && count % 100 !== 11) return '–ø–æ–∑–∏—Ü–∏—è';
  if ([2, 3, 4].includes(count % 10) && ![12, 13, 14].includes(count % 100)) return '–ø–æ–∑–∏—Ü–∏–∏';
  return '–ø–æ–∑–∏—Ü–∏–π';
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏ —Å—á–µ—Ç–æ–≤
async function loadBillHistory(userId) {
  try {
    const billHistoryList = document.getElementById('billHistoryList');
    if (!billHistoryList) return;
    
    billHistoryList.innerHTML = '<p style="text-align: center; padding: 2rem;">–ó–∞–≥—Ä—É–∑–∫–∞...</p>';
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –í–°–ï —Å—á–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∏ –æ—Ç–∫—Ä—ã—Ç—ã–µ, –∏ –æ–ø–ª–∞—á–µ–Ω–Ω—ã–µ)
    const billsSnapshot = await db.collection('bills')
      .where('userId', '==', userId)
      .get();
    
    if (billsSnapshot.empty) {
      billHistoryList.innerHTML = '<p class="no-items">–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Å—á–µ—Ç–æ–≤</p>';
      return;
    }
    
    billHistoryList.innerHTML = '';
    
    // –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ —Å—á–µ—Ç–∞ –∏ —Å–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ
    const bills = [];
    billsSnapshot.forEach(doc => {
      bills.push({
        id: doc.id,
        data: doc.data()
      });
    });
    
    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –¥–∞—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è (–Ω–æ–≤—ã–µ —Å–≤–µ—Ä—Ö—É)
    bills.sort((a, b) => {
      const aTime = a.data.createdAt?.toDate ? a.data.createdAt.toDate().getTime() : 0;
      const bTime = b.data.createdAt?.toDate ? b.data.createdAt.toDate().getTime() : 0;
      return bTime - aTime;
    });
    
    // –°–æ–∑–¥–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏
    bills.forEach(bill => {
      const billCard = createBillHistoryCard(bill.data, bill.id);
      billHistoryList.appendChild(billCard);
    });
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏ —Å—á–µ—Ç–æ–≤:', error);
    const billHistoryList = document.getElementById('billHistoryList');
    if (billHistoryList) {
      billHistoryList.innerHTML = '<p class="error">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏ —Å—á–µ—Ç–æ–≤</p>';
    }
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏ —Å—á–µ—Ç–∞ –≤ –∏—Å—Ç–æ—Ä–∏–∏
function createBillHistoryCard(billData, billId) {
  const card = document.createElement('div');
  card.className = 'bill-history-card';
  card.setAttribute('data-status', billData.status);
  
  const items = billData.items || [];
  const createdDate = billData.createdAt?.toDate ? billData.createdAt.toDate().toLocaleDateString('ru-RU', {
    day: 'numeric',
    month: 'long',
    year: 'numeric',
    hour: '2-digit',
    minute: '2-digit'
  }) : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –¥–∞—Ç–∞';
  
  const statusText = billData.status === 'open' ? '–û—Ç–∫—Ä—ã—Ç' : billData.status === 'paid' ? '–û–ø–ª–∞—á–µ–Ω' : '–ó–∞–∫—Ä—ã—Ç';
  const statusIcon = billData.status === 'open' ? 'üü¢' : billData.status === 'paid' ? '‚úÖ' : '‚ö™';
  
  // –°–æ–∑–¥–∞–µ–º –∫—Ä–∞—Ç–∫–∏–π —Å–ø–∏—Å–æ–∫ –∫–æ–∫—Ç–µ–π–ª–µ–π (–ø–µ—Ä–≤—ã–µ 3)
  const displayItems = items.slice(0, 3);
  const moreCount = items.length - 3;
  
  const itemsHTML = displayItems.map(item => `
    <div class="bill-history-item">
      <span class="item-name">${item.cocktailName}</span>
      <span class="item-price">${item.price} ‚ÇΩ</span>
    </div>
  `).join('');
  
  const moreText = moreCount > 0 ? `<div class="bill-history-more">+ –µ—â–µ ${moreCount} ${getItemsWord(moreCount)}</div>` : '';
  
  card.innerHTML = `
    <div class="bill-history-header">
      <div class="bill-history-date">${statusIcon} ${createdDate}</div>
      <div class="bill-history-status">${statusText}</div>
    </div>
    
    <div class="bill-history-items">
      ${itemsHTML}
      ${moreText}
    </div>
    
    <div class="bill-history-footer">
      <span class="bill-history-total-label">–ò—Ç–æ–≥–æ:</span>
      <span class="bill-history-total-amount">${billData.totalAmount} ‚ÇΩ</span>
    </div>
    
    <button class="bill-history-details-btn" data-bill-id="${billId}">
      <i class="fas fa-eye"></i> –ü–æ–¥—Ä–æ–±–Ω–µ–µ
    </button>
  `;
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ü–æ–¥—Ä–æ–±–Ω–µ–µ"
  const detailsBtn = card.querySelector('.bill-history-details-btn');
  detailsBtn.addEventListener('click', () => {
    showBillDetailsModal(billData, billId);
  });
  
  return card;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π —Å—á–µ—Ç–∞
function showBillDetailsModal(billData, billId) {
  const modal = document.createElement('div');
  modal.className = 'modal bill-details-modal';
  modal.style.display = 'block';
  
  const items = billData.items || [];
  const createdDate = billData.createdAt?.toDate ? billData.createdAt.toDate().toLocaleDateString('ru-RU', {
    day: 'numeric',
    month: 'long',
    year: 'numeric',
    hour: '2-digit',
    minute: '2-digit'
  }) : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –¥–∞—Ç–∞';
  
  const statusText = billData.status === 'open' ? '–û—Ç–∫—Ä—ã—Ç' : billData.status === 'paid' ? '–û–ø–ª–∞—á–µ–Ω' : '–ó–∞–∫—Ä—ã—Ç';
  
  // –°–æ–∑–¥–∞–µ–º HTML –¥–ª—è –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
  const itemsHTML = items.map(item => {
    const statusIcon = getStatusIcon(item.status);
    const statusText = getStatusText(item.status);
    const priceDisplay = item.discount > 0 
      ? `<span class="bill-item-original-price">${item.originalPrice} ‚ÇΩ</span> ${item.price} ‚ÇΩ`
      : `${item.price} ‚ÇΩ`;
    
    return `
      <div class="bill-item" data-status="${item.status}">
        ${item.cocktailImage ? `<img src="${item.cocktailImage}" alt="${item.cocktailName}" class="bill-item-image">` : ''}
        <div class="bill-item-info">
          <div class="bill-item-name">${item.cocktailName}</div>
          ${item.promoCode ? `<div class="bill-item-promo">üé´ ${item.promoCode} (-${item.promoDiscount}%)</div>` : ''}
          <div class="bill-item-status">
            <span class="status-icon">${statusIcon}</span>
            <span class="status-text">${statusText}</span>
          </div>
        </div>
        <div class="bill-item-price">${priceDisplay}</div>
      </div>
    `;
  }).join('');
  
  modal.innerHTML = `
    <div class="modal-content bill-content">
      <span class="close">&times;</span>
      <h3><i class="fas fa-file-invoice"></i> –°—á–µ—Ç #${billId.substring(0, 8)}</h3>
      
      <div class="bill-header">
        <div class="bill-user-info">
          <i class="fas fa-user"></i> ${billData.userName}
        </div>
        <div class="bill-items-count">
          <i class="fas fa-calendar-alt"></i> ${createdDate}
        </div>
      </div>
      
      <div class="bill-status-badge ${billData.status}">
        ${statusText}
      </div>

      <div class="bill-items">
        ${itemsHTML}
      </div>

      <div class="bill-total">
        <span>–ò—Ç–æ–≥–æ:</span>
        <span class="total-amount">${billData.totalAmount} ‚ÇΩ</span>
      </div>
    </div>
  `;
  
  document.body.appendChild(modal);
  document.body.classList.add('modal-open');
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è
  const closeBtn = modal.querySelector('.close');
  closeBtn.addEventListener('click', () => {
    modal.remove();
    document.body.classList.remove('modal-open');
  });
  
  modal.addEventListener('click', (e) => {
    if (e.target === modal) {
      modal.remove();
      document.body.classList.remove('modal-open');
    }
  });
}

// === –ö–û–ù–ï–¶ –°–ò–°–¢–ï–ú–´ –°–ß–ï–¢–û–í ===

// –°–æ–∑–¥–∞–Ω–∏–µ –∞–Ω–∏–º–∞—Ü–∏–∏ —à–∞–º–ø–∞–Ω—Å–∫–æ–≥–æ
function createChampagneAnimation() {
  if (!champagneAnimation) return;
  champagneAnimation.innerHTML = '';
  for (let i = 0; i < 50; i++) {
    const bubble = document.createElement('div');
    bubble.className = 'champagne-bubble';
    bubble.style.left = Math.random() * 100 + '%';
    bubble.style.animationDelay = Math.random() * 2 + 's';
    bubble.style.width = (Math.random() * 10 + 5) + 'px';
    bubble.style.height = bubble.style.width;
    champagneAnimation.appendChild(bubble);
  }
  
  // –£–¥–∞–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
  setTimeout(() => {
    if (champagneAnimation) champagneAnimation.innerHTML = '';
  }, 3000);
}

// –ü–æ–∫–∞–∑ –æ—à–∏–±–∫–∏
function showError(message) {
  if (errorMessage) errorMessage.textContent = message;
  openModal(errorModal); // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é
}

// –ü–æ–∫–∞–∑ —É—Å–ø–µ—Ö–∞
function showSuccess(message) {
  const successContent = document.querySelector('.success-content p');
  if (successContent) successContent.textContent = message;
  openModal(successModal); // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é
}

// ============================================
// –°–ò–°–¢–ï–ú–ê –ü–†–û–ú–û–ö–û–î–û–í
// ============================================

// –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞
const applyPromoBtn = document.getElementById('applyPromoBtn');
applyPromoBtn?.addEventListener('click', async () => {
  const promoCodeInput = document.getElementById('promoCodeInput');
  const promoMessage = document.getElementById('promoMessage');
  const promoCode = promoCodeInput?.value.trim().toUpperCase();
  
  if (!promoCode) {
    if (promoMessage) {
      promoMessage.textContent = '‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥';
      promoMessage.className = 'promo-message error';
    }
    return;
  }
  
  if (!currentOrder) {
    if (promoMessage) {
      promoMessage.textContent = '‚ùå –û—à–∏–±–∫–∞: –∑–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω';
      promoMessage.className = 'promo-message error';
    }
    return;
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–º–æ–∫–æ–¥ –≤ Firebase
  try {
    const promoRef = await db.collection('promocodes').doc(promoCode).get();
    
    if (!promoRef.exists) {
      if (promoMessage) {
        promoMessage.textContent = '‚ùå –ü—Ä–æ–º–æ–∫–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω';
        promoMessage.className = 'promo-message error';
      }
      return;
    }
    
    const promoData = promoRef.data();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥–∞
    if (!promoData.active) {
      if (promoMessage) {
        promoMessage.textContent = '‚ùå –ü—Ä–æ–º–æ–∫–æ–¥ –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω';
        promoMessage.className = 'promo-message error';
      }
      return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è
    if (promoData.expiryDate) {
      const expiryDate = promoData.expiryDate.toDate();
      if (expiryDate < new Date()) {
        if (promoMessage) {
          promoMessage.textContent = '‚ùå –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞ –∏—Å—Ç–µ–∫';
          promoMessage.className = 'promo-message error';
        }
        return;
      }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π
    if (promoData.maxUses && promoData.maxUses > 0) {
      const usedCount = promoData.usedCount || 0;
      if (usedCount >= promoData.maxUses) {
        if (promoMessage) {
          promoMessage.textContent = '‚ùå –ü—Ä–æ–º–æ–∫–æ–¥ –∏—Å—á–µ—Ä–ø–∞–Ω';
          promoMessage.className = 'promo-message error';
        }
        return;
      }
    }
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º —Å–∫–∏–¥–∫—É
    const discount = promoData.discount || 0;
    const originalPrice = currentOrder.originalPrice;
    const discountAmount = Math.round(originalPrice * discount / 100);
    const newPrice = originalPrice - discountAmount;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º currentOrder
    currentOrder.price = newPrice;
    currentOrder.discount = discountAmount;
    currentOrder.promoCode = promoCode;
    currentOrder.promoDiscount = discount;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º UI
    const discountInfo = document.getElementById('discountInfo');
    const discountAmountEl = document.getElementById('discountAmount');
    const totalPriceEl = document.getElementById('totalPrice');
    
    if (discountInfo) discountInfo.style.display = 'block';
    if (discountAmountEl) discountAmountEl.textContent = `-${discountAmount} ‚ÇΩ (${discount}%)`;
    if (totalPriceEl) totalPriceEl.textContent = `${newPrice} ‚ÇΩ`;
    
    if (promoMessage) {
      promoMessage.textContent = `‚úÖ –ü—Ä–æ–º–æ–∫–æ–¥ –ø—Ä–∏–º–µ–Ω–µ–Ω! –°–∫–∏–¥–∫–∞ ${discount}%`;
      promoMessage.className = 'promo-message success';
    }
    
    // –û—Ç–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è
    if (applyPromoBtn) {
      applyPromoBtn.disabled = true;
      applyPromoBtn.style.opacity = '0.5';
    }
    
    console.log('‚úÖ –ü—Ä–æ–º–æ–∫–æ–¥ –ø—Ä–∏–º–µ–Ω–µ–Ω:', { promoCode, discount, newPrice });
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞:', error);
    if (promoMessage) {
      promoMessage.textContent = '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–º–æ–∫–æ–¥–∞';
      promoMessage.className = 'promo-message error';
    }
  }
});

// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
function showStatusUpdateNotification(orderData = null, newStatus = null) {
  console.log('üîî showStatusUpdateNotification –≤—ã–∑–≤–∞–Ω–∞:', { orderData, newStatus });
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª—å—Ü—É –∑–∞–∫–∞–∑–∞
  const currentUser = auth.currentUser;
  if (!currentUser || !orderData || orderData.userId !== currentUser.uid) {
    console.log('‚ùå –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–µ –ø–æ–∫–∞–∑–∞–Ω–æ: –Ω–µ –≤–ª–∞–¥–µ–ª–µ—Ü –∑–∞–∫–∞–∑–∞ –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω', {
      currentUser: !!currentUser,
      orderData: !!orderData,
      userId: orderData?.userId,
      currentUserId: currentUser?.uid
    });
    return;
  }
  
  console.log('‚úÖ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', currentUser.uid);
  
  // –ù–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  const statusConfig = {
    'confirmed': {
      emoji: '‚úÖ',
      icon: 'fas fa-check-circle',
      title: '–ó–∞–∫–∞–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω!',
      subtitle: '–ë–∞—Ä–º–µ–Ω –ø—Ä–∏–Ω—è–ª –≤–∞—à –∑–∞–∫–∞–∑',
      class: 'status-confirmed'
    },
    'preparing': {
      emoji: 'üë®‚Äçüç≥',
      icon: 'fas fa-utensils',
      title: '–ì–æ—Ç–æ–≤–∏—Ç—Å—è!',
      subtitle: '–í–∞—à –∫–æ–∫—Ç–µ–π–ª—å –≥–æ—Ç–æ–≤–∏—Ç—Å—è',
      class: 'status-preparing'
    },
    'ready': {
      emoji: 'üç∏',
      icon: 'fas fa-glass-cheers',
      title: '–ì–æ—Ç–æ–≤!',
      subtitle: '–í–∞—à –∑–∞–∫–∞–∑ –≥–æ—Ç–æ–≤ –∫ –≤—ã–¥–∞—á–µ',
      class: 'status-ready'
    },
    'completed': {
      emoji: 'üéâ',
      icon: 'fas fa-star',
      title: '–ó–∞–≤–µ—Ä—à–µ–Ω!',
      subtitle: '–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑!',
      class: 'status-completed'
    },
    'cancelled': {
      emoji: '‚ùå',
      icon: 'fas fa-times-circle',
      title: '–û—Ç–º–µ–Ω–µ–Ω',
      subtitle: '–ó–∞–∫–∞–∑ –±—ã–ª –æ—Ç–º–µ–Ω–µ–Ω',
      class: 'status-cancelled'
    }
  };
  
  // –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞
  const config = statusConfig[newStatus] || statusConfig['confirmed'];
  const cocktailName = orderData?.name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–æ–∫—Ç–µ–π–ª—å';
  
  // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
  console.log('üé® –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:', { config, cocktailName });
  
  const notification = document.createElement('div');
  notification.className = `status-update-notification ${config.class}`;
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–∑–∏—Ü–∏–∏ –≤ –æ—á–µ—Ä–µ–¥–∏ –¥–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤
  let queueInfo = '';
  if (orderData.queuePosition && ['confirmed', 'preparing', 'ready'].includes(newStatus)) {
    const estimatedMinutes = orderData.queuePosition * 3;
    queueInfo = `
      <div class="notification-queue-info">
        <div class="queue-position">
          <i class="fas fa-list-ol"></i>
          <span>–ü–æ–∑–∏—Ü–∏—è –≤ –æ—á–µ—Ä–µ–¥–∏: #${orderData.queuePosition}</span>
        </div>
        <div class="queue-time">~${estimatedMinutes} –º–∏–Ω</div>
      </div>
    `;
  }
  
  notification.innerHTML = `
    <div class="notification-content">
      <div class="notification-icon">
        <i class="${config.icon}"></i>
      </div>
      <div class="notification-body">
        <div class="notification-title">${config.title}</div>
        <div class="notification-subtitle">${config.subtitle}</div>
        ${queueInfo}
      </div>
      <button class="notification-close" onclick="hideNotification(this.parentElement.parentElement)">
        <i class="fas fa-times"></i>
      </button>
    </div>
    <div class="notification-progress-bar">
      <div class="notification-progress-fill"></div>
    </div>
  `;
  
  console.log('üìù HTML —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω:', notification.innerHTML);
  
  // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ - –ö–†–ê–°–ò–í–´–ô –ù–û–í–´–ô –î–ò–ó–ê–ô–ù
  const content = notification.querySelector('.notification-content');
  content.style.cssText = `
    display: flex !important;
    align-items: center !important;
    gap: 1rem !important;
    width: 100% !important;
    padding: 2rem 2.5rem !important;
    position: relative !important;
    z-index: 2 !important;
    visibility: visible !important;
    opacity: 1 !important;
  `;
  
  // –ò–∫–æ–Ω–∫–∞ —É–±—Ä–∞–Ω–∞ - —ç–º–æ–¥–∑–∏ —Ç–µ–ø–µ—Ä—å –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ
  
  const text = notification.querySelector('.notification-body');
  if (text) {
    text.style.cssText = `
      flex: 1 !important;
      display: flex !important;
      flex-direction: column !important;
      gap: 0.4rem !important;
      visibility: visible !important;
      opacity: 1 !important;
    `;
  }
  
  const title = notification.querySelector('.notification-title');
  if (title) {
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–º—É –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Ü–≤–µ—Ç–∞ —Ç–µ–∫—Å—Ç–∞
    const isDarkTheme = document.body.classList.contains('dark-theme');
    const titleColor = isDarkTheme ? 'white' : '#2d3748';
    const textShadow = isDarkTheme ? '0 2px 4px rgba(0, 0, 0, 0.3)' : '0 1px 2px rgba(0, 0, 0, 0.1)';
    
    title.style.cssText = `
      font-weight: 700 !important;
      font-size: 1.4rem !important;
      line-height: 1.3 !important;
      color: ${titleColor} !important;
      font-family: 'Inter', sans-serif !important;
      letter-spacing: 0.01em !important;
      text-shadow: ${textShadow} !important;
      visibility: visible !important;
      opacity: 1 !important;
      margin-bottom: 0 !important;
      display: flex !important;
      align-items: center !important;
    `;
  }
  
  // –°—Ç–∏–ª–∏ –¥–ª—è —ç–º–æ–¥–∑–∏ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ
  const emojiElement = notification.querySelector('.notification-title .emoji');
  if (emojiElement) {
    emojiElement.style.cssText = `
      font-size: 1.6em !important;
      margin-right: 0.5em !important;
      display: inline-block !important;
      animation: bounce 2s ease-in-out infinite !important;
      line-height: 1 !important;
      vertical-align: middle !important;
      text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3) !important;
    `;
  }
  
  // –≠–ª–µ–º–µ–Ω—Ç cocktail —É–¥–∞–ª–µ–Ω –∏–∑ HTML
  
  const status = notification.querySelector('.notification-subtitle');
  if (status) {
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–º—É –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Ü–≤–µ—Ç–∞ —Ç–µ–∫—Å—Ç–∞
    const isDarkTheme = document.body.classList.contains('dark-theme');
    const subtitleColor = isDarkTheme ? 'rgba(255, 255, 255, 0.9)' : 'rgba(45, 55, 72, 0.8)';
    
    status.style.cssText = `
      font-weight: 500 !important;
      font-size: 1rem !important;
      line-height: 1.4 !important;
      visibility: visible !important;
      opacity: 0.9 !important;
      color: ${subtitleColor} !important;
      text-transform: none !important;
      font-family: 'Inter', sans-serif !important;
    `;
  }
  
  const closeBtn = notification.querySelector('.notification-close');
  if (closeBtn) {
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–º—É –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Ü–≤–µ—Ç–∞ –∫–Ω–æ–ø–∫–∏
    const isDarkTheme = document.body.classList.contains('dark-theme');
    const closeBtnBg = isDarkTheme ? 'rgba(255, 255, 255, 0.2)' : 'rgba(45, 55, 72, 0.1)';
    const closeBtnBorder = isDarkTheme ? 'rgba(255, 255, 255, 0.3)' : 'rgba(45, 55, 72, 0.2)';
    const closeBtnColor = isDarkTheme ? 'white' : '#2d3748';
    const closeBtnShadow = isDarkTheme ? '0 4px 15px rgba(0, 0, 0, 0.2)' : '0 2px 8px rgba(0, 0, 0, 0.1)';
    
    closeBtn.style.cssText = `
      background: ${closeBtnBg} !important;
      border: 1px solid ${closeBtnBorder} !important;
      color: ${closeBtnColor} !important;
      cursor: pointer !important;
      padding: 0.6rem !important;
      border-radius: 50% !important;
      opacity: 0.8 !important;
      transition: all 0.3s cubic-bezier(0.34, 1.56, 0.64, 1) !important;
      display: flex !important;
      align-items: center !important;
      justify-content: center !important;
      width: 40px !important;
      height: 40px !important;
      font-size: 1.1rem !important;
      backdrop-filter: blur(10px) !important;
      box-shadow: ${closeBtnShadow} !important;
      visibility: visible !important;
    `;
  }
  
  if (closeBtn) {
    const isDarkTheme = document.body.classList.contains('dark-theme');
    
    closeBtn.addEventListener('mouseenter', () => {
      closeBtn.style.opacity = '1';
      closeBtn.style.background = isDarkTheme ? 'rgba(255, 255, 255, 0.3)' : 'rgba(45, 55, 72, 0.2)';
      closeBtn.style.borderColor = isDarkTheme ? 'rgba(255, 255, 255, 0.5)' : 'rgba(45, 55, 72, 0.3)';
      closeBtn.style.transform = 'scale(1.1) rotate(90deg)';
      closeBtn.style.color = isDarkTheme ? 'white' : '#2d3748';
      closeBtn.style.boxShadow = isDarkTheme ? '0 6px 20px rgba(0, 0, 0, 0.3)' : '0 4px 12px rgba(0, 0, 0, 0.15)';
    });
    
    closeBtn.addEventListener('mouseleave', () => {
      closeBtn.style.opacity = '0.8';
      closeBtn.style.background = isDarkTheme ? 'rgba(255, 255, 255, 0.2)' : 'rgba(45, 55, 72, 0.1)';
      closeBtn.style.borderColor = isDarkTheme ? 'rgba(255, 255, 255, 0.3)' : 'rgba(45, 55, 72, 0.2)';
      closeBtn.style.transform = 'scale(1) rotate(0deg)';
      closeBtn.style.color = isDarkTheme ? 'white' : '#2d3748';
      closeBtn.style.boxShadow = isDarkTheme ? '0 4px 15px rgba(0, 0, 0, 0.2)' : '0 2px 8px rgba(0, 0, 0, 0.1)';
    });
  }
  
  // –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä —É–¥–∞–ª–µ–Ω –≤ –Ω–æ–≤–æ–º –¥–∏–∑–∞–π–Ω–µ
  
  document.body.appendChild(notification);
  console.log('‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ DOM');
  
  // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ
  console.log('üé® –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ –±–µ–∑ –∏–∫–æ–Ω–∫–∏');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≤–∏–¥–∏–º–æ
  setTimeout(() => {
    const rect = notification.getBoundingClientRect();
    const computedStyle = window.getComputedStyle(notification);
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏–¥–∏–º–æ—Å—Ç–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', {
      element: notification,
      rect: rect,
      display: computedStyle.display,
      visibility: computedStyle.visibility,
      opacity: computedStyle.opacity,
      zIndex: computedStyle.zIndex,
      position: computedStyle.position,
      top: computedStyle.top,
      right: computedStyle.right,
      width: computedStyle.width,
      height: computedStyle.height
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ DOM
    const foundNotification = document.querySelector('.status-update-notification');
    console.log('üîç –ù–∞–π–¥–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ DOM:', document.querySelectorAll('.status-update-notification').length);
    console.log('üîç –ü–æ—Å–ª–µ–¥–Ω–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ:', foundNotification);
  }, 100);
  
  // –ó–≤—É–∫–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ (–µ—Å–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ)
  if (typeof Audio !== 'undefined' && audioContextEnabled) {
    try {
      const audioContext = new (window.AudioContext || window.webkitAudioContext)();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ AudioContext
      if (audioContext.state === 'suspended') {
        // –ü—ã—Ç–∞–µ–º—Å—è –≤–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç (—Ç—Ä–µ–±—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è)
        audioContext.resume().then(() => {
          playNotificationSound(audioContext, newStatus);
        }).catch(() => {
          console.log('–ó–≤—É–∫–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –±—Ä–∞—É–∑–µ—Ä–æ–º');
        });
      } else {
        playNotificationSound(audioContext, newStatus);
      }
    } catch (e) {
      console.log('–ó–≤—É–∫–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ:', e.message);
    }
  } else if (!audioContextEnabled) {
    // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∑–≤—É–∫ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–º –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–∏
    enableAudioOnUserInteraction();
  }
  
  // –í–∏–±—Ä–∞—Ü–∏—è (–µ—Å–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∞)
  if (navigator.vibrate && 'vibrate' in navigator) {
    try {
      // –†–∞–∑–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –≤–∏–±—Ä–∞—Ü–∏–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å—Ç–∞—Ç—É—Å–æ–≤
      let vibrationPattern = [200, 100, 200]; // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω
      
      switch(newStatus) {
        case 'confirmed':
          vibrationPattern = [100, 50, 100]; // –ö–æ—Ä–æ—Ç–∫–∞—è —Ä–∞–¥–æ—Å—Ç–Ω–∞—è –≤–∏–±—Ä–∞—Ü–∏—è
          break;
        case 'preparing':
          vibrationPattern = [300, 100, 300]; // –î–æ–ª–≥–∞—è –≤–∏–±—Ä–∞—Ü–∏—è
          break;
        case 'ready':
          vibrationPattern = [150, 50, 150, 50, 150]; // –°–µ—Ä–∏—è –∫–æ—Ä–æ—Ç–∫–∏—Ö
          break;
        case 'completed':
          vibrationPattern = [200, 100, 200, 100, 200]; // –¢–æ—Ä–∂–µ—Å—Ç–≤–µ–Ω–Ω–∞—è —Å–µ—Ä–∏—è
          break;
        case 'cancelled':
          vibrationPattern = [500]; // –û–¥–Ω–∞ –¥–æ–ª–≥–∞—è –≤–∏–±—Ä–∞—Ü–∏—è
          break;
      }
      
      navigator.vibrate(vibrationPattern);
      console.log(`üì≥ –í–∏–±—Ä–∞—Ü–∏—è –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞ ${newStatus}:`, vibrationPattern);
    } catch (e) {
      console.log('–í–∏–±—Ä–∞—Ü–∏—è –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ –±—Ä–∞—É–∑–µ—Ä–æ–º:', e.message);
    }
  }
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤—Ä–µ–º—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞
  const durationConfig = {
    'confirmed': 8000,    // 8 —Å–µ–∫—É–Ω–¥ - –≤–∞–∂–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏
    'preparing': 6000,    // 6 —Å–µ–∫—É–Ω–¥ - —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è
    'ready': 10000,       // 10 —Å–µ–∫—É–Ω–¥ - –≤–∞–∂–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
    'completed': 12000,   // 12 —Å–µ–∫—É–Ω–¥ - —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    'cancelled': 8000     // 8 —Å–µ–∫—É–Ω–¥ - –≤–∞–∂–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—Ç–º–µ–Ω–µ
  };
  
  const duration = durationConfig[newStatus] || 6000; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é 6 —Å–µ–∫—É–Ω–¥
  
  console.log(`‚è∞ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫—Ä—ã—Ç–æ —á–µ—Ä–µ–∑ ${duration/1000} —Å–µ–∫—É–Ω–¥`);
  
  // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞ —Å JavaScript
  const progressFill = notification.querySelector('.notification-progress-fill');
  if (progressFill) {
    progressFill.style.width = '0%';
    progressFill.style.transition = 'none'; // –û—Ç–∫–ª—é—á–∞–µ–º CSS transition
    
    // JavaScript –∞–Ω–∏–º–∞—Ü–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞
    const startTime = Date.now();
    const animateProgress = () => {
      const elapsed = Date.now() - startTime;
      const progress = Math.min(elapsed / duration, 1);
      const width = progress * 100;
      
      progressFill.style.width = `${width}%`;
      
      if (progress < 1) {
        requestAnimationFrame(animateProgress);
      }
    };
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é —á–µ—Ä–µ–∑ –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É
    setTimeout(() => {
      requestAnimationFrame(animateProgress);
    }, 100);
  }
  
  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å –±–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω—ã–º –ø–æ–¥—Ö–æ–¥–æ–º
  console.log(`‚è∞ –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä –Ω–∞ ${duration}ms –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è`);
  
  const startTime = Date.now();
  
  const autoHideTimer = setInterval(() => {
    const elapsed = Date.now() - startTime;
    
    if (elapsed >= duration) {
      clearInterval(autoHideTimer);
      
      if (notification.parentNode) {
        console.log('üóëÔ∏è –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫—Ä—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ (—Ç–∞–π–º–µ—Ä —Å—Ä–∞–±–æ—Ç–∞–ª)');
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è
        notification.classList.add('notification-hiding');
        
        // –ü—Ä–∏–º–µ–Ω—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è
        notification.style.animation = 'notificationSlideOut 0.6s ease forwards';
        
        // –£–¥–∞–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
        setTimeout(() => {
          if (notification.parentNode) {
            notification.parentNode.removeChild(notification);
            console.log('‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ –∏–∑ DOM');
          }
        }, 600);
      } else {
        console.log('‚ö†Ô∏è –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É–∂–µ –±—ã–ª–æ —É–¥–∞–ª–µ–Ω–æ');
      }
    }
  }, 100); // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 100–º—Å
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–∞–π–º–µ—Ä –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ–π –æ—Ç–º–µ–Ω—ã
  notification._autoHideTimer = autoHideTimer;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
function hideNotification(notification) {
  if (!notification || !notification.parentNode) return;
  
  console.log('üóëÔ∏è –°–∫—Ä—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤—Ä—É—á–Ω—É—é');
  
  // –û—Ç–º–µ–Ω—è–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ç–∞–π–º–µ—Ä, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
  if (notification._autoHideTimer) {
    clearInterval(notification._autoHideTimer);
    console.log('‚è∞ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ç–∞–π–º–µ—Ä –æ—Ç–º–µ–Ω–µ–Ω');
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è
  notification.classList.add('notification-hiding');
  
  // –ü—Ä–∏–º–µ–Ω—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è
  notification.style.animation = 'notificationSlideOut 0.6s ease forwards';
  
  // –£–¥–∞–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
  setTimeout(() => {
    if (notification.parentNode) {
      notification.parentNode.removeChild(notification);
      console.log('‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ –∏–∑ DOM');
    }
  }, 600);
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–≤–µ—Ç–∞
function adjustColor(color, amount) {
  const usePound = color[0] === '#';
  const col = usePound ? color.slice(1) : color;
  const num = parseInt(col, 16);
  let r = (num >> 16) + amount;
  let g = (num >> 8 & 0x00FF) + amount;
  let b = (num & 0x0000FF) + amount;
  r = r > 255 ? 255 : r < 0 ? 0 : r;
  g = g > 255 ? 255 : g < 0 ? 0 : g;
  b = b > 255 ? 255 : b < 0 ? 0 : b;
  return (usePound ? '#' : '') + (r << 16 | g << 8 | b).toString(16).padStart(6, '0');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∑–≤—É–∫–∞ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–º –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–∏
function enableAudioOnUserInteraction() {
  if (audioContextEnabled) return;
  
  const enableAudio = () => {
    audioContextEnabled = true;
    console.log('üîä –ó–≤—É–∫ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ–º');
    
    // –£–¥–∞–ª—è–µ–º —Å–ª—É—à–∞—Ç–µ–ª–∏ –ø–æ—Å–ª–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
    document.removeEventListener('click', enableAudio);
    document.removeEventListener('keydown', enableAudio);
    document.removeEventListener('touchstart', enableAudio);
  };
  
  // –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—à–∞—Ç–µ–ª–∏ –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
  document.addEventListener('click', enableAudio, { once: true });
  document.addEventListener('keydown', enableAudio, { once: true });
  document.addEventListener('touchstart', enableAudio, { once: true });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∑–≤—É–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
function playNotificationSound(audioContext, status = 'default') {
  try {
    // –°–æ–∑–¥–∞–µ–º —Ä–∞–∑–Ω—ã–µ –∑–≤—É–∫–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å—Ç–∞—Ç—É—Å–æ–≤
    let frequencies = [];
    let duration = 0.2;
    
    switch(status) {
      case 'confirmed':
        // –ü—Ä–∏—è—Ç–Ω—ã–π –≤–æ—Å—Ö–æ–¥—è—â–∏–π –∑–≤—É–∫
        frequencies = [400, 600, 800];
        duration = 0.3;
        break;
      case 'preparing':
        // –°—Ä–µ–¥–Ω–∏–π —Ç–æ–Ω
        frequencies = [500, 700];
        duration = 0.25;
        break;
      case 'ready':
        // –†–∞–¥–æ—Å—Ç–Ω—ã–π –∑–≤—É–∫
        frequencies = [600, 800, 1000, 800];
        duration = 0.4;
        break;
      case 'completed':
        // –¢–æ—Ä–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –∑–≤—É–∫
        frequencies = [800, 1000, 1200, 1000, 800];
        duration = 0.5;
        break;
      case 'cancelled':
        // –ù–∏—Å—Ö–æ–¥—è—â–∏–π –∑–≤—É–∫
        frequencies = [800, 600, 400];
        duration = 0.3;
        break;
      default:
        // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∑–≤—É–∫
        frequencies = [600, 800];
        duration = 0.2;
    }
    
    const oscillator = audioContext.createOscillator();
    const gainNode = audioContext.createGain();
    
    oscillator.connect(gainNode);
    gainNode.connect(audioContext.destination);
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∏–ø –≤–æ–ª–Ω—ã
    oscillator.type = 'sine';
    
    // –°–æ–∑–¥–∞–µ–º –º–µ–ª–æ–¥–∏—é –∏–∑ —á–∞—Å—Ç–æ—Ç
    const timeStep = duration / frequencies.length;
    frequencies.forEach((freq, index) => {
      const time = audioContext.currentTime + (index * timeStep);
      oscillator.frequency.setValueAtTime(freq, time);
    });
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥—Ä–æ–º–∫–æ—Å—Ç–∏
    gainNode.gain.setValueAtTime(0.15, audioContext.currentTime);
    gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + duration);
    
    oscillator.start(audioContext.currentTime);
    oscillator.stop(audioContext.currentTime + duration);
    
    console.log(`üîä –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω –∑–≤—É–∫ –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞: ${status}`);
  } catch (e) {
    console.log('–û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∑–≤—É–∫–∞:', e.message);
  }
}

// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤ - –ù–û–í–´–ô –î–ò–ó–ê–ô–ù
function showAdminStatusUpdateNotification() {
  // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∞
  const notification = document.createElement('div');
  notification.className = 'admin-status-update-notification';
  notification.innerHTML = `
    <div class="notification-content">
      <div class="notification-text">
        <div class="notification-title">
          <span class="emoji">üîî</span> –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Telegram
        </div>
        <div class="notification-subtitle">
          <span class="emoji">üì±</span> –°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –∏–∑–º–µ–Ω–µ–Ω
        </div>
      </div>
      <button class="notification-close" onclick="this.parentElement.parentElement.remove()">
        <i class="fas fa-times"></i>
      </button>
    </div>
    <div class="notification-progress"></div>
  `;
  
  // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è - –ö–†–ê–°–ò–í–´–ô –ù–û–í–´–ô –î–ò–ó–ê–ô–ù
  notification.style.cssText = `
    position: fixed !important;
    top: 20px !important;
    right: 20px !important;
    background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%) !important;
    color: white !important;
    border-radius: 20px !important;
    box-shadow: 
      0 20px 60px rgba(0, 0, 0, 0.15),
      0 8px 25px rgba(0, 0, 0, 0.1),
      0 0 0 1px rgba(255, 255, 255, 0.2) !important;
    z-index: 10000 !important;
    animation: notificationSlideIn 0.8s cubic-bezier(0.34, 1.56, 0.64, 1) !important;
    display: flex !important;
    flex-direction: column !important;
    font-family: 'Inter', sans-serif !important;
    font-weight: 500 !important;
    min-width: 380px !important;
    max-width: 480px !important;
    backdrop-filter: blur(20px) !important;
    border: 1px solid rgba(255, 255, 255, 0.3) !important;
    overflow: hidden !important;
  `;
  
  // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  const content = notification.querySelector('.notification-content');
  content.style.cssText = `
    display: flex !important;
    align-items: center !important;
    gap: 1rem !important;
    width: 100% !important;
    padding: 2rem 2.5rem !important;
    position: relative !important;
    z-index: 2 !important;
  `;
  
  const text = notification.querySelector('.notification-text');
  text.style.cssText = `
    flex: 1 !important;
    display: flex !important;
    flex-direction: column !important;
    gap: 0.4rem !important;
  `;
  
  const title = notification.querySelector('.notification-title');
  title.style.cssText = `
    font-weight: 700 !important;
    font-size: 1.4rem !important;
    line-height: 1.3 !important;
    color: white !important;
    font-family: 'Inter', sans-serif !important;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3) !important;
    display: flex !important;
    align-items: center !important;
  `;
  
  const subtitle = notification.querySelector('.notification-subtitle');
  subtitle.style.cssText = `
    font-weight: 500 !important;
    font-size: 1rem !important;
    line-height: 1.4 !important;
    color: rgba(255, 255, 255, 0.9) !important;
    font-family: 'Inter', sans-serif !important;
    display: flex !important;
    align-items: center !important;
  `;
  
  // –°—Ç–∏–ª–∏ –¥–ª—è —ç–º–æ–¥–∑–∏ –≤ –∞–¥–º–∏–Ω—Å–∫–∏—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è—Ö
  const emojis = notification.querySelectorAll('.emoji');
  emojis.forEach(emoji => {
    emoji.style.cssText = `
      font-size: 1.4em !important;
      margin-right: 0.4em !important;
      display: inline-block !important;
      animation: bounce 2s ease-in-out infinite !important;
      line-height: 1 !important;
      vertical-align: middle !important;
      text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3) !important;
    `;
  });
  
  const closeBtn = notification.querySelector('.notification-close');
  closeBtn.style.cssText = `
    background: rgba(255, 255, 255, 0.2) !important;
    border: 1px solid rgba(255, 255, 255, 0.3) !important;
    color: white !important;
    cursor: pointer !important;
    padding: 0.6rem !important;
    border-radius: 50% !important;
    opacity: 0.8 !important;
    transition: all 0.3s cubic-bezier(0.34, 1.56, 0.64, 1) !important;
    display: flex !important;
    align-items: center !important;
    justify-content: center !important;
    width: 40px !important;
    height: 40px !important;
    font-size: 1.1rem !important;
    backdrop-filter: blur(10px) !important;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2) !important;
  `;
  
  // –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  const progress = notification.querySelector('.notification-progress');
  progress.style.cssText = `
    position: absolute !important;
    bottom: 0 !important;
    left: 0 !important;
    height: 3px !important;
    background: linear-gradient(90deg, rgba(255, 255, 255, 0.8), rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0.8)) !important;
    background-size: 200% 100% !important;
    width: 100% !important;
    animation: progressBar 5000ms linear, shimmer 2s ease-in-out infinite !important;
    border-radius: 0 0 20px 20px !important;
  `;

  document.body.appendChild(notification);
  
  // –£–¥–∞–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π "—É–µ–∑–∂–∞–Ω–∏—è –Ω–∞–ø—Ä–∞–≤–æ"
  setTimeout(() => {
    notification.style.animation = 'notificationSlideOut 0.6s ease';
    notification.style.transform = 'translateX(100%)';
    notification.style.opacity = '0';
    setTimeout(() => {
      if (notification.parentNode) {
        notification.parentNode.removeChild(notification);
      }
    }, 600);
  }, 5000);
}

// === –§–£–ù–ö–¶–ò–ò –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê WEBHOOK –°–ï–†–í–ï–†–ê ===

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ webhook —Å–µ—Ä–≤–µ—Ä–∞
async function checkWebhookServerStatus() {
  try {
    // –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ —Å–ª–µ—à–∏ –∏–∑ URL
    const baseUrl = WEBHOOK_SERVER_URL.replace(/\/+$/, ''); // –£–±–∏—Ä–∞–µ–º —Å–ª–µ—à–∏ –≤ –∫–æ–Ω—Ü–µ
    const response = await fetch(`${baseUrl}/health`);
    
    if (!response.ok) {
      console.warn(`‚ö†Ô∏è HTTP ${response.status}: ${response.statusText}`);
      return { status: 'offline', error: `HTTP ${response.status}: ${response.statusText}` };
    }
    
    const data = await response.json();
    
    if (data.status === 'OK') {
      console.log('‚úÖ Webhook —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç:', data);
      return { status: 'online', data };
    } else {
      console.warn('‚ö†Ô∏è Webhook —Å–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç, –Ω–æ —Å—Ç–∞—Ç—É—Å –Ω–µ OK:', data);
      return { status: 'warning', data };
    }
  } catch (error) {
    console.error('‚ùå Webhook —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:', error);
    return { status: 'offline', error: error.message };
  }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ Firebase —á–µ—Ä–µ–∑ webhook —Å–µ—Ä–≤–µ—Ä
async function checkWebhookFirebase() {
  try {
    // –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ —Å–ª–µ—à–∏ –∏–∑ URL
    const baseUrl = WEBHOOK_SERVER_URL.replace(/\/+$/, ''); // –£–±–∏—Ä–∞–µ–º —Å–ª–µ—à–∏ –≤ –∫–æ–Ω—Ü–µ
    const response = await fetch(`${baseUrl}/test-firebase`);
    
    if (!response.ok) {
      console.warn(`‚ö†Ô∏è HTTP ${response.status}: ${response.statusText}`);
      return { status: 'offline', error: `HTTP ${response.status}: ${response.statusText}` };
    }
    
    const data = await response.json();
    
    if (data.success) {
      console.log('‚úÖ Firebase —á–µ—Ä–µ–∑ webhook —Ä–∞–±–æ—Ç–∞–µ—Ç:', data);
      return { status: 'online', data };
    } else {
      console.warn('‚ö†Ô∏è Firebase —á–µ—Ä–µ–∑ webhook –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç:', data);
      return { status: 'error', data };
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ Firebase —á–µ—Ä–µ–∑ webhook:', error);
    return { status: 'offline', error: error.message };
  }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook –≤ Telegram
async function checkTelegramWebhook() {
  try {
    const response = await fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/getWebhookInfo`);
    const data = await response.json();
    
    console.log('üì° –û—Ç–≤–µ—Ç –æ—Ç Telegram API:', data);
    
    if (data.ok) {
      if (data.result.url && data.result.url !== '') {
        console.log('‚úÖ Telegram webhook –Ω–∞—Å—Ç—Ä–æ–µ–Ω:', data.result.url);
        return { status: 'online', data: data.result };
      } else {
        console.warn('‚ö†Ô∏è Telegram webhook –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω (–ø—É—Å—Ç–æ–π URL)');
        return { status: 'warning', data: data.result, error: 'Webhook URL –ø—É—Å—Ç–æ–π - –Ω–∞–∂–º–∏—Ç–µ "–ù–∞—Å—Ç—Ä–æ–∏—Ç—å Webhook"' };
      }
    } else {
      console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ Telegram API:', data.description);
      return { status: 'error', data, error: data.description };
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ Telegram webhook:', error);
    return { status: 'offline', error: error.message };
  }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞ —á–µ—Ä–µ–∑ webhook —Å–µ—Ä–≤–µ—Ä
async function updateOrderStatusViaWebhook(orderId, newStatus) {
  try {
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π callback –¥–ª—è webhook —Å–µ—Ä–≤–µ—Ä–∞
    const callbackData = `${newStatus}_${orderId}`;
    
    const response = await fetch(`${WEBHOOK_SERVER_URL}/telegram-webhook`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        callback_query: {
          id: `test_${Date.now()}`,
          data: callbackData,
          message: {
            message_id: 1
          },
          from: {
            username: 'admin',
            first_name: 'Admin'
          }
        }
      })
    });
    
    if (response.ok) {
      console.log('‚úÖ –°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ webhook:', orderId, newStatus);
      return { success: true };
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —á–µ—Ä–µ–∑ webhook:', response.status);
      return { success: false, error: `HTTP ${response.status}` };
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞ webhook —Å–µ—Ä–≤–µ—Ä:', error);
    return { success: false, error: error.message };
  }
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –≤ Telegram
async function sendStatusUpdateToTelegram(orderId, newStatus, orderName, userName) {
  try {
    const statusEmojis = {
      'confirmed': '‚úÖ',
      'preparing': 'üë®‚Äçüç≥',
      'ready': 'üç∏',
      'completed': 'üéâ',
      'cancelled': '‚ùå'
    };
    
    const statusTexts = {
      'confirmed': '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω',
      'preparing': '–ì–æ—Ç–æ–≤–∏—Ç—Å—è',
      'ready': '–ì–æ—Ç–æ–≤',
      'completed': '–í—ã–ø–æ–ª–Ω–µ–Ω',
      'cancelled': '–û—Ç–º–µ–Ω–µ–Ω'
    };
    
    const emoji = statusEmojis[newStatus] || 'üìù';
    const statusText = statusTexts[newStatus] || newStatus;
    
    const message = `
${emoji} *–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω*

üç∏ *–ö–æ–∫—Ç–µ–π–ª—å:* ${orderName}
üë§ *–ö–ª–∏–µ–Ω—Ç:* ${userName}
üìä *–ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å:* ${statusText}
üïí *–í—Ä–µ–º—è:* ${new Date().toLocaleString('ru-RU')}
üÜî *ID –∑–∞–∫–∞–∑–∞:* ${orderId}
    `.trim();
    
    const response = await fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        chat_id: TELEGRAM_CHAT_ID,
        text: message,
        parse_mode: 'Markdown'
      })
    });
    
    if (response.ok) {
      console.log('‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å—Ç–∞—Ç—É—Å–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram');
      return { success: true };
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram:', response.status);
      return { success: false, error: `HTTP ${response.status}` };
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram:', error);
    return { success: false, error: error.message };
  }
}

// –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–∏—Å—Ç–µ–º—ã (–≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏)
async function monitorSystem() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã...');
  
  const [serverStatus, firebaseStatus, webhookStatus] = await Promise.all([
    checkWebhookServerStatus(),
    checkWebhookFirebase(),
    checkTelegramWebhook()
  ]);
  
  // –õ–æ–≥–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
  console.log('üìä –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã:', {
    server: serverStatus.status,
    firebase: firebaseStatus.status,
    webhook: webhookStatus.status
  });
  
  // –ï—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
  if (serverStatus.status === 'offline' || firebaseStatus.status === 'offline' || webhookStatus.status === 'offline') {
    console.warn('‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–∏—Å—Ç–µ–º–æ–π');
    // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤–∏–∑—É–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
  }
  
  return { serverStatus, firebaseStatus, webhookStatus };
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
function displaySystemStatus(statusData) {
  if (!systemStatus) return;
  
  const { serverStatus, firebaseStatus, webhookStatus } = statusData;
  
  systemStatus.innerHTML = `
    <div class="status-item ${serverStatus.status}">
      <div class="status-header">
        <div class="status-title">üåê Webhook –°–µ—Ä–≤–µ—Ä</div>
        <div class="status-indicator ${serverStatus.status}">${getMonitoringStatusText(serverStatus.status)}</div>
      </div>
      <div class="status-details">
        ${serverStatus.status === 'online' ? 
          `‚úÖ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç<br>URL: ${WEBHOOK_SERVER_URL}` : 
          `‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω<br>–û—à–∏–±–∫–∞: ${serverStatus.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`
        }
      </div>
    </div>
    
    <div class="status-item ${firebaseStatus.status}">
      <div class="status-header">
        <div class="status-title">üî• Firebase (—á–µ—Ä–µ–∑ webhook)</div>
        <div class="status-indicator ${firebaseStatus.status}">${getMonitoringStatusText(firebaseStatus.status)}</div>
      </div>
      <div class="status-details">
        ${firebaseStatus.status === 'online' ? 
          `‚úÖ Firebase –ø–æ–¥–∫–ª—é—á–µ–Ω<br>–ü—Ä–æ–µ–∫—Ç: ${firebaseStatus.data?.projectId || 'bar-menu-6145c'}` : 
          `‚ùå Firebase –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω<br>–û—à–∏–±–∫–∞: ${firebaseStatus.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`
        }
      </div>
    </div>
    
    <div class="status-item ${webhookStatus.status}">
      <div class="status-header">
        <div class="status-title">üì± Telegram Webhook</div>
        <div class="status-indicator ${webhookStatus.status}">${getMonitoringStatusText(webhookStatus.status)}</div>
      </div>
      <div class="status-details">
        ${webhookStatus.status === 'online' ? 
          `‚úÖ Webhook –Ω–∞—Å—Ç—Ä–æ–µ–Ω<br>URL: ${webhookStatus.data?.url || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}` : 
          `‚ùå Webhook –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω<br>–û—à–∏–±–∫–∞: ${webhookStatus.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`
        }
      </div>
    </div>
  `;
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å—Ç–∞—Ç—É—Å–∞ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
function getMonitoringStatusText(status) {
  switch(status) {
    case 'online': return '–û–Ω–ª–∞–π–Ω';
    case 'warning': return '–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ';
    case 'error': return '–û—à–∏–±–∫–∞';
    case 'offline': return '–û—Ñ–ª–∞–π–Ω';
    default: return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
  }
}

// –¢–µ—Å—Ç webhook —Å–µ—Ä–≤–µ—Ä–∞
async function testWebhookServer() {
  try {
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º callback_query –Ω–∞–ø—Ä—è–º—É—é
    const testCallback = {
      callback_query: {
        id: `test_${Date.now()}`,
        from: {
          id: 123456789,
          is_bot: false,
          first_name: 'Test Admin',
          username: 'testadmin'
        },
        message: {
          message_id: 1,
          from: {
            id: 123456789,
            is_bot: true,
            first_name: 'Asafiev Bar Bot',
            username: 'asafiev_bar_bot'
          },
          chat: {
            id: parseInt(TELEGRAM_CHAT_ID),
            type: 'private'
          },
          date: Math.floor(Date.now() / 1000),
          text: '–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ'
        },
        data: 'confirmed_test_order_123'
      }
    };
    
    const response = await fetch(`${WEBHOOK_SERVER_URL}/telegram-webhook`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(testCallback)
    });
    
    const result = await response.text();
    console.log('üì§ –û—Ç–≤–µ—Ç webhook —Å–µ—Ä–≤–µ—Ä–∞:', response.status, result);
    
    if (response.ok) {
      showSuccess('‚úÖ Webhook —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞.');
    } else {
      showError(`‚ùå –û—à–∏–±–∫–∞ webhook —Å–µ—Ä–≤–µ—Ä–∞: ${response.status} - ${result}`);
    }
  } catch (error) {
    showError(`‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è webhook: ${error.message}`);
  }
}

// === –§–£–ù–ö–¶–ò–ò –£–ü–†–ê–í–õ–ï–ù–ò–Ø TELEGRAM ===

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook –¥–ª—è Telegram
async function setupTelegramWebhook() {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π URL
    if (WEBHOOK_SERVER_URL.includes('localhost') || WEBHOOK_SERVER_URL.includes('your-railway-app')) {
      showError('‚ùå –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å URL webhook —Å–µ—Ä–≤–µ—Ä–∞!');
      showError('üìù –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É "–ù–∞—Å—Ç—Ä–æ–∏—Ç—å URL —Å–µ—Ä–≤–µ—Ä–∞" –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏');
      showError('üí° –í–≤–µ–¥–∏—Ç–µ –≤–∞—à Railway URL (–Ω–∞–ø—Ä–∏–º–µ—Ä: https://your-app.railway.app)');
      return;
    }
    
    const webhookUrl = `${WEBHOOK_SERVER_URL.replace(/\/+$/, '')}/telegram-webhook`;
    console.log('üîó –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º webhook –¥–ª—è URL:', webhookUrl);
    
    const response = await fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/setWebhook`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        url: webhookUrl,
        allowed_updates: ['message', 'callback_query']
      })
    });
    
    const data = await response.json();
    console.log('üì° –û—Ç–≤–µ—Ç –æ—Ç Telegram API:', data);
    
    if (data.ok) {
      showSuccess('‚úÖ Webhook —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!');
      showSuccess(`üîó URL: ${webhookUrl}`);
      displayTelegramInfo();
      
      // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏—Å—Ç–µ–º—É –ø–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ webhook
      setTimeout(async () => {
        const statusData = await monitorSystem();
        displaySystemStatus(statusData);
      }, 1000);
    } else {
      showError(`‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ webhook: ${data.description}`);
      console.error('‚ùå –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', data);
    }
  } catch (error) {
    showError(`‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ webhook: ${error.message}`);
    console.error('‚ùå –ü–æ–ª–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

// –£–¥–∞–ª–µ–Ω–∏–µ webhook
async function deleteTelegramWebhook() {
  try {
    const response = await fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/deleteWebhook`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        drop_pending_updates: true
      })
    });
    
    const data = await response.json();
    
    if (data.ok) {
      showSuccess('‚úÖ Webhook —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!');
      displayTelegramInfo();
    } else {
      showError(`‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è webhook: ${data.description}`);
    }
  } catch (error) {
    showError(`‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è webhook: ${error.message}`);
  }
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ webhook
async function getTelegramWebhookInfo() {
  try {
    const response = await fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/getWebhookInfo`);
    const data = await response.json();
    
    if (data.ok) {
      displayTelegramInfo(data.result);
    } else {
      showError(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: ${data.description}`);
    }
  } catch (error) {
    showError(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: ${error.message}`);
  }
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
async function sendTestMessage() {
  try {
    const message = `
üß™ *–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç Asafiev Bar*

‚úÖ Webhook —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç
‚úÖ Firebase –ø–æ–¥–∫–ª—é—á–µ–Ω
‚úÖ Telegram –±–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω

üïí –í—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU')}
üåê –°–µ—Ä–≤–µ—Ä: ${WEBHOOK_SERVER_URL}
    `.trim();
    
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏
    const testKeyboard = {
      inline_keyboard: [
        [
          { text: "üß™ –¢–µ—Å—Ç –∫–Ω–æ–ø–∫–∞ 1", callback_data: "test_button_1" },
          { text: "üß™ –¢–µ—Å—Ç –∫–Ω–æ–ø–∫–∞ 2", callback_data: "test_button_2" }
        ],
        [
          { text: "‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç", callback_data: "system_ok" }
        ]
      ]
    };
    
    const response = await fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        chat_id: TELEGRAM_CHAT_ID,
        text: message,
        parse_mode: 'Markdown',
        reply_markup: testKeyboard
      })
    });
    
    const data = await response.json();
    
    if (data.ok) {
      showSuccess('‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!');
    } else {
      showError(`‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: ${data.description}`);
    }
  } catch (error) {
    showError(`‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: ${error.message}`);
  }
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ Telegram
function displayTelegramInfo(webhookInfo = null) {
  if (!telegramStatus) return;
  
  if (!webhookInfo) {
    telegramStatus.innerHTML = `
      <div class="telegram-info">
        <h5>üì± –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ Telegram –±–æ—Ç–µ</h5>
        <p><strong>–¢–æ–∫–µ–Ω –±–æ—Ç–∞:</strong> <code>${TELEGRAM_BOT_TOKEN.substring(0, 10)}...</code></p>
        <p><strong>Chat ID:</strong> <code>${TELEGRAM_CHAT_ID}</code></p>
        <p><strong>Webhook URL:</strong> <code>${WEBHOOK_SERVER_URL}/telegram-webhook</code></p>
        <p><em>–ù–∞–∂–º–∏—Ç–µ "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ Webhook" –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö</em></p>
      </div>
    `;
    return;
  }
  
  const hasWebhook = webhookInfo.url && webhookInfo.url.length > 0;
  const webhookStatus = hasWebhook ? '‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' : '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω';
  const webhookUrl = hasWebhook ? webhookInfo.url : '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω';
  
  telegramStatus.innerHTML = `
    <div class="telegram-info">
      <h5>üì± –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ Telegram –±–æ—Ç–µ</h5>
      <p><strong>–¢–æ–∫–µ–Ω –±–æ—Ç–∞:</strong> <code>${TELEGRAM_BOT_TOKEN.substring(0, 10)}...</code></p>
      <p><strong>Chat ID:</strong> <code>${TELEGRAM_CHAT_ID}</code></p>
      <p><strong>–°—Ç–∞—Ç—É—Å webhook:</strong> ${webhookStatus}</p>
      <p><strong>Webhook URL:</strong> <code>${webhookUrl}</code></p>
      ${hasWebhook ? `
        <p><strong>–ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞:</strong> ${webhookInfo.last_error_message || '–ù–µ—Ç –æ—à–∏–±–æ–∫'}</p>
        <p><strong>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—à–∏–±–æ–∫:</strong> ${webhookInfo.pending_update_count || 0}</p>
        <p><strong>–ú–∞–∫—Å–∏–º—É–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π:</strong> ${webhookInfo.max_connections || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</p>
      ` : ''}
    </div>
  `;
}

// === –ö–û–ù–ï–¶ –§–£–ù–ö–¶–ò–ô –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê ===

// === –§–£–ù–ö–¶–ò–ò –î–õ–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –£–í–ï–î–û–ú–õ–ï–ù–ò–ô ===

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (–¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
function testNotifications() {
  const currentUser = auth.currentUser;
  if (!currentUser) {
    console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω. –í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.');
    return;
  }
  
  const testOrders = [
    { id: 'test1', name: '–ú–æ—Ö–∏—Ç–æ', user: '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤', userId: currentUser.uid, status: 'confirmed' },
    { id: 'test2', name: '–ö–æ—Å–º–æ–ø–æ–ª–∏—Ç–µ–Ω', user: '–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞', userId: currentUser.uid, status: 'preparing' },
    { id: 'test3', name: '–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞', user: '–ê–ª–µ–∫—Å–µ–π –ö–æ–∑–ª–æ–≤', userId: currentUser.uid, status: 'ready' },
    { id: 'test4', name: '–ü–∏–Ω–∞ –ö–æ–ª–∞–¥–∞', user: '–ï–ª–µ–Ω–∞ –í–æ–ª–∫–æ–≤–∞', userId: currentUser.uid, status: 'completed' },
    { id: 'test5', name: '–ë–µ–ª—ã–π –†—É—Å—Å–∫–∏–π', user: '–î–º–∏—Ç—Ä–∏–π –°–æ–∫–æ–ª–æ–≤', userId: currentUser.uid, status: 'cancelled' }
  ];
  
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...');
  
  testOrders.forEach((order, index) => {
    setTimeout(() => {
      showStatusUpdateNotification(order, order.status);
      console.log(`‚úÖ –ü–æ–∫–∞–∑–∞–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: ${order.name} - ${order.status}`);
    }, index * 2000); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–∂–¥–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
  });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–æ–≤—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
function testNewNotifications() {
  const currentUser = auth.currentUser;
  if (!currentUser) {
    console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω. –í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.');
    return;
  }
  
  const testOrders = [
    { id: 'test1', name: '–ú–æ—Ö–∏—Ç–æ', user: '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤', userId: currentUser.uid, status: 'confirmed' },
    { id: 'test2', name: '–ö–æ—Å–º–æ–ø–æ–ª–∏—Ç–µ–Ω', user: '–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞', userId: currentUser.uid, status: 'preparing' },
    { id: 'test3', name: '–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞', user: '–ê–ª–µ–∫—Å–µ–π –ö–æ–∑–ª–æ–≤', userId: currentUser.uid, status: 'ready' },
    { id: 'test4', name: '–ü–∏–Ω–∞ –ö–æ–ª–∞–¥–∞', user: '–ï–ª–µ–Ω–∞ –í–æ–ª–∫–æ–≤–∞', userId: currentUser.uid, status: 'completed' },
    { id: 'test5', name: '–ë–µ–ª—ã–π –†—É—Å—Å–∫–∏–π', user: '–î–º–∏—Ç—Ä–∏–π –°–æ–∫–æ–ª–æ–≤', userId: currentUser.uid, status: 'cancelled' }
  ];
  
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...');
  
  testOrders.forEach((order, index) => {
    setTimeout(() => {
      showStatusUpdateNotification(order, order.status);
      console.log(`‚úÖ –ü–æ–∫–∞–∑–∞–Ω–æ –Ω–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: ${order.name} - ${order.status}`);
    }, index * 3000); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–∂–¥–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
  });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω –∏–∑ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
function testModalLayers() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ª–æ–µ–≤ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω...');
  
  // –°–Ω–∞—á–∞–ª–∞ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
  if (adminPanel) {
    openModal(adminPanel);
    console.log('‚úÖ –û—Ç–∫—Ä—ã—Ç–∞ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å (z-index: 3000)');
    
    // –ß–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã –æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –∫–æ–∫—Ç–µ–π–ª—è –ø–æ–≤–µ—Ä—Ö –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
    setTimeout(() => {
      if (cocktailFormModal) {
        openModal(cocktailFormModal);
        console.log('‚úÖ –û—Ç–∫—Ä—ã—Ç–∞ —Ñ–æ—Ä–º–∞ –∫–æ–∫—Ç–µ–π–ª—è –ø–æ–≤–µ—Ä—Ö –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ (z-index: 3001)');
        
        // –ß–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã –∑–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
        setTimeout(() => {
          closeModal(cocktailFormModal);
          console.log('‚úÖ –ó–∞–∫—Ä—ã—Ç–∞ —Ñ–æ—Ä–º–∞ –∫–æ–∫—Ç–µ–π–ª—è');
          
          // –ß–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É –æ—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å—Ç–∞—Ç—É—Å–∞
          setTimeout(() => {
            if (statusModal) {
              openModal(statusModal);
              console.log('‚úÖ –û—Ç–∫—Ä—ã—Ç–æ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–≤–µ—Ä—Ö –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ (z-index: 3001)');
              
              // –ß–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã –∑–∞–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ
              setTimeout(() => {
                closeModal(statusModal);
                closeModal(adminPanel);
                console.log('‚úÖ –í—Å–µ –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –∑–∞–∫—Ä—ã—Ç—ã');
              }, 3000);
            }
          }, 1000);
        }, 3000);
      }
    }, 2000);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è, —á—Ç–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª—å—Ü—É –∑–∞–∫–∞–∑–∞
function testUserNotificationTargeting() {
  const currentUser = auth.currentUser;
  if (!currentUser) {
    console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω. –í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.');
    return;
  }
  
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–∞—Ä–≥–µ—Ç–∏–Ω–≥–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...');
  console.log(`üë§ –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${currentUser.displayName || currentUser.email} (${currentUser.uid})`);
  
  // –¢–µ—Å—Ç 1: –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–¥–æ–ª–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å—Å—è)
  const ownOrder = {
    id: 'test_own',
    name: '–ú–æ—Ö–∏—Ç–æ',
    user: currentUser.displayName || '–¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
    userId: currentUser.uid, // –°–≤–æ–π –∑–∞–∫–∞–∑
    status: 'confirmed'
  };
  
  console.log('üì§ –¢–µ—Å—Ç 1: –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞ (–¥–æ–ª–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å—Å—è)');
  showStatusUpdateNotification(ownOrder, 'confirmed');
  
  // –¢–µ—Å—Ç 2: –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ù–ï –¥–æ–ª–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å—Å—è)
  setTimeout(() => {
    const otherUserOrder = {
      id: 'test_other',
      name: '–ö–æ—Å–º–æ–ø–æ–ª–∏—Ç–µ–Ω',
      user: '–î—Ä—É–≥–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
      userId: 'other_user_id_123', // –ß—É–∂–æ–π –∑–∞–∫–∞–∑
      status: 'preparing'
    };
    
    console.log('üì§ –¢–µ—Å—Ç 2: –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è —á—É–∂–æ–≥–æ –∑–∞–∫–∞–∑–∞ (–ù–ï –¥–æ–ª–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å—Å—è)');
    showStatusUpdateNotification(otherUserOrder, 'preparing');
  }, 2000);
  
  // –¢–µ—Å—Ç 3: –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –±–µ–∑ userId (–ù–ï –¥–æ–ª–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å—Å—è)
  setTimeout(() => {
    const noUserIdOrder = {
      id: 'test_no_user',
      name: '–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞',
      user: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–µ–∑ ID',
      // userId –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
      status: 'ready'
    };
    
    console.log('üì§ –¢–µ—Å—Ç 3: –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –±–µ–∑ userId (–ù–ï –¥–æ–ª–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å—Å—è)');
    showStatusUpdateNotification(noUserIdOrder, 'ready');
  }, 4000);
  
  console.log('‚úÖ –¢–µ—Å—Ç—ã –∑–∞–ø—É—â–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–∞ —ç–∫—Ä–∞–Ω–µ.');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π AudioContext –∏ –≤–∏–±—Ä–∞—Ü–∏–∏
function testAudioAndVibration() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π AudioContext –∏ –≤–∏–±—Ä–∞—Ü–∏–∏...');
  console.log(`üîä –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–≤—É–∫–∞: ${audioContextEnabled ? '–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω' : '–Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω'}`);
  
  const currentUser = auth.currentUser;
  if (!currentUser) {
    console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω. –í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.');
    return;
  }
  
  const testOrder = {
    id: 'test_audio',
    name: '–¢–µ—Å—Ç–æ–≤—ã–π –∫–æ–∫—Ç–µ–π–ª—å',
    user: currentUser.displayName || '–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
    userId: currentUser.uid,
    status: 'confirmed'
  };
  
  console.log('üì§ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ...');
  showStatusUpdateNotification(testOrder, 'confirmed');
  
  if (!audioContextEnabled) {
    console.log('üí° –ö–ª–∏–∫–Ω–∏—Ç–µ –≤ –ª—é–±–æ–º –º–µ—Å—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∑–≤—É–∫–∞');
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Å–µ—Ö –Ω–æ–≤—ã—Ö –∫—Ä–∞—Å–∏–≤—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
function testBeautifulNotifications() {
  console.log('üé® –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫—Ä–∞—Å–∏–≤—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Å —ç–º–æ–¥–∑–∏...');
  
  const currentUser = auth.currentUser;
  if (!currentUser) {
    console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω. –í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.');
    return;
  }
  
  const testOrders = [
    { id: 'test1', name: '–ú–æ—Ö–∏—Ç–æ', user: '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤', userId: currentUser.uid, status: 'confirmed' },
    { id: 'test2', name: '–ö–æ—Å–º–æ–ø–æ–ª–∏—Ç–µ–Ω', user: '–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞', userId: currentUser.uid, status: 'preparing' },
    { id: 'test3', name: '–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞', user: '–ê–ª–µ–∫—Å–µ–π –ö–æ–∑–ª–æ–≤', userId: currentUser.uid, status: 'ready' },
    { id: 'test4', name: '–ü–∏–Ω–∞ –ö–æ–ª–∞–¥–∞', user: '–ï–ª–µ–Ω–∞ –í–æ–ª–∫–æ–≤–∞', userId: currentUser.uid, status: 'completed' },
    { id: 'test5', name: '–ë–µ–ª—ã–π –†—É—Å—Å–∫–∏–π', user: '–î–º–∏—Ç—Ä–∏–π –°–æ–∫–æ–ª–æ–≤', userId: currentUser.uid, status: 'cancelled' }
  ];
  
  console.log('üì§ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ —Ç–∏–ø—ã –∫—Ä–∞—Å–∏–≤—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Å —ç–º–æ–¥–∑–∏...');
  
  testOrders.forEach((order, index) => {
    setTimeout(() => {
      showStatusUpdateNotification(order, order.status);
      console.log(`‚úÖ –ü–æ–∫–∞–∑–∞–Ω–æ –∫—Ä–∞—Å–∏–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: ${order.name} - ${order.status}`);
    }, index * 4000); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–∂–¥–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 4 —Å–µ–∫—É–Ω–¥—ã
  });
  
  console.log('üí° –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞:');
  console.log('   - –≠–º–æ–¥–∑–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ (‚úÖüë®‚Äçüç≥üç∏üéâ‚ùå)');
  console.log('   - –†–∞–∑–Ω—ã–µ —Ü–≤–µ—Ç–∞ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å—Ç–∞—Ç—É—Å–æ–≤');
  console.log('   - –ö—Ä–∞—Å–∏–≤—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –∏ –ø–µ—Ä–µ—Ö–æ–¥—ã');
  console.log('   - –†–∞–∑–Ω—ã–µ –∑–≤—É–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞');
  console.log('   - –†–∞–∑–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –≤–∏–±—Ä–∞—Ü–∏–∏');
  console.log('   - –£–ª—É—á—à–µ–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω –∏ —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–∫—É');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏
function testConfirmedNotification() {
  console.log('‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞...');
  
  const currentUser = auth.currentUser;
  if (!currentUser) {
    console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω. –í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.');
    return;
  }
  
  const testOrder = {
    id: 'test_confirmed',
    name: '–ú–æ—Ö–∏—Ç–æ',
    user: currentUser.displayName || '–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
    userId: currentUser.uid,
    status: 'confirmed'
  };
  
  console.log('üì§ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏...');
  showStatusUpdateNotification(testOrder, 'confirmed');
  
  console.log('üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:');
  console.log('   - –≠–º–æ–¥–∑–∏ ‚úÖ –¥–æ–ª–∂–µ–Ω –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ');
  console.log('   - –¢–µ–∫—Å—Ç "–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω"');
  console.log('   - –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–∫—Ç–µ–π–ª—è "–ú–æ—Ö–∏—Ç–æ"');
  console.log('   - –°—Ç–∞—Ç—É—Å "–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω"');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–º–æ–¥–∑–∏
function testEmojiDisplay() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–º–æ–¥–∑–∏...');
  
  const testEmojis = ['‚úÖ', '‚ùå', 'üë®‚Äçüç≥', 'üç∏', 'üéâ'];
  
  testEmojis.forEach((emoji, index) => {
    setTimeout(() => {
      const notification = document.createElement('div');
      notification.className = 'status-update-notification';
      notification.innerHTML = `
        <div class="notification-content">
          <div class="notification-text">
            <div class="notification-title">${emoji} –¢–µ—Å—Ç —ç–º–æ–¥–∑–∏</div>
            <div class="notification-cocktail">"–¢–µ—Å—Ç–æ–≤—ã–π –∫–æ–∫—Ç–µ–π–ª—å"</div>
            <div class="notification-subtitle">—Ç–µ—Å—Ç</div>
          </div>
          <button class="notification-close" onclick="this.parentElement.parentElement.remove()">
            <i class="fas fa-times"></i>
          </button>
        </div>
        <div class="notification-progress"></div>
      `;
      
      // –≠–º–æ–¥–∑–∏ —Ç–µ–ø–µ—Ä—å –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ
      
      document.body.appendChild(notification);
      
      setTimeout(() => {
        notification.remove();
      }, 3000);
      
      console.log(`üì± –¢–µ—Å—Ç —ç–º–æ–¥–∑–∏ ${index + 1}: ${emoji}`);
    }, index * 1000);
  });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
function testEmojiNotifications() {
  console.log('üé® –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...');
  
  const currentUser = auth.currentUser;
  if (!currentUser) {
    console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω. –í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.');
    return;
  }
  
  const testOrder = {
    id: 'test_emoji',
    name: '–ú–æ—Ö–∏—Ç–æ',
    user: currentUser.displayName || '–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
    userId: currentUser.uid,
    status: 'confirmed'
  };
  
  console.log('üì§ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞...');
  showStatusUpdateNotification(testOrder, 'confirmed');
  
  setTimeout(() => {
    testOrder.status = 'preparing';
    testOrder.name = '–ö–æ—Å–º–æ–ø–æ–ª–∏—Ç–µ–Ω';
    showStatusUpdateNotification(testOrder, 'preparing');
  }, 3000);
  
  setTimeout(() => {
    testOrder.status = 'ready';
    testOrder.name = '–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞';
    showStatusUpdateNotification(testOrder, 'ready');
  }, 6000);
  
  console.log('‚úÖ –¢–µ—Å—Ç–∏—Ä—É–µ–º:');
  console.log('   - ‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞');
  console.log('   - üë®‚Äçüç≥ –ì–æ—Ç–æ–≤–∏—Ç—Å—è');
  console.log('   - üç∏ –ì–æ—Ç–æ–≤');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏
function debugNotificationIssue() {
  console.log('üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–†–û–ë–õ–ï–ú–´ –° –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø–ú–ò');
  console.log('=' .repeat(50));
  
  const currentUser = auth.currentUser;
  if (!currentUser) {
    console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
    return;
  }
  
  console.log('üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', currentUser.displayName || currentUser.email);
  console.log('üÜî User ID:', currentUser.uid);
  
  // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º listener
  console.log('\n1Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê LISTENER:');
  console.log('üìä –ì–ª–æ–±–∞–ª—å–Ω—ã–π listener –∞–∫—Ç–∏–≤–µ–Ω:', !!globalOrdersListener);
  console.log('üìä –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –∑–∞–∫–∞–∑–æ–≤:', lastOrderStatuses.size);
  console.log('üìä –°–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –∑–∞–∫–∞–∑–æ–≤:', Array.from(lastOrderStatuses.entries()));
  
  // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  console.log('\n2Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –§–£–ù–ö–¶–ò–ò –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø:');
  console.log('üìä showStatusUpdateNotification –¥–æ—Å—Ç—É–ø–Ω–∞:', typeof showStatusUpdateNotification === 'function');
  
  // 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–∞–ø—Ä—è–º—É—é
  console.log('\n3Ô∏è‚É£ –¢–ï–°–¢ –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø:');
  const testOrder = {
    id: 'debug_test',
    name: '–¢–µ—Å—Ç–æ–≤—ã–π –∫–æ–∫—Ç–µ–π–ª—å',
    user: currentUser.displayName || '–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
    userId: currentUser.uid,
    status: 'confirmed'
  };
  
  console.log('üì§ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ...');
  showStatusUpdateNotification(testOrder, 'confirmed');
  
  // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º DOM
  console.log('\n4Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê DOM:');
  const notifications = document.querySelectorAll('.status-update-notification');
  console.log('üìä –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ:', notifications.length);
  
  // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º Firebase –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
  console.log('\n5Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê FIREBASE:');
  console.log('üìä Firebase app:', !!firebase.apps.length);
  console.log('üìä Firestore:', !!db);
  console.log('üìä Auth:', !!auth);
  
  console.log('\n‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤—ã—à–µ.');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –ø–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ listener
function reinitializeListener() {
  console.log('üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è listener...');
  
  const currentUser = auth.currentUser;
  if (!currentUser) {
    console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
    return;
  }
  
  // –û—Ç–∫–ª—é—á–∞–µ–º —Ç–µ–∫—É—â–∏–π listener
  if (globalOrdersListener) {
    console.log('üîÑ –û—Ç–∫–ª—é—á–∞–µ–º —Ç–µ–∫—É—â–∏–π listener');
    globalOrdersListener();
    globalOrdersListener = null;
  }
  
  // –û—á–∏—â–∞–µ–º –∫—ç—à —Å—Ç–∞—Ç—É—Å–æ–≤
  lastOrderStatuses.clear();
  console.log('üßπ –ö—ç—à —Å—Ç–∞—Ç—É—Å–æ–≤ –æ—á–∏—â–µ–Ω');
  
  // –ü–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º listener
  console.log('üîÑ –ü–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º listener...');
  initGlobalOrderStatusListener();
  
  console.log('‚úÖ Listener –ø–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ Telegram —Å —Å–∞–π—Ç–æ–º
async function testTelegramIntegration() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ Telegram —Å —Å–∞–π—Ç–æ–º...');
  
  const currentUser = auth.currentUser;
  if (!currentUser) {
    console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω. –í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.');
    return;
  }
  
  // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å webhook —Å–µ—Ä–≤–µ—Ä–∞
  console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook —Å–µ—Ä–≤–µ—Ä–∞...');
  try {
    const response = await fetch(`${WEBHOOK_SERVER_URL}/health`);
    const data = await response.json();
    
    if (data.status === 'OK') {
      console.log('‚úÖ Webhook —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç:', data);
    } else {
      console.log('‚ùå Webhook —Å–µ—Ä–≤–µ—Ä –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç:', data);
      return;
    }
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ webhook —Å–µ—Ä–≤–µ—Ä—É:', error.message);
    return;
  }
  
  // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º Firebase –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ webhook —Å–µ—Ä–≤–µ—Ä–∞
  console.log('2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ Firebase –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è webhook —Å–µ—Ä–≤–µ—Ä–∞...');
  try {
    const response = await fetch(`${WEBHOOK_SERVER_URL}/test-firebase`);
    const data = await response.json();
    
    if (data.success) {
      console.log('‚úÖ Firebase –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ webhook —Å–µ—Ä–≤–µ—Ä–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç:', data);
    } else {
      console.log('‚ùå Firebase –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ webhook —Å–µ—Ä–≤–µ—Ä–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç:', data);
      return;
    }
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ Firebase:', error.message);
    return;
  }
  
  // 3. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑
  console.log('3Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞...');
  const testOrderData = {
    name: '–¢–µ—Å—Ç–æ–≤—ã–π –∫–æ–∫—Ç–µ–π–ª—å –¥–ª—è Telegram',
    user: currentUser.displayName || '–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
    userId: currentUser.uid,
    status: 'pending',
    createdAt: new Date(),
    displayTime: new Date().toLocaleString('ru-RU')
  };
  
  try {
    const orderRef = await db.collection('orders').add(testOrderData);
    const orderId = orderRef.id;
    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω:', orderId);
    
    // 4. –°–∏–º—É–ª–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —á–µ—Ä–µ–∑ webhook
    console.log('4Ô∏è‚É£ –°–∏–º—É–ª—è—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —á–µ—Ä–µ–∑ webhook...');
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ (–∫–∞–∫ —ç—Ç–æ –¥–µ–ª–∞–µ—Ç webhook —Å–µ—Ä–≤–µ—Ä)
    await db.collection('orders').doc(orderId).update({
      status: 'confirmed',
      updatedAt: new Date(),
      updatedBy: 'telegram_admin'
    });
    
    console.log('‚úÖ –°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ "confirmed"');
    console.log('üëÄ –°–ª–µ–¥–∏—Ç–µ –∑–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ–º –Ω–∞ —Å–∞–π—Ç–µ...');
    
    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ listener —Ä–∞–±–æ—Ç–∞–µ—Ç
    console.log('5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ listener...');
    console.log(`üìä –ê–∫—Ç–∏–≤–Ω—ã—Ö listeners: ${globalOrdersListener ? '1' : '0'}`);
    console.log(`üìä –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –∑–∞–∫–∞–∑–æ–≤: ${lastOrderStatuses.size}`);
    
    // 6. –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥
    setTimeout(async () => {
      try {
        await db.collection('orders').doc(orderId).delete();
        console.log('üßπ –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ —É–¥–∞–ª–µ–Ω');
      } catch (error) {
        console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑:', error.message);
      }
    }, 10000);
    
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞:', error.message);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–¥–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
function testSingleNotification(status = 'confirmed') {
  const currentUser = auth.currentUser;
  if (!currentUser) {
    console.log('‚ùå –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É');
    return;
  }
  
  // –°–ø–∏—Å–æ–∫ —Ä–µ–∞–ª—å–Ω—ã—Ö –∫–æ–∫—Ç–µ–π–ª–µ–π –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  const testCocktails = [
    '–ú–æ—Ö–∏—Ç–æ',
    '–ö–æ—Å–º–æ–ø–æ–ª–∏—Ç–µ–Ω', 
    '–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞',
    '–ü–∏–Ω–∞ –ö–æ–ª–∞–¥–∞',
    '–î–∞–π–∫–∏—Ä–∏',
    '–ú–∞—Ä—Ç–∏–Ω–∏',
    '–õ–æ–Ω–≥ –ê–π–ª–µ–Ω–¥',
    '–ë-52'
  ];
  
  const randomCocktail = testCocktails[Math.floor(Math.random() * testCocktails.length)];
  
  const testOrder = {
    id: 'test-single',
    name: randomCocktail,
    status: status,
    userId: currentUser.uid
  };
  
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', randomCocktail, '-', status);
  showStatusUpdateNotification(testOrder, status);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è listener'–∞
function checkListenerStatus() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è listener\'–∞:');
  console.log('- globalOrdersListener:', !!globalOrdersListener);
  console.log('- lastOrderStatuses size:', lastOrderStatuses.size);
  console.log('- currentUser:', !!auth.currentUser);
  console.log('- Firebase db:', !!db);
  
  if (globalOrdersListener) {
    console.log('‚úÖ Listener –∞–∫—Ç–∏–≤–µ–Ω');
  } else {
    console.log('‚ùå Listener –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω');
  }
  
  return {
    listenerActive: !!globalOrdersListener,
    ordersCount: lastOrderStatuses.size,
    userLoggedIn: !!auth.currentUser,
    firebaseConnected: !!db
  };
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø–æ–∫–∞–∑–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å –æ—Ç–ª–∞–¥–∫–æ–π
function forceShowNotification(status = 'confirmed') {
  console.log('üîß –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –ø–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', status);
  
  const testCocktails = ['–ú–æ—Ö–∏—Ç–æ', '–ö–æ—Å–º–æ–ø–æ–ª–∏—Ç–µ–Ω', '–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞', '–ü–∏–Ω–∞ –ö–æ–ª–∞–¥–∞'];
  const randomCocktail = testCocktails[Math.floor(Math.random() * testCocktails.length)];
  
  // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  const notification = document.createElement('div');
  notification.id = 'force-notification-test';
  notification.innerHTML = `
    <div style="padding: 20px; background: red; color: white; font-size: 18px; font-weight: bold; text-align: center;">
      <div style="font-size: 16px; margin-bottom: 5px;">–í–∞—à –∑–∞–∫–∞–∑</div>
      <div style="font-size: 20px; font-style: italic; margin-bottom: 5px;">"${randomCocktail}"</div>
      <div style="font-size: 18px; text-transform: capitalize;">${status}</div>
    </div>
  `;
  
  // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏
  notification.style.cssText = `
    position: fixed !important;
    top: 50px !important;
    right: 50px !important;
    z-index: 999999 !important;
    background: red !important;
    color: white !important;
    padding: 20px !important;
    border-radius: 10px !important;
    font-size: 18px !important;
    font-weight: bold !important;
    box-shadow: 0 4px 20px rgba(0,0,0,0.5) !important;
    display: block !important;
    visibility: visible !important;
    opacity: 1 !important;
    pointer-events: auto !important;
    width: 350px !important;
    height: auto !important;
  `;
  
  // –î–æ–±–∞–≤–ª—è–µ–º –≤ DOM
  document.body.appendChild(notification);
  console.log('üîß –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ DOM');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ —Å–µ–∫—É–Ω–¥—É
  setTimeout(() => {
    const rect = notification.getBoundingClientRect();
    const computedStyle = window.getComputedStyle(notification);
    console.log('üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', {
      rect: rect,
      display: computedStyle.display,
      visibility: computedStyle.visibility,
      opacity: computedStyle.opacity,
      zIndex: computedStyle.zIndex,
      position: computedStyle.position
    });
    
    // –£–¥–∞–ª—è–µ–º —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
    setTimeout(() => {
      if (notification.parentNode) {
        notification.parentNode.removeChild(notification);
        console.log('üîß –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ');
      }
    }, 5000);
  }, 1000);
}

// –ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
function testSimpleNotification() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Å—Ç–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ...');
  
  // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
  const testOrder = {
    id: 'test_' + Date.now(),
    name: '–¢–µ—Å—Ç–æ–≤—ã–π –∫–æ–∫—Ç–µ–π–ª—å üç∏',
    userId: auth.currentUser ? auth.currentUser.uid : 'test_user',
    status: 'confirmed'
  };
  
  console.log('üìä –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∞:', testOrder);
  console.log('üë§ –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', auth.currentUser ? auth.currentUser.uid : '–ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
  
  // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  showStatusUpdateNotification(testOrder, 'confirmed');
  
  console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ');
}

// –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
function forceCreateNotification() {
  console.log('üîß –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–æ–∑–¥–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ...');
  
  // –°–æ–∑–¥–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–∞–ø—Ä—è–º—É—é
  const notification = document.createElement('div');
  notification.className = 'status-update-notification';
  notification.innerHTML = `
    <div class="notification-content">
      <div class="notification-text">
        <div class="notification-title">–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω</div>
        <div class="notification-cocktail">"–ú–æ—Ö–∏—Ç–æ"</div>
        <div class="notification-subtitle">‚úÖ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω</div>
      </div>
      <button class="notification-close" onclick="this.parentElement.parentElement.remove()">
        <i class="fas fa-times"></i>
      </button>
    </div>
    <div class="notification-progress"></div>
  `;
  
  // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏
  notification.style.cssText = `
    position: fixed !important;
    top: 20px !important;
    right: 20px !important;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%) !important;
    color: white !important;
    border-radius: 20px !important;
    box-shadow: 
      0 20px 60px rgba(0, 0, 0, 0.15),
      0 8px 25px rgba(0, 0, 0, 0.1),
      0 0 0 1px rgba(255, 255, 255, 0.2) !important;
    z-index: 99999 !important;
    animation: notificationSlideIn 0.8s cubic-bezier(0.34, 1.56, 0.64, 1) !important;
    display: flex !important;
    flex-direction: column !important;
    font-family: 'Inter', sans-serif !important;
    font-weight: 500 !important;
    min-width: 380px !important;
    max-width: 480px !important;
    backdrop-filter: blur(20px) !important;
    border: 1px solid rgba(255, 255, 255, 0.3) !important;
    overflow: hidden !important;
    visibility: visible !important;
    opacity: 1 !important;
    pointer-events: auto !important;
  `;
  
  document.body.appendChild(notification);
  console.log('‚úÖ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ');
  
  // –£–¥–∞–ª—è–µ–º —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
  setTimeout(() => {
    if (notification.parentNode) {
      notification.style.animation = 'notificationSlideOut 0.6s ease';
      setTimeout(() => {
        if (notification.parentNode) {
          notification.parentNode.removeChild(notification);
        }
      }, 600);
    }
  }, 5000);
}

// –ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
function quickTest() {
  console.log('üöÄ –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è...');
  
  // –°–æ–∑–¥–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–∞–ø—Ä—è–º—É—é
  const notification = document.createElement('div');
  notification.className = 'status-update-notification';
  notification.innerHTML = `
    <div class="notification-content">
      <div class="notification-icon">
        <i class="fas fa-check-circle"></i>
      </div>
      <div class="notification-text">
        <div class="notification-title">–¢–µ—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</div>
        <div class="notification-cocktail">"–ú–æ—Ö–∏—Ç–æ"</div>
        <div class="notification-subtitle">‚úÖ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω</div>
      </div>
      <button class="notification-close" onclick="this.parentElement.parentElement.remove()">
        <i class="fas fa-times"></i>
      </button>
    </div>
    <div class="notification-progress"></div>
  `;
  
  document.body.appendChild(notification);
  console.log('‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ DOM');
  
  // –£–¥–∞–ª—è–µ–º —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
  setTimeout(() => {
    if (notification.parentNode) {
      notification.style.animation = 'notificationSlideOut 0.6s ease';
      setTimeout(() => {
        if (notification.parentNode) {
          notification.parentNode.removeChild(notification);
        }
      }, 600);
    }
  }, 5000);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∏–ª–µ–π
function forceReloadStyles() {
  console.log('üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∏–ª–∏...');
  
  // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Å—Ç–∏–ª–∏
  const oldStyles = document.querySelectorAll('link[href*="style.css"]');
  oldStyles.forEach(link => link.remove());
  
  // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ —Å—Ç–∏–ª–∏ —Å timestamp
  const newLink = document.createElement('link');
  newLink.rel = 'stylesheet';
  newLink.href = `style.css?v=${Date.now()}`;
  document.head.appendChild(newLink);
  
  console.log('‚úÖ –°—Ç–∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∏–ª–µ–π
function checkStyles() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Å—Ç–∏–ª–µ–π...');
  
  const testEl = document.createElement('div');
  testEl.className = 'status-update-notification';
  testEl.style.position = 'fixed';
  testEl.style.top = '-1000px';
  testEl.style.left = '-1000px';
  testEl.style.visibility = 'hidden';
  document.body.appendChild(testEl);
  
  const styles = window.getComputedStyle(testEl);
  console.log('üìä –°—Ç–∏–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', {
    background: styles.background,
    borderRadius: styles.borderRadius,
    boxShadow: styles.boxShadow,
    zIndex: styles.zIndex
  });
  
  document.body.removeChild(testEl);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
window.testAutoHideNotifications = function() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...');
  
  const testOrder = {
    id: 'auto-hide-test',
    name: '–¢–µ—Å—Ç–æ–≤—ã–π –∫–æ–∫—Ç–µ–π–ª—å',
    userId: auth.currentUser?.uid || 'test-user'
  };
  
  // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã —Å —Ä–∞–∑–Ω—ã–º–∏ –≤—Ä–µ–º–µ–Ω–∞–º–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const statuses = [
    { status: 'confirmed', time: 8000, name: '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω (8 —Å–µ–∫)' },
    { status: 'preparing', time: 6000, name: '–ì–æ—Ç–æ–≤–∏—Ç—Å—è (6 —Å–µ–∫)' },
    { status: 'ready', time: 10000, name: '–ì–æ—Ç–æ–≤ (10 —Å–µ–∫)' },
    { status: 'completed', time: 12000, name: '–ó–∞–≤–µ—Ä—à–µ–Ω (12 —Å–µ–∫)' },
    { status: 'cancelled', time: 8000, name: '–û—Ç–º–µ–Ω–µ–Ω (8 —Å–µ–∫)' }
  ];
  
  statuses.forEach((test, index) => {
    setTimeout(() => {
      console.log(`üì± –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: ${test.name}`);
      showStatusUpdateNotification(testOrder, test.status);
    }, index * 15000); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–∂–¥–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 15 —Å–µ–∫—É–Ω–¥
  });
  
  console.log('‚úÖ –¢–µ—Å—Ç –∑–∞–ø—É—â–µ–Ω! –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –±—É–¥—É—Ç –ø–æ—è–≤–ª—è—Ç—å—Å—è –∫–∞–∂–¥—ã–µ 15 —Å–µ–∫—É–Ω–¥');
  console.log('‚è∞ –í—Ä–µ–º–µ–Ω–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è:');
  console.log('   - –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω: 8 —Å–µ–∫—É–Ω–¥');
  console.log('   - –ì–æ—Ç–æ–≤–∏—Ç—Å—è: 6 —Å–µ–∫—É–Ω–¥');
  console.log('   - –ì–æ—Ç–æ–≤: 10 —Å–µ–∫—É–Ω–¥');
  console.log('   - –ó–∞–≤–µ—Ä—à–µ–Ω: 12 —Å–µ–∫—É–Ω–¥');
  console.log('   - –û—Ç–º–µ–Ω–µ–Ω: 8 —Å–µ–∫—É–Ω–¥');
};

// –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –∞–Ω–∏–º–∞—Ü–∏–∏ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è
window.testNotificationHide = function() {
  console.log('üß™ –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –∞–Ω–∏–º–∞—Ü–∏–∏ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è...');
  
  const testOrder = {
    id: 'hide-test',
    name: '–¢–µ—Å—Ç –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è',
    userId: auth.currentUser?.uid || 'test-user'
  };
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –∫–æ—Ä–æ—Ç–∫–∏–º –≤—Ä–µ–º–µ–Ω–µ–º (3 —Å–µ–∫—É–Ω–¥—ã)
  showStatusUpdateNotification(testOrder, 'confirmed');
  
  console.log('‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–∫–∞–∑–∞–Ω–æ! –û–Ω–æ –∏—Å—á–µ–∑–Ω–µ—Ç —á–µ—Ä–µ–∑ 8 —Å–µ–∫—É–Ω–¥ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π');
  console.log('üí° –í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –∑–∞–∫—Ä—ã—Ç—å –µ–≥–æ –≤—Ä—É—á–Ω—É—é –∫–Ω–æ–ø–∫–æ–π "√ó"');
};

// –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π —Ç–µ—Å—Ç —Ç–∞–π–º–µ—Ä–∞
window.testTimerDiagnostic = function() {
  console.log('üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π —Ç–µ—Å—Ç —Ç–∞–π–º–µ—Ä–∞...');
  
  const testOrder = {
    id: 'timer-test',
    name: '–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Ç–∞–π–º–µ—Ä–∞',
    userId: auth.currentUser?.uid || 'test-user'
  };
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
  showStatusUpdateNotification(testOrder, 'confirmed');
  
  // –õ–æ–≥–∏—Ä—É–µ–º –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
  let seconds = 0;
  const logInterval = setInterval(() => {
    seconds++;
    console.log(`‚è∞ –ü—Ä–æ—à–ª–æ ${seconds} —Å–µ–∫—É–Ω–¥ —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ–∫–∞–∑–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è`);
    
    if (seconds >= 10) {
      clearInterval(logInterval);
      console.log('üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ï—Å–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–µ –∏—Å—á–µ–∑–ª–æ, –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º–∞ —Å —Ç–∞–π–º–µ—Ä–æ–º.');
    }
  }, 1000);
  
  console.log('‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–∫–∞–∑–∞–Ω–æ! –°–ª–µ–¥–∏—Ç–µ –∑–∞ –ª–æ–≥–∞–º–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏.');
  console.log('üí° –ù–ï –î–í–ò–ì–ê–ô–¢–ï –ú–´–®–¨–Æ - —ç—Ç–æ –ø–æ–º–æ–∂–µ—Ç –≤—ã—è–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É —Å —Ç–∞–π–º–µ—Ä–æ–º.');
};

// –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –≥–ª–æ–±–∞–ª—å–Ω—É—é –æ–±–ª–∞—Å—Ç—å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
if (typeof window !== 'undefined') {
  window.testNotifications = testNotifications;
  window.testNewNotifications = testNewNotifications;
  window.testModalLayers = testModalLayers;
  window.testUserNotificationTargeting = testUserNotificationTargeting;
  window.testAudioAndVibration = testAudioAndVibration;
  window.testTelegramIntegration = testTelegramIntegration;
  window.debugNotificationIssue = debugNotificationIssue;
  window.reinitializeListener = reinitializeListener;
  window.addTestCocktails = addTestCocktails;
  window.loadCocktails = loadCocktails;
  window.loadStoplist = loadStoplist;
  window.testSingleNotification = testSingleNotification;
  window.checkListenerStatus = checkListenerStatus;
  window.forceShowNotification = forceShowNotification;
  window.testSimpleNotification = testSimpleNotification;
  window.forceCreateNotification = forceCreateNotification;
  window.quickTest = quickTest;
  window.forceReloadStyles = forceReloadStyles;
  window.checkStyles = checkStyles;
}

// === –ö–û–ù–ï–¶ –§–£–ù–ö–¶–ò–ô –î–õ–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø ===

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –∫–æ–∫—Ç–µ–π–ª–µ–π
async function addTestCocktails() {
  try {
    console.log('üç∏ –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∫–æ–∫—Ç–µ–π–ª–∏...');
    
    const testCocktails = [
      {
        name: "–ú–æ—Ö–∏—Ç–æ",
        ingredients: "–ë–µ–ª—ã–π —Ä–æ–º, —Å–≤–µ–∂–∞—è –º—è—Ç–∞, –ª–∞–π–º, —Å–∞—Ö–∞—Ä, —Å–æ–¥–æ–≤–∞—è",
        mood: "–û—Å–≤–µ–∂–∞—é—â–∏–π –∏ –±–æ–¥—Ä—è—â–∏–π",
        alcohol: 15,
        category: "classic",
        createdAt: new Date()
      },
      {
        name: "–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞",
        ingredients: "–¢–µ–∫–∏–ª–∞, –ª–∞–π–º–æ–≤—ã–π —Å–æ–∫, —Ç—Ä–∏–ø–ª-—Å–µ–∫, —Å–æ–ª—å",
        mood: "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –∏ —ç–ª–µ–≥–∞–Ω—Ç–Ω—ã–π",
        alcohol: 20,
        category: "classic",
        createdAt: new Date()
      },
      {
        name: "–ö–æ—Å–º–æ–ø–æ–ª–∏—Ç–µ–Ω",
        ingredients: "–í–æ–¥–∫–∞, –∫–ª—é–∫–≤–µ–Ω–Ω—ã–π —Å–æ–∫, –ª–∞–π–º, —Ç—Ä–∏–ø–ª-—Å–µ–∫",
        mood: "–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∏ —Å—Ç–∏–ª—å–Ω—ã–π",
        alcohol: 18,
        category: "classic",
        createdAt: new Date()
      },
      {
        name: "–ü–∏–Ω–∞ –ö–æ–ª–∞–¥–∞",
        ingredients: "–ë–µ–ª—ã–π —Ä–æ–º, –∫–æ–∫–æ—Å–æ–≤–æ–µ –º–æ–ª–æ–∫–æ, –∞–Ω–∞–Ω–∞—Å–æ–≤—ã–π —Å–æ–∫",
        mood: "–¢—Ä–æ–ø–∏—á–µ—Å–∫–∏–π –∏ —Ä–∞—Å—Å–ª–∞–±–ª—è—é—â–∏–π",
        alcohol: 12,
        category: "classic",
        createdAt: new Date()
      },
      {
        name: "–ë–µ–ª—ã–π –†—É—Å—Å–∫–∏–π",
        ingredients: "–í–æ–¥–∫–∞, –∫–æ—Ñ–µ–π–Ω—ã–π –ª–∏–∫–µ—Ä, —Å–ª–∏–≤–∫–∏",
        mood: "–ö—Ä–µ–º–æ–≤—ã–π –∏ —É—é—Ç–Ω—ã–π",
        alcohol: 16,
        category: "classic",
        createdAt: new Date()
      },
      {
        name: "–î–∞–π–∫–∏—Ä–∏",
        ingredients: "–ë–µ–ª—ã–π —Ä–æ–º, –ª–∞–π–º–æ–≤—ã–π —Å–æ–∫, —Å–∞—Ö–∞—Ä",
        mood: "–ü—Ä–æ—Å—Ç–æ–π –∏ –∏–∑—ã—Å–∫–∞–Ω–Ω—ã–π",
        alcohol: 22,
        category: "classic",
        createdAt: new Date()
      },
      {
        name: "–û–≥–Ω–µ–Ω–Ω—ã–π –®–æ—Ç",
        ingredients: "–¢–µ–∫–∏–ª–∞, —Ç–∞–±–∞—Å–∫–æ, —Å–æ–ª—å",
        mood: "–û—Å—Ç—Ä—ã–π –∏ –±–æ–¥—Ä—è—â–∏–π",
        alcohol: 40,
        category: "shots",
        createdAt: new Date()
      },
      {
        name: "–ë-52",
        ingredients: "–ö–æ—Ñ–µ–π–Ω—ã–π –ª–∏–∫–µ—Ä, –∏—Ä–ª–∞–Ω–¥—Å–∫–∏–π –∫—Ä–µ–º, —Ç—Ä–æ–π–Ω–æ–π —Å–µ–∫",
        mood: "–°–ª–æ–∏—Å—Ç—ã–π –∏ —Å–ª–∞–¥–∫–∏–π",
        alcohol: 25,
        category: "shots",
        createdAt: new Date()
      },
      {
        name: "–ê—Å–∞—Ñ—å–µ–≤ –°–ø–µ—à–ª",
        ingredients: "–î–∂–∏–Ω, –ª–∏–º–æ–Ω–Ω—ã–π —Å–æ–∫, –º–µ–¥, —Ä–æ–∑–º–∞—Ä–∏–Ω",
        mood: "–ê–≤—Ç–æ—Ä—Å–∫–∏–π –∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π",
        alcohol: 18,
        category: "signature",
        createdAt: new Date()
      },
      {
        name: "–ó–æ–ª–æ—Ç–æ–π –ó–∞–∫–∞—Ç",
        ingredients: "–í–æ–¥–∫–∞, –∞–ø–µ–ª—å—Å–∏–Ω–æ–≤—ã–π —Å–æ–∫, –≥—Ä–µ–Ω–∞–¥–∏–Ω, –∑–æ–ª–æ—Ç–∞—è –ø—ã–ª—å—Ü–∞",
        mood: "–†–æ—Å–∫–æ—à–Ω—ã–π –∏ –∑–∞–≥–∞–¥–æ—á–Ω—ã–π",
        alcohol: 16,
        category: "signature",
        createdAt: new Date()
      }
    ];
    
    const batch = db.batch();
    
    testCocktails.forEach(cocktail => {
      const docRef = db.collection('cocktails').doc();
      batch.set(docRef, cocktail);
    });
    
    await batch.commit();
    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –∫–æ–∫—Ç–µ–π–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –∫–æ–∫—Ç–µ–π–ª–µ–π:', error);
  }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–π
initThemeToggle();

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤–∫–ª–∞–¥–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
function initCategoryTabs() {
  const categoryTabs = document.querySelectorAll('.category-tab');
  
  categoryTabs.forEach(tab => {
    tab.addEventListener('click', () => {
      const category = tab.getAttribute('data-category');
      switchCategory(category);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –≤–∫–ª–∞–¥–∫—É
      categoryTabs.forEach(t => t.classList.remove('active'));
      tab.classList.add('active');
    });
  });
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
function switchCategory(category) {
  currentCategory = category;
  filterCocktailsByCategory();
}

// –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∫–æ–∫—Ç–µ–π–ª–µ–π –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
function filterCocktailsByCategory() {
  const cards = document.querySelectorAll('.cocktail-card');
  
  cards.forEach(card => {
    const cocktailName = card.getAttribute('data-name');
    const cocktail = cocktailsData.find(c => c.name === cocktailName);
    
    if (!cocktail) return;
    
    const shouldShow = shouldShowCocktail(cocktail, currentCategory);
    
    if (shouldShow) {
      card.style.display = 'block';
      card.style.animation = 'fadeInUp 0.6s ease forwards';
    } else {
      card.style.display = 'none';
    }
  });
}

// –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ, –¥–æ–ª–∂–µ–Ω –ª–∏ –∫–æ–∫—Ç–µ–π–ª—å –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ –¥–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
function shouldShowCocktail(cocktail, category) {
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∫–æ–∫—Ç–µ–π–ª—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –µ–≥–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
  const cocktailCategory = getCocktailCategory(cocktail);
  return cocktailCategory === category;
}

// –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫–æ–∫—Ç–µ–π–ª—è
function getCocktailCategory(cocktail) {
  // –ï—Å–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è —É–∂–µ –∑–∞–¥–∞–Ω–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ—ë
  if (cocktail.category) {
    return cocktail.category;
  }
  
  const name = cocktail.name.toLowerCase();
  const ingredients = (cocktail.ingredients || '').toLowerCase();
  const alcohol = cocktail.alcohol || 0;
  
  // –®–æ—Ç—ã - –∫—Ä–µ–ø–∫–∏–µ –∫–æ–∫—Ç–µ–π–ª–∏ (–æ–±—ã—á–Ω–æ 25%+ –∞–ª–∫–æ–≥–æ–ª—è)
  if (alcohol >= 25) {
    return 'shots';
  }
  
  // –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ –∫–æ–∫—Ç–µ–π–ª–∏ - –∏–∑–≤–µ—Å—Ç–Ω—ã–µ —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã
  const classicCocktails = [
    '–º–æ—Ö–∏—Ç–æ', '–º–∞—Ä–≥–∞—Ä–∏—Ç–∞', '–∫–æ—Å–º–æ–ø–æ–ª–∏—Ç–µ–Ω', '–ø–∏–Ω–∞ –∫–æ–ª–∞–¥–∞', '–¥–∂–∏–Ω —Ç–æ–Ω–∏–∫',
    '–≤–∏—Å–∫–∏ —Å–∞—É—ç—Ä', '–º–∞–π —Ç–∞–π', '–ª–æ–Ω–≥ –∞–π–ª–µ–Ω–¥', '—Å–µ–∫—Å –Ω–∞ –ø–ª—è–∂–µ', '–∫—Ä–æ–≤–∞–≤–∞—è –º—ç—Ä–∏',
    '–Ω–µ–≥—Ä–æ–Ω–∏', '–∞–ø–µ—Ä–æ–ª—å —à–ø—Ä–∏—Ü', '–¥–∂–∏–Ω —Ñ–∏–∑–∑', '—Ç–æ–º –∫–æ–ª–ª–∏–Ω–∑', '–≤–∏—Å–∫–∏ –∫–æ–ª–∞',
    '—Ä–æ–º –∫–æ–ª–∞', '–≤–æ–¥–∫–∞ —Å —Ç–æ–Ω–∏–∫–æ–º', '–¥–∂–∏–Ω —Å —Ç–æ–Ω–∏–∫–æ–º', '—Ç–µ–∫–∏–ª–∞ —Å–∞–Ω—Ä–∞–π–∑',
    '–±–µ–ª—ã–π —Ä—É—Å—Å–∫–∏–π', '—á–µ—Ä–Ω—ã–π —Ä—É—Å—Å–∫–∏–π', '–º–∞—Ä—Ç–∏–Ω–∏', '–º–∞–Ω–∏—Ö–∞—Ç—Ç–µ–Ω', '–¥–∞–π–∫–∏—Ä–∏'
  ];
  
  if (classicCocktails.some(classic => name.includes(classic))) {
    return 'classic';
  }
  
  // –ê–≤—Ç–æ—Ä—Å–∫–∏–µ –∫–æ–∫—Ç–µ–π–ª–∏ - –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ
  return 'signature';
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∞–¥–º–∏–Ω–∫–∏
function initAdminFilters() {
  const adminFilterBtns = document.querySelectorAll('.admin-filter-btn');
  
  adminFilterBtns.forEach(btn => {
    btn.addEventListener('click', () => {
      const filter = btn.getAttribute('data-admin-filter');
      switchAdminFilter(filter);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –∫–Ω–æ–ø–∫—É
      adminFilterBtns.forEach(b => b.classList.remove('active'));
      btn.classList.add('active');
    });
  });
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ –∞–¥–º–∏–Ω–∫–∏
function switchAdminFilter(filter) {
  currentAdminFilter = filter;
  filterAdminCocktails();
}

// –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∫–æ–∫—Ç–µ–π–ª–µ–π –≤ –∞–¥–º–∏–Ω–∫–µ
function filterAdminCocktails() {
  const adminCocktailItems = document.querySelectorAll('.admin-cocktail-item');
  
  adminCocktailItems.forEach(item => {
    const cocktailName = item.getAttribute('data-name');
    const cocktail = cocktailsData.find(c => c.name === cocktailName);
    
    if (!cocktail) return;
    
    const shouldShow = shouldShowCocktail(cocktail, currentAdminFilter);
    
    if (shouldShow) {
      item.style.display = 'block';
    } else {
      item.style.display = 'none';
    }
  });
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–æ–∫—Ç–µ–π–ª–µ–π –≤ –∞–¥–º–∏–Ω–∫–µ
function updateAdminCocktailsList() {
  const cocktailsList = document.getElementById('cocktailsList');
  if (!cocktailsList) return;
  
  cocktailsList.innerHTML = '';
  
  cocktailsData.forEach(cocktail => {
    const category = getCocktailCategory(cocktail);
    const categoryName = getCategoryDisplayName(category);
    const categoryIcon = getCategoryIcon(category);
    
    const adminCocktailItem = document.createElement('div');
    adminCocktailItem.className = 'admin-cocktail-item';
    adminCocktailItem.setAttribute('data-name', cocktail.name);
    adminCocktailItem.setAttribute('data-category', category);
    
    adminCocktailItem.innerHTML = `
      <div class="admin-cocktail-info">
        <div class="admin-cocktail-header">
          <h5>${cocktail.name}</h5>
          <div class="admin-cocktail-category">
            <div class="category-badge category-badge-${category}">
              <i class="${categoryIcon}"></i>
              <span>${categoryName}</span>
            </div>
            <button class="change-category-btn" data-id="${cocktail.id}" data-current="${category}" title="–ò–∑–º–µ–Ω–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é">
              <i class="fas fa-exchange-alt"></i>
            </button>
          </div>
        </div>
        <div class="admin-cocktail-details">
          <p><strong>–°–æ—Å—Ç–∞–≤:</strong> ${cocktail.ingredients || '–ù–µ —É–∫–∞–∑–∞–Ω'}</p>
          <p><strong>–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ:</strong> ${cocktail.mood || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</p>
          <p><strong>–ö—Ä–µ–ø–æ—Å—Ç—å:</strong> ${cocktail.alcohol ? cocktail.alcohol + '%' : '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}</p>
        </div>
      </div>
      <div class="admin-cocktail-actions">
        <button class="edit-btn" data-id="${cocktail.id}" title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å">
          <i class="fas fa-edit"></i>
        </button>
        <button class="delete-btn" data-id="${cocktail.id}" title="–£–¥–∞–ª–∏—Ç—å">
          <i class="fas fa-trash"></i>
        </button>
      </div>
    `;
    
    cocktailsList.appendChild(adminCocktailItem);
  });
  
  // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —É–¥–∞–ª–µ–Ω–∏—è
  document.querySelectorAll('.admin-cocktail-item .edit-btn').forEach(btn => {
    btn.addEventListener('click', (e) => {
      e.stopPropagation();
      const id = btn.getAttribute('data-id');
      editCocktail(id);
    });
  });
  
  document.querySelectorAll('.admin-cocktail-item .delete-btn').forEach(btn => {
    btn.addEventListener('click', (e) => {
      e.stopPropagation();
      const id = btn.getAttribute('data-id');
      deleteCocktail(id);
    });
  });
  
  // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  document.querySelectorAll('.admin-cocktail-item .change-category-btn').forEach(btn => {
    btn.addEventListener('click', (e) => {
      e.stopPropagation();
      const id = btn.getAttribute('data-id');
      const currentCategory = btn.getAttribute('data-current');
      showCategoryChangeModal(id, currentCategory);
    });
  });
  
}




// –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π —Ñ–∏–ª—å—Ç—Ä
filterAdminCocktails();

// –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
function showCategoryChangeModal(cocktailId, currentCategory) {
  const cocktail = cocktailsData.find(c => c.id === cocktailId);
  if (!cocktail) return;
  
  // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
  const modal = document.createElement('div');
  modal.className = 'modal-overlay';
  modal.innerHTML = `
    <div class="modal-content category-change-modal">
      <div class="modal-header">
        <h3>–ò–∑–º–µ–Ω–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∫–æ–∫—Ç–µ–π–ª—è</h3>
        <button class="modal-close" type="button">
          <i class="fas fa-times"></i>
        </button>
      </div>
      <div class="modal-body">
        <div class="cocktail-info">
          <h4>${cocktail.name}</h4>
          <p>–¢–µ–∫—É—â–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è: <span class="current-category">${getCategoryDisplayName(currentCategory)}</span></p>
        </div>
        <div class="category-options">
          <h5>–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é:</h5>
          <div class="category-options-list">
            <div class="category-option-item ${currentCategory === 'classic' ? 'current' : ''}" data-category="classic">
              <div class="category-option-badge category-badge-classic">
                <i class="fas fa-crown"></i>
              </div>
              <div class="category-option-content">
                <span class="category-option-name">–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ</span>
                <span class="category-option-desc">–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã</span>
              </div>
              ${currentCategory === 'classic' ? '<div class="current-indicator">–¢–µ–∫—É—â–∞—è</div>' : ''}
            </div>
            <div class="category-option-item ${currentCategory === 'signature' ? 'current' : ''}" data-category="signature">
              <div class="category-option-badge category-badge-signature">
                <i class="fas fa-star"></i>
              </div>
              <div class="category-option-content">
                <span class="category-option-name">–ê–≤—Ç–æ—Ä—Å–∫–∏–µ</span>
                <span class="category-option-desc">–£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∫–æ–∫—Ç–µ–π–ª–∏</span>
              </div>
              ${currentCategory === 'signature' ? '<div class="current-indicator">–¢–µ–∫—É—â–∞—è</div>' : ''}
            </div>
            <div class="category-option-item ${currentCategory === 'shots' ? 'current' : ''}" data-category="shots">
              <div class="category-option-badge category-badge-shots">
                <i class="fas fa-bolt"></i>
              </div>
              <div class="category-option-content">
                <span class="category-option-name">–®–æ—Ç—ã</span>
                <span class="category-option-desc">–ö—Ä–µ–ø–∫–∏–µ –∫–æ–∫—Ç–µ–π–ª–∏</span>
              </div>
              ${currentCategory === 'shots' ? '<div class="current-indicator">–¢–µ–∫—É—â–∞—è</div>' : ''}
            </div>
          </div>
        </div>
      </div>
      <div class="modal-footer">
        <button class="btn btn-secondary" type="button" data-action="cancel">–û—Ç–º–µ–Ω–∞</button>
        <button class="btn btn-primary" type="button" data-action="save" disabled>–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
      </div>
    </div>
  `;
  
  document.body.appendChild(modal);
  
  // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
  const closeBtn = modal.querySelector('.modal-close');
  const cancelBtn = modal.querySelector('[data-action="cancel"]');
  const saveBtn = modal.querySelector('[data-action="save"]');
  const categoryOptions = modal.querySelectorAll('.category-option-item');
  
  let selectedCategory = null;
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  const closeModal = () => {
    document.body.removeChild(modal);
  };
  
  closeBtn.addEventListener('click', closeModal);
  cancelBtn.addEventListener('click', closeModal);
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  modal.addEventListener('click', (e) => {
    if (e.target === modal) {
      closeModal();
    }
  });
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  categoryOptions.forEach(option => {
    option.addEventListener('click', () => {
      const category = option.getAttribute('data-category');
      
      // –£–±–∏—Ä–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Å –¥—Ä—É–≥–∏—Ö –æ–ø—Ü–∏–π
      categoryOptions.forEach(opt => opt.classList.remove('selected'));
      
      // –í—ã–¥–µ–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –æ–ø—Ü–∏—é
      option.classList.add('selected');
      selectedCategory = category;
      
      // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
      saveBtn.disabled = false;
    });
  });
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
  saveBtn.addEventListener('click', async () => {
    if (!selectedCategory || selectedCategory === currentCategory) {
      return;
    }
    
    try {
      saveBtn.disabled = true;
      saveBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...';
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
      await db.collection('cocktails').doc(cocktailId).update({
        category: selectedCategory,
        updatedAt: new Date()
      });
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
      cocktail.category = selectedCategory;
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
      await loadCocktails();
      updateAdminCocktailsList();
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
      showSuccess(`–ö–∞—Ç–µ–≥–æ—Ä–∏—è –∫–æ–∫—Ç–µ–π–ª—è "${cocktail.name}" –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ "${getCategoryDisplayName(selectedCategory)}"`);
      
      // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
      closeModal();
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:', error);
      showError('–û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫–æ–∫—Ç–µ–π–ª—è');
      saveBtn.disabled = false;
      saveBtn.innerHTML = '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å';
    }
  });
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
  setTimeout(() => {
    modal.classList.add('show');
  }, 10);
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
function getCategoryDisplayName(category) {
  const names = {
    'classic': '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ',
    'signature': '–ê–≤—Ç–æ—Ä—Å–∫–∏–µ',
    'shots': '–®–æ—Ç—ã'
  };
  return names[category] || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
function getCategoryIcon(category) {
  const icons = {
    'classic': 'fas fa-crown',
    'signature': 'fas fa-star',
    'shots': 'fas fa-bolt'
  };
  return icons[category] || 'fas fa-question';
}




// –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ, —á—Ç–æ–±—ã —Å—Ç–∞—Ç—É—Å—ã —Å—Ç–æ–ø-–ª–∏—Å—Ç–∞ –ø—Ä–∏–º–µ–Ω–∏–ª–∏—Å—å –∫ –∫–∞—Ä—Ç–æ—á–∫–∞–º
(async () => {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...');
  
  try {
    console.log('üìã –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–æ–ø-–ª–∏—Å—Ç...');
    await loadStoplist();
    
    console.log('üç∏ –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–∫—Ç–µ–π–ª–∏...');
    await loadCocktails();
    
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã...');
    await monitorSystem();
    
    console.log('üè∑Ô∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≤–∫–ª–∞–¥–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π...');
    initCategoryTabs();
    
    console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ–∏–ª—å—Ç—Ä—ã –∞–¥–º–∏–Ω–∫–∏...');
    initAdminFilters();
    
    console.log('‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
  }
  
  // –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
  setInterval(monitorSystem, 5 * 60 * 1000);
})();

// –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –¥–∏–∑–∞–π–Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
window.testNewNotificationDesign = function() {
  console.log('üé® –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–π —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...');
  
  const testOrder = {
    id: 'test-' + Date.now(),
    name: '–ú–æ—Ö–∏—Ç–æ',
    userId: 'test-user',
    status: 'confirmed'
  };
  
  // –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ —Å—Ç–∞—Ç—É—Å—ã –ø–æ –æ—á–µ—Ä–µ–¥–∏
  showStatusUpdateNotification(testOrder, 'confirmed');
  
  setTimeout(() => {
    showStatusUpdateNotification(testOrder, 'preparing');
  }, 2000);
  
  setTimeout(() => {
    showStatusUpdateNotification(testOrder, 'ready');
  }, 4000);
  
  setTimeout(() => {
    showStatusUpdateNotification(testOrder, 'completed');
  }, 6000);
  
  console.log('‚úÖ –¢–µ—Å—Ç –∑–∞–ø—É—â–µ–Ω! –°–º–æ—Ç—Ä–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∞ –≤–≤–µ—Ä—Ö—É');
};

// –ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
window.testQuickNotification = function() {
  console.log('üöÄ –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è...');
  
  const testOrder = {
    id: 'quick-test',
    name: '–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞',
    userId: 'test-user',
    status: 'confirmed'
  };
  
  showStatusUpdateNotification(testOrder, 'confirmed');
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–∏–∑–∞–π–Ω–∞
window.testCenteredNotification = function() {
  console.log('üéØ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω...');
  
  const testOrder = {
    id: 'centered-test',
    name: '–ú–æ—Ö–∏—Ç–æ',
    userId: 'test-user',
    status: 'confirmed'
  };
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ —Å—Ç–∞—Ç—É—Å—ã –ø–æ –æ—á–µ—Ä–µ–¥–∏
  showStatusUpdateNotification(testOrder, 'confirmed');
  
  setTimeout(() => {
    showStatusUpdateNotification(testOrder, 'preparing');
  }, 2000);
  
  setTimeout(() => {
    showStatusUpdateNotification(testOrder, 'ready');
  }, 4000);
  
  setTimeout(() => {
    showStatusUpdateNotification(testOrder, 'completed');
  }, 6000);
  
  console.log('‚úÖ –¢–µ—Å—Ç —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–∏–∑–∞–π–Ω–∞ –∑–∞–ø—É—â–µ–Ω!');
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –¥–∏–∑–∞–π–Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–∫–∞–∑–µ
window.testNewOrderNotification = function() {
  console.log('üé® –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –¥–∏–∑–∞–π–Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–∫–∞–∑–µ...');
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  openModal(notificationModal);
  
  console.log('‚úÖ –ü–æ–∫–∞–∑–∞–Ω–æ –Ω–æ–≤–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è');
  console.log('üìù –ù–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:');
  console.log('   - –ü—Ä–æ—Å—Ç–∞—è –∏ –ø–æ–Ω—è—Ç–Ω–∞—è –∏–∫–æ–Ω–∫–∞ —É—Å–ø–µ—Ö–∞');
  console.log('   - –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä —ç—Ç–∞–ø–æ–≤ –∑–∞–∫–∞–∑–∞');
  console.log('   - –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–∫–∞');
  console.log('   - –ü–ª–∞–≤–Ω—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –ø–æ—è–≤–ª–µ–Ω–∏—è');
  console.log('   - –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω —Å –≥—Ä–∞–¥–∏–µ–Ω—Ç–∞–º–∏');
  console.log('   - –ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤');
};

// ============================================
// –ê–î–ú–ò–ù-–ü–ê–ù–ï–õ–¨ –ü–†–û–ú–û–ö–û–î–û–í
// ============================================

// –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞
const createPromoBtn = document.getElementById('createPromoBtn');
createPromoBtn?.addEventListener('click', async () => {
  const promoCode = document.getElementById('promoCode')?.value.trim().toUpperCase();
  const promoDiscount = parseInt(document.getElementById('promoDiscount')?.value || '0');
  const promoDescription = document.getElementById('promoDescription')?.value.trim();
  const promoMaxUses = parseInt(document.getElementById('promoMaxUses')?.value || '0');
  const promoExpiryDate = document.getElementById('promoExpiryDate')?.value;
  const promoActive = document.getElementById('promoActive')?.checked;
  
  if (!promoCode || !promoDiscount) {
    showError('‚ùå –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è: –∫–æ–¥ –∏ —Å–∫–∏–¥–∫–∞');
    return;
  }
  
  if (promoDiscount < 1 || promoDiscount > 100) {
    showError('‚ùå –°–∫–∏–¥–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç 1 –¥–æ 100%');
    return;
  }
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π –ø—Ä–æ–º–æ–∫–æ–¥
    const existingPromo = await db.collection('promocodes').doc(promoCode).get();
    if (existingPromo.exists) {
      showError('‚ùå –ü—Ä–æ–º–æ–∫–æ–¥ —Å —Ç–∞–∫–∏–º –∫–æ–¥–æ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
      return;
    }
    
    // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–º–æ–∫–æ–¥
    const promoData = {
      code: promoCode,
      discount: promoDiscount,
      description: promoDescription || '',
      maxUses: promoMaxUses,
      usedCount: 0,
      active: promoActive,
      createdAt: firebase.firestore.FieldValue.serverTimestamp(),
      updatedAt: firebase.firestore.FieldValue.serverTimestamp()
    };
    
    if (promoExpiryDate) {
      promoData.expiryDate = firebase.firestore.Timestamp.fromDate(new Date(promoExpiryDate));
    }
    
    await db.collection('promocodes').doc(promoCode).set(promoData);
    
    showSuccess(`‚úÖ –ü—Ä–æ–º–æ–∫–æ–¥ ${promoCode} —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!`);
    
    // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
    document.getElementById('promoCode').value = '';
    document.getElementById('promoDiscount').value = '';
    document.getElementById('promoDescription').value = '';
    document.getElementById('promoMaxUses').value = '0';
    document.getElementById('promoExpiryDate').value = '';
    document.getElementById('promoActive').checked = true;
    
    // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤
    loadPromocodes();
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞:', error);
    showError('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞');
  }
});

// –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤
async function loadPromocodes() {
  try {
    const promocodesSnapshot = await db.collection('promocodes')
      .orderBy('createdAt', 'desc')
      .get();
    
    const promocodesList = document.getElementById('promocodesList');
    if (!promocodesList) return;
    
    if (promocodesSnapshot.empty) {
      promocodesList.innerHTML = '<p style="text-align: center; color: #999;">–ü—Ä–æ–º–æ–∫–æ–¥—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</p>';
      return;
    }
    
    promocodesList.innerHTML = '';
    
    promocodesSnapshot.forEach(doc => {
      const promo = doc.data();
      const promoCode = doc.id;
      
      const expiryDate = promo.expiryDate ? promo.expiryDate.toDate().toLocaleDateString('ru-RU') : '–ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π';
      const maxUsesText = promo.maxUses > 0 ? promo.maxUses : '‚àû';
      const usedCount = promo.usedCount || 0;
      
      const promoItem = document.createElement('div');
      promoItem.className = 'promo-item';
      promoItem.innerHTML = `
        <div class="promo-item-header">
          <div class="promo-code-display">${promoCode}</div>
          <div class="promo-discount">-${promo.discount}%</div>
        </div>
        <div class="promo-item-details">
          <div class="promo-detail">
            <div class="promo-detail-label">–û–ø–∏—Å–∞–Ω–∏–µ:</div>
            <div class="promo-detail-value">${promo.description || '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è'}</div>
          </div>
          <div class="promo-detail">
            <div class="promo-detail-label">–°—Ç–∞—Ç—É—Å:</div>
            <div class="promo-detail-value">
              <span class="promo-status ${promo.active ? 'active' : 'inactive'}">
                ${promo.active ? '–ê–∫—Ç–∏–≤–µ–Ω' : '–ù–µ–∞–∫—Ç–∏–≤–µ–Ω'}
              </span>
            </div>
          </div>
          <div class="promo-detail">
            <div class="promo-detail-label">–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ:</div>
            <div class="promo-detail-value">${usedCount} / ${maxUsesText}</div>
          </div>
          <div class="promo-detail">
            <div class="promo-detail-label">–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è:</div>
            <div class="promo-detail-value">${expiryDate}</div>
          </div>
        </div>
        <div class="promo-item-actions">
          <button class="admin-btn ${promo.active ? 'warning' : 'primary'}" onclick="togglePromoStatus('${promoCode}', ${!promo.active})">
            <i class="fas fa-${promo.active ? 'ban' : 'check'}"></i> ${promo.active ? '–î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å' : '–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å'}
          </button>
          <button class="admin-btn danger" onclick="deletePromo('${promoCode}')">
            <i class="fas fa-trash"></i> –£–¥–∞–ª–∏—Ç—å
          </button>
        </div>
      `;
      
      promocodesList.appendChild(promoItem);
    });
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤:', error);
  }
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–æ–º–æ–∫–æ–¥–∞
window.togglePromoStatus = async function(promoCode, newStatus) {
  try {
    await db.collection('promocodes').doc(promoCode).update({
      active: newStatus,
      updatedAt: firebase.firestore.FieldValue.serverTimestamp()
    });
    
    showSuccess(`‚úÖ –ü—Ä–æ–º–æ–∫–æ–¥ ${promoCode} ${newStatus ? '–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω' : '–¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω'}`);
    loadPromocodes();
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–æ–º–æ–∫–æ–¥–∞:', error);
    showError('‚ùå –û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞');
  }
};

// –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞
window.deletePromo = async function(promoCode) {
  if (!confirm(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥ ${promoCode}?`)) {
    return;
  }
  
  try {
    await db.collection('promocodes').doc(promoCode).delete();
    showSuccess(`‚úÖ –ü—Ä–æ–º–æ–∫–æ–¥ ${promoCode} —É–¥–∞–ª–µ–Ω`);
    loadPromocodes();
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞:', error);
    showError('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞');
  }
};

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ–º–æ–∫–æ–¥—ã –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –≤–∫–ª–∞–¥–∫–∏
const promocodesTab = document.querySelector('[data-tab="promocodes"]');
promocodesTab?.addEventListener('click', () => {
  loadPromocodes();
});

console.log('üí≥ –°–∏—Å—Ç–µ–º–∞ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');

// ============= –°–ò–°–¢–ï–ú–ê –û–¶–ï–ù–ö–ò –ö–û–ö–¢–ï–ô–õ–ï–ô =============

console.log('‚≠ê –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –æ—Ü–µ–Ω–∫–∏ –∫–æ–∫—Ç–µ–π–ª–µ–π...');

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –æ—Ü–µ–Ω–∫–∏
let currentRatingData = null;
let ratedOrders = new Set(); // –ú–Ω–æ–∂–µ—Å—Ç–≤–æ ID –∑–∞–∫–∞–∑–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –±—ã–ª–∏ –æ—Ü–µ–Ω–µ–Ω—ã –∏–ª–∏ –ø—Ä–æ–ø—É—â–µ–Ω—ã
let userOrdersListener = null; // –°–ª—É—à–∞—Ç–µ–ª—å –¥–ª—è –∑–∞–∫–∞–∑–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

// –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –æ—Ü–µ–Ω–∫–∏
const ratingModal = document.getElementById('ratingModal');
const ratingCocktailName = document.getElementById('ratingCocktailName');
const starsContainer = document.getElementById('starsContainer');
const ratingText = document.getElementById('ratingText');
const ratingComment = document.getElementById('ratingComment');
const submitRatingBtn = document.getElementById('submitRating');
const skipRatingBtn = document.getElementById('skipRating');
const stars = document.querySelectorAll('.star');

// –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–π—Ç–∏–Ω–≥–∞
let selectedRating = 0;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function startTrackingUserOrders(userId) {
  console.log('üîç –ù–∞—á–∏–Ω–∞–µ–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userId);
  
  // –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Å–ª—É—à–∞—Ç–µ–ª—å, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
  if (userOrdersListener) {
    userOrdersListener();
    userOrdersListener = null;
  }
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–ª—É—à–∞—Ç–µ–ª—å –¥–ª—è –∑–∞–∫–∞–∑–æ–≤ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  userOrdersListener = db.collection('orders')
    .where('userId', '==', userId)
    .onSnapshot((snapshot) => {
      snapshot.docChanges().forEach((change) => {
        const order = change.doc.data();
        const orderId = change.doc.id;
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ –∑–∞–∫–∞–∑ —Ç–æ–ª—å–∫–æ —á—Ç–æ —Å—Ç–∞–ª –≥–æ—Ç–æ–≤ (—Å—Ç–∞—Ç—É—Å "ready")
        if (change.type === 'modified' && order.status === 'ready') {
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –±—ã–ª –ª–∏ —ç—Ç–æ—Ç –∑–∞–∫–∞–∑ —É–∂–µ –æ—Ü–µ–Ω–µ–Ω –∏–ª–∏ –ø—Ä–æ–ø—É—â–µ–Ω
          if (!ratedOrders.has(orderId)) {
            console.log('üç∏ –ó–∞–∫–∞–∑ –≥–æ—Ç–æ–≤! –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–∫–Ω–æ –æ—Ü–µ–Ω–∫–∏:', order.cocktailName);
            showRatingModal(orderId, order.cocktailName);
          }
        }
      });
    }, (error) => {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤:', error);
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤
function stopTrackingUserOrders() {
  if (userOrdersListener) {
    userOrdersListener();
    userOrdersListener = null;
    console.log('üõë –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –æ—Ü–µ–Ω–∫–∏
function showRatingModal(orderId, cocktailName) {
  currentRatingData = {
    orderId: orderId,
    cocktailName: cocktailName,
    timestamp: new Date()
  };
  
  // –ó–∞–ø–æ–ª–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
  ratingCocktailName.textContent = cocktailName;
  selectedRating = 0;
  ratingComment.value = '';
  
  // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∑–≤–µ–∑–¥—ã
  resetStars();
  
  // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç
  ratingText.textContent = '–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ü–µ–Ω–∫—É';
  ratingText.classList.remove('has-rating');
  
  // –û—Ç–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏
  submitRatingBtn.disabled = true;
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
  ratingModal.style.display = 'flex';
  
  console.log('üìù –ü–æ–∫–∞–∑–∞–Ω–æ –æ–∫–Ω–æ –æ—Ü–µ–Ω–∫–∏ –¥–ª—è:', cocktailName);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±—Ä–æ—Å–∞ –∑–≤–µ–∑–¥
function resetStars() {
  stars.forEach(star => {
    star.classList.remove('active', 'hovered');
  });
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∑–≤–µ–∑–¥
stars.forEach((star, index) => {
  // –ù–∞–≤–µ–¥–µ–Ω–∏–µ –º—ã—à–∏
  star.addEventListener('mouseenter', () => {
    resetStars();
    for (let i = 0; i <= index; i++) {
      stars[i].classList.add('hovered');
    }
  });
  
  // –ö–ª–∏–∫ –ø–æ –∑–≤–µ–∑–¥–µ
  star.addEventListener('click', () => {
    selectedRating = index + 1;
    resetStars();
    for (let i = 0; i <= index; i++) {
      stars[i].classList.add('active');
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –æ—Ü–µ–Ω–∫–∏
    const ratingTexts = [
      '–£–∂–∞—Å–Ω–æ',
      '–ü–ª–æ—Ö–æ',
      '–ù–æ—Ä–º–∞–ª—å–Ω–æ',
      '–•–æ—Ä–æ—à–æ',
      '–û—Ç–ª–∏—á–Ω–æ!'
    ];
    ratingText.textContent = ratingTexts[selectedRating - 1];
    ratingText.classList.add('has-rating');
    
    // –í–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏
    submitRatingBtn.disabled = false;
    
    console.log('‚≠ê –í—ã–±—Ä–∞–Ω–∞ –æ—Ü–µ–Ω–∫–∞:', selectedRating);
  });
});

// –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –∫ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–º—É –≤–∏–¥—É –ø—Ä–∏ —É—Ö–æ–¥–µ –º—ã—à–∏
starsContainer.addEventListener('mouseleave', () => {
  resetStars();
  if (selectedRating > 0) {
    for (let i = 0; i < selectedRating; i++) {
      stars[i].classList.add('active');
    }
  }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ü–µ–Ω–∫–∏
async function saveRating() {
  if (!currentRatingData || selectedRating === 0) {
    console.warn('‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ü–µ–Ω–∫–∏');
    return;
  }
  
  if (!currentUser) {
    console.warn('‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
    return;
  }
  
  try {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ü–µ–Ω–∫—É –≤ –∫–æ–ª–ª–µ–∫—Ü–∏—é ratings
    const ratingData = {
      cocktailName: currentRatingData.cocktailName,
      rating: selectedRating,
      comment: ratingComment.value.trim() || null,
      userId: currentUser.uid,
      userName: currentUser.displayName || '–ê–Ω–æ–Ω–∏–º',
      orderId: currentRatingData.orderId,
      createdAt: firebase.firestore.FieldValue.serverTimestamp()
    };
    
    await db.collection('ratings').add(ratingData);
    
    // –î–æ–±–∞–≤–ª—è–µ–º ID –∑–∞–∫–∞–∑–∞ –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–æ –æ—Ü–µ–Ω–µ–Ω–Ω—ã—Ö
    ratedOrders.add(currentRatingData.orderId);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –Ω–∞ "completed"
    await db.collection('orders').doc(currentRatingData.orderId).update({
      status: 'completed',
      rated: true,
      ratingValue: selectedRating
    });
    
    console.log('‚úÖ –û—Ü–µ–Ω–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞:', ratingData);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    showSuccess('–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –æ—Ü–µ–Ω–∫—É! üåü');
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    closeRatingModal();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–µ–π—Ç–∏–Ω–≥–∏ –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–∞—Ö
    await loadCocktails();
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ü–µ–Ω–∫–∏:', error);
    showError('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ü–µ–Ω–∫–∏');
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞ –æ—Ü–µ–Ω–∫–∏
function skipRating() {
  if (currentRatingData) {
    // –î–æ–±–∞–≤–ª—è–µ–º ID –∑–∞–∫–∞–∑–∞ –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–æ –æ—Ü–µ–Ω–µ–Ω–Ω—ã—Ö (—á—Ç–æ–±—ã –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å–Ω–æ–≤–∞)
    ratedOrders.add(currentRatingData.orderId);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –Ω–∞ "completed" –±–µ–∑ –æ—Ü–µ–Ω–∫–∏
    db.collection('orders').doc(currentRatingData.orderId).update({
      status: 'completed',
      rated: false
    }).catch(error => {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞:', error);
    });
    
    console.log('‚è≠Ô∏è –û—Ü–µ–Ω–∫–∞ –ø—Ä–æ–ø—É—â–µ–Ω–∞');
  }
  
  closeRatingModal();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –æ—Ü–µ–Ω–∫–∏
function closeRatingModal() {
  ratingModal.style.display = 'none';
  currentRatingData = null;
  selectedRating = 0;
  ratingComment.value = '';
  resetStars();
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∫–Ω–æ–ø–æ–∫
submitRatingBtn.addEventListener('click', saveRating);
skipRatingBtn.addEventListener('click', skipRating);

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
ratingModal.addEventListener('click', (e) => {
  if (e.target === ratingModal) {
    skipRating();
  }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ä–µ–¥–Ω–µ–≥–æ —Ä–µ–π—Ç–∏–Ω–≥–∞ –∫–æ–∫—Ç–µ–π–ª—è
async function getCocktailAverageRating(cocktailName) {
  try {
    const ratingsSnapshot = await db.collection('ratings')
      .where('cocktailName', '==', cocktailName)
      .get();
    
    if (ratingsSnapshot.empty) {
      return null;
    }
    
    let totalRating = 0;
    let count = 0;
    
    ratingsSnapshot.forEach(doc => {
      const rating = doc.data();
      totalRating += rating.rating;
      count++;
    });
    
    const averageRating = totalRating / count;
    
    return {
      average: averageRating,
      count: count
    };
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–π—Ç–∏–Ω–≥–∞:', error);
    return null;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–π—Ç–∏–Ω–≥–∞ –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–µ –∫–æ–∫—Ç–µ–π–ª—è
function displayCocktailRating(cardElement, ratingData) {
  if (!ratingData) return;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —Ä–µ–π—Ç–∏–Ω–≥–∞
  let ratingBadge = cardElement.querySelector('.cocktail-rating');
  
  if (!ratingBadge) {
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —Ä–µ–π—Ç–∏–Ω–≥–∞
    ratingBadge = document.createElement('div');
    ratingBadge.className = 'cocktail-rating';
    cardElement.appendChild(ratingBadge);
  }
  
  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∑–≤–µ–∑–¥—ã
  const fullStars = Math.floor(ratingData.average);
  const hasHalfStar = ratingData.average % 1 >= 0.5;
  
  let starsHtml = '';
  for (let i = 0; i < 5; i++) {
    if (i < fullStars) {
      starsHtml += '<i class="fas fa-star"></i>';
    } else if (i === fullStars && hasHalfStar) {
      starsHtml += '<i class="fas fa-star-half-alt"></i>';
    } else {
      starsHtml += '<i class="far fa-star"></i>';
    }
  }
  
  // –ó–∞–ø–æ–ª–Ω—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
  ratingBadge.innerHTML = `
    <div class="cocktail-rating-stars">${starsHtml}</div>
    <div class="cocktail-rating-value">${ratingData.average.toFixed(1)}</div>
    <div class="cocktail-rating-count">(${ratingData.count})</div>
  `;
}

console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –æ—Ü–µ–Ω–∫–∏ –∫–æ–∫—Ç–µ–π–ª–µ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');

// –ü–æ–¥–∫–ª—é—á–∞–µ–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
// –≠—Ç–æ –±—É–¥–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å—Å—è –≤ onAuthStateChanged
firebase.auth().onAuthStateChanged(async (user) => {
  if (user) {
    // –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    startTrackingUserOrders(user.uid);
  } else {
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
    stopTrackingUserOrders();
    ratedOrders.clear();
  }
});