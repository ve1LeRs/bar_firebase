// ============================================
// –°–ò–°–¢–ï–ú–ê –ü–†–û–§–ò–õ–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø
// ============================================

// –û—Ç–∫—Ä—ã—Ç–∏–µ/–∑–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–æ—Ñ–∏–ª—è
const profileBtn = document.getElementById('profileBtn');
const profileModal = document.getElementById('profileModal');

profileBtn?.addEventListener('click', () => {
  openProfile();
});

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
const profileCloseBtn = profileModal?.querySelector('.close');
profileCloseBtn?.addEventListener('click', () => {
  profileModal.style.display = 'none';
  document.body.classList.remove('modal-open');
});

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è –ø—Ä–æ—Ñ–∏–ª—è
async function openProfile() {
  const user = firebase.auth().currentUser;
  if (!user) return;
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
  profileModal.style.display = 'block';
  document.body.classList.add('modal-open');
  
  // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è
  await loadProfileData(user);
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª—è
async function loadProfileData(user) {
  try {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Firestore
    const userDoc = await db.collection('users').doc(user.uid).get();
    const userData = userDoc.exists ? userDoc.data() : {};
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ —à–∞–ø–∫–µ –ø—Ä–æ—Ñ–∏–ª—è
    const profileName = document.getElementById('profileName');
    const profilePhone = document.getElementById('profilePhone');
    
    if (profileName) profileName.textContent = user.displayName || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
    if (profilePhone) profilePhone.textContent = userData.phoneNumber || user.phoneNumber || '';
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –±–æ–Ω—É—Å—ã
    await loadProfileBonuses(user.uid);
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å—á–µ—Ç
    await loadProfileCurrentBill(user.uid);
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é
    await loadProfileHistory(user.uid);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è:', error);
  }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –±–æ–Ω—É—Å–æ–≤ –≤ –ø—Ä–æ—Ñ–∏–ª–µ
async function loadProfileBonuses(userId) {
  try {
    const bonusDoc = await db.collection('bonusAccounts').doc(userId).get();
    
    let balance = 0;
    let totalEarned = 0;
    let totalSpent = 0;
    
    if (bonusDoc.exists) {
      const bonusData = bonusDoc.data();
      balance = bonusData.balance || 0;
      totalEarned = bonusData.totalEarned || 0;
      totalSpent = bonusData.totalSpent || 0;
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ
    const profileBonusAmount = document.getElementById('profileBonusAmount');
    const profileTotalEarned = document.getElementById('profileTotalEarned');
    const profileTotalSpent = document.getElementById('profileTotalSpent');
    
    if (profileBonusAmount) profileBonusAmount.textContent = balance;
    if (profileTotalEarned) profileTotalEarned.textContent = totalEarned;
    if (profileTotalSpent) profileTotalSpent.textContent = totalSpent;
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –±–æ–Ω—É—Å–æ–≤:', error);
  }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å—á–µ—Ç–∞ –≤ –ø—Ä–æ—Ñ–∏–ª–µ
async function loadProfileCurrentBill(userId) {
  try {
    const billsSnapshot = await db.collection('bills')
      .where('userId', '==', userId)
      .where('status', '==', 'open')
      .limit(1)
      .get();
    
    const profileCurrentBill = document.getElementById('profileCurrentBill');
    if (!profileCurrentBill) return;
    
    if (billsSnapshot.empty) {
      profileCurrentBill.innerHTML = `
        <div class="no-bill-message">
          <i class="fas fa-receipt"></i>
          <p>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –æ—Ç–∫—Ä—ã—Ç–æ–≥–æ —Å—á–µ—Ç–∞</p>
          <p class="hint">–°–¥–µ–ª–∞–π—Ç–µ –∑–∞–∫–∞–∑, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å</p>
        </div>
      `;
      return;
    }
    
    const billDoc = billsSnapshot.docs[0];
    const billData = billDoc.data();
    const billId = billDoc.id;
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—á–µ—Ç–∞
    const billItems = billData.items || [];
    const totalAmount = billData.totalAmount || 0;
    
    let itemsHTML = '';
    billItems.forEach(item => {
      const statusIcon = getOrderStatusIcon(item.status);
      const statusText = getOrderStatusText(item.status);
      
      itemsHTML += `
        <div class="bill-item">
          ${item.cocktailImage ? `<img src="${item.cocktailImage}" alt="${item.cocktailName}" class="bill-item-image">` : ''}
          <div class="bill-item-info">
            <div class="bill-item-name">${item.cocktailName}</div>
            <div class="bill-item-status">
              <span class="status-icon">${statusIcon}</span>
              <span class="status-text">${statusText}</span>
            </div>
          </div>
          <div class="bill-item-price">${item.finalPrice || item.price || 0} ‚ÇΩ</div>
        </div>
      `;
    });
    
    profileCurrentBill.innerHTML = `
      <div class="current-bill-card">
        <div class="bill-header">
          <h4><i class="fas fa-receipt"></i> –¢–µ–∫—É—â–∏–π —Å—á–µ—Ç</h4>
          <div class="bill-total">${totalAmount} ‚ÇΩ</div>
        </div>
        <div class="bill-items">
          ${itemsHTML}
        </div>
        <button class="view-full-bill-btn" onclick="openMyBill()">
          <i class="fas fa-expand"></i> –û—Ç–∫—Ä—ã—Ç—å –ø–æ–ª–Ω—ã–π —Å—á–µ—Ç
        </button>
      </div>
    `;
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–µ–∫—É—â–µ–≥–æ —Å—á–µ—Ç–∞:', error);
  }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ —Å—á–µ—Ç–æ–≤ –≤ –ø—Ä–æ—Ñ–∏–ª–µ
async function loadProfileHistory(userId) {
  try {
    const billsSnapshot = await db.collection('bills')
      .where('userId', '==', userId)
      .where('status', '==', 'paid')
      .orderBy('paidAt', 'desc')
      .limit(5)
      .get();
    
    const profileBillHistory = document.getElementById('profileBillHistory');
    if (!profileBillHistory) return;
    
    if (billsSnapshot.empty) {
      profileBillHistory.innerHTML = `
        <div class="no-history-message">
          <i class="fas fa-history"></i>
          <p>–ò—Å—Ç–æ—Ä–∏—è —Å—á–µ—Ç–æ–≤ –ø—É—Å—Ç–∞</p>
          <p class="hint">–û–ø–ª–∞—á–µ–Ω–Ω—ã–µ —Å—á–µ—Ç–∞ –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –∑–¥–µ—Å—å</p>
        </div>
      `;
      return;
    }
    
    let historyHTML = '<div class="history-list">';
    
    billsSnapshot.forEach(doc => {
      const billData = doc.data();
      const billId = doc.id;
      const paidDate = billData.paidAt ? billData.paidAt.toDate().toLocaleDateString('ru-RU') : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
      const totalAmount = billData.totalAmount || 0;
      const itemsCount = billData.items ? billData.items.length : 0;
      
      historyHTML += `
        <div class="history-item" onclick="viewBillDetails('${billId}')">
          <div class="history-icon">
            <i class="fas fa-check-circle"></i>
          </div>
          <div class="history-info">
            <div class="history-date">${paidDate}</div>
            <div class="history-details">${itemsCount} ${itemsCount === 1 ? '–ø–æ–∑–∏—Ü–∏—è' : '–ø–æ–∑–∏—Ü–∏–∏'}</div>
          </div>
          <div class="history-amount">${totalAmount} ‚ÇΩ</div>
        </div>
      `;
    });
    
    historyHTML += '</div>';
    historyHTML += `<button class="view-all-history-btn" onclick="openBillHistory()"><i class="fas fa-list"></i> –í—Å—è –∏—Å—Ç–æ—Ä–∏—è</button>`;
    
    profileBillHistory.innerHTML = historyHTML;
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏:', error);
  }
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
function getOrderStatusIcon(status) {
  const icons = {
    'confirmed': '‚è≥',
    'preparing': 'üë®‚Äçüç≥',
    'ready': 'üç∏',
    'completed': '‚úÖ',
    'cancelled': '‚ùå'
  };
  return icons[status] || 'üìù';
}

function getOrderStatusText(status) {
  const texts = {
    'confirmed': '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω',
    'preparing': '–ì–æ—Ç–æ–≤–∏—Ç—Å—è',
    'ready': '–ì–æ—Ç–æ–≤',
    'completed': '–í—ã–ø–æ–ª–Ω–µ–Ω',
    'cancelled': '–û—Ç–º–µ–Ω—ë–Ω'
  };
  return texts[status] || '–í –æ–±—Ä–∞–±–æ—Ç–∫–µ';
}

// –û—Ç–∫—Ä—ã—Ç—å –ø–æ–ª–Ω—ã–π —Å—á–µ—Ç (–∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Ñ—É–Ω–∫—Ü–∏—é)
window.openMyBill = function() {
  profileModal.style.display = 'none';
  document.body.classList.remove('modal-open');
  
  // –í—ã–∑—ã–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Ñ—É–Ω–∫—Ü–∏—é
  const myBillBtn = document.getElementById('myBillBtn');
  if (myBillBtn) {
    myBillBtn.click();
  }
};

// –û—Ç–∫—Ä—ã—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Å—á–µ—Ç–æ–≤
window.openBillHistory = function() {
  profileModal.style.display = 'none';
  document.body.classList.remove('modal-open');
  
  // –í—ã–∑—ã–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Ñ—É–Ω–∫—Ü–∏—é
  const billHistoryBtn = document.getElementById('billHistoryBtn');
  if (billHistoryBtn) {
    billHistoryBtn.click();
  }
};

// –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–µ—Ç–∞–ª–µ–π —Å—á–µ—Ç–∞
window.viewBillDetails = function(billId) {
  console.log('–ü—Ä–æ—Å–º–æ—Ç—Ä —Å—á–µ—Ç–∞:', billId);
  // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥–µ—Ç–∞–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä
};

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫ –ø—Ä–æ—Ñ–∏–ª—è
const profileTabs = document.querySelectorAll('.profile-tab');
const profileTabContents = document.querySelectorAll('.profile-tab-content');

profileTabs.forEach(tab => {
  tab.addEventListener('click', () => {
    const tabName = tab.getAttribute('data-profile-tab');
    
    // –£–±–∏—Ä–∞–µ–º active —É –≤—Å–µ—Ö –≤–∫–ª–∞–¥–æ–∫
    profileTabs.forEach(t => t.classList.remove('active'));
    profileTabContents.forEach(content => content.classList.remove('active'));
    
    // –î–æ–±–∞–≤–ª—è–µ–º active –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≤–∫–ª–∞–¥–∫–µ
    tab.classList.add('active');
    const targetContent = document.getElementById(`profile-${tabName}-tab`);
    if (targetContent) {
      targetContent.classList.add('active');
    }
  });
});

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º—ã –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è
const profileThemeToggle = document.getElementById('profileThemeToggle');
profileThemeToggle?.addEventListener('click', () => {
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã
  const mainThemeToggle = document.getElementById('themeToggle');
  if (mainThemeToggle) {
    mainThemeToggle.click();
  }
});

// –í—ã—Ö–æ–¥ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞ –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è
const profileLogoutBtn = document.getElementById('profileLogoutBtn');
profileLogoutBtn?.addEventListener('click', () => {
  if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏?')) {
    firebase.auth().signOut().then(() => {
      profileModal.style.display = 'none';
      document.body.classList.remove('modal-open');
      location.reload();
    });
  }
});

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
firebase.auth().onAuthStateChanged(async (user) => {
  const profileBtn = document.getElementById('profileBtn');
  const profileUserName = document.getElementById('profileUserName');
  const profileBonusPreview = document.getElementById('profileBonusPreview');
  const loginBtn = document.getElementById('loginBtn');
  const registerBtn = document.getElementById('registerBtn');
  
  if (user) {
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –ø—Ä–æ—Ñ–∏–ª—è
    if (profileBtn) profileBtn.style.display = 'flex';
    if (loginBtn) loginBtn.style.display = 'none';
    if (registerBtn) registerBtn.style.display = 'none';
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–º—è
    if (profileUserName) {
      profileUserName.textContent = user.displayName || '–ü—Ä–æ—Ñ–∏–ª—å';
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –±–æ–Ω—É—Å–æ–≤
    if (profileBonusPreview) {
      const balance = await getUserBonusBalance(user.uid);
      profileBonusPreview.textContent = `üíé ${balance}`;
    }
  } else {
    // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –ø—Ä–æ—Ñ–∏–ª—è
    if (profileBtn) profileBtn.style.display = 'none';
    if (loginBtn) loginBtn.style.display = 'inline-block';
    if (registerBtn) registerBtn.style.display = 'inline-block';
  }
});

console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –ø—Ä–æ—Ñ–∏–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');

