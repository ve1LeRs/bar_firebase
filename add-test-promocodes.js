// –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤ –≤ Firebase
// –ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Ñ–∞–π–ª –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

async function addTestPromocodes() {
  console.log('üéØ –ù–∞—á–∏–Ω–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤...');
  
  const testPromocodes = [
    {
      code: 'WELCOME10',
      discount: 10,
      description: '–°–∫–∏–¥–∫–∞ –¥–ª—è –Ω–æ–≤—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤',
      maxUses: 0,
      active: true,
      expiryDate: null
    },
    {
      code: 'HAPPY20',
      discount: 20,
      description: 'Happy Hour —Å–∫–∏–¥–∫–∞',
      maxUses: 50,
      active: true,
      expiryDate: new Date('2025-12-31')
    },
    {
      code: 'VIP30',
      discount: 30,
      description: 'VIP —Å–∫–∏–¥–∫–∞ –¥–ª—è –æ—Å–æ–±—ã—Ö –≥–æ—Å—Ç–µ–π',
      maxUses: 10,
      active: true,
      expiryDate: new Date('2025-12-31')
    },
    {
      code: 'SUMMER25',
      discount: 25,
      description: '–õ–µ—Ç–Ω—è—è —Å–∫–∏–¥–∫–∞',
      maxUses: 100,
      active: true,
      expiryDate: new Date('2025-08-31')
    },
    {
      code: 'FRIDAY15',
      discount: 15,
      description: '–ü—è—Ç–Ω–∏—á–Ω–∞—è —Å–∫–∏–¥–∫–∞',
      maxUses: 0,
      active: true,
      expiryDate: null
    }
  ];
  
  let successCount = 0;
  let errorCount = 0;
  
  for (const promo of testPromocodes) {
    try {
      const promoData = {
        code: promo.code,
        discount: promo.discount,
        description: promo.description,
        maxUses: promo.maxUses,
        usedCount: 0,
        active: promo.active,
        createdAt: firebase.firestore.FieldValue.serverTimestamp(),
        updatedAt: firebase.firestore.FieldValue.serverTimestamp()
      };
      
      if (promo.expiryDate) {
        promoData.expiryDate = firebase.firestore.Timestamp.fromDate(promo.expiryDate);
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π –ø—Ä–æ–º–æ–∫–æ–¥
      const existingPromo = await db.collection('promocodes').doc(promo.code).get();
      
      if (existingPromo.exists) {
        console.log(`‚ö†Ô∏è –ü—Ä–æ–º–æ–∫–æ–¥ ${promo.code} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º...`);
        continue;
      }
      
      await db.collection('promocodes').doc(promo.code).set(promoData);
      console.log(`‚úÖ –ü—Ä–æ–º–æ–∫–æ–¥ ${promo.code} —Å–æ–∑–¥–∞–Ω (—Å–∫–∏–¥–∫–∞ ${promo.discount}%)`);
      successCount++;
      
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞ ${promo.code}:`, error);
      errorCount++;
    }
  }
  
  console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
  console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ: ${successCount}`);
  console.log(`‚ùå –û—à–∏–±–æ–∫: ${errorCount}`);
  console.log(`üìù –í—Å–µ–≥–æ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤: ${testPromocodes.length}`);
  console.log('\nüéâ –ì–æ—Ç–æ–≤–æ! –ü—Ä–æ–º–æ–∫–æ–¥—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ Firebase.');
  console.log('\nüí° –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–æ–º–æ–∫–æ–¥—ã:');
  testPromocodes.forEach(promo => {
    console.log(`   - ${promo.code}: ${promo.discount}% —Å–∫–∏–¥–∫–∞ (${promo.description})`);
  });
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
addTestPromocodes();

