const fs = require('fs');

console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Railway Environment Variables');
console.log('==========================================');

// –ß–∏—Ç–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π service account key
let localServiceAccount;
try {
  localServiceAccount = require('./service-private-key.json');
  console.log('‚úÖ –õ–æ–∫–∞–ª—å–Ω—ã–π service account key –∑–∞–≥—Ä—É–∂–µ–Ω');
  console.log('üìä –õ–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:');
  console.log('   Project ID:', localServiceAccount.project_id);
  console.log('   Private Key ID:', localServiceAccount.private_key_id);
  console.log('   Client Email:', localServiceAccount.client_email);
} catch (error) {
  console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å service-private-key.json:', error.message);
  process.exit(1);
}

// –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª —Å –Ω–æ–≤—ã–º–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏
let newEnvVars;
try {
  const envContent = fs.readFileSync('./NEW_RAILWAY_ENV_VARS.txt', 'utf8');
  console.log('‚úÖ –§–∞–π–ª NEW_RAILWAY_ENV_VARS.txt –Ω–∞–π–¥–µ–Ω');
  
  // –ü–∞—Ä—Å–∏–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞
  const lines = envContent.split('\n');
  newEnvVars = {};
  
  lines.forEach(line => {
    if (line.includes('=') && !line.startsWith('#')) {
      const [key, ...valueParts] = line.split('=');
      const value = valueParts.join('=');
      newEnvVars[key.trim()] = value.trim();
    }
  });
  
  console.log('üìã –ù–æ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è Railway:');
  Object.entries(newEnvVars).forEach(([key, value]) => {
    const displayValue = key === 'FIREBASE_PRIVATE_KEY' ? 
      `${value.substring(0, 50)}...` : value;
    console.log(`   ${key}: ${displayValue}`);
  });
  
} catch (error) {
  console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å NEW_RAILWAY_ENV_VARS.txt:', error.message);
  process.exit(1);
}

console.log('\nüö® –ü–†–û–ë–õ–ï–ú–ê –û–ë–ù–ê–†–£–ñ–ï–ù–ê!');
console.log('========================');
console.log('Railway –≤—Å–µ –µ—â–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å—Ç–∞—Ä—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è!');
console.log('–ù—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ Railway Dashboard.');

console.log('\nüìã –ò–ù–°–¢–†–£–ö–¶–ò–ò –î–õ–Ø –û–ë–ù–û–í–õ–ï–ù–ò–Ø RAILWAY:');
console.log('=====================================');
console.log('1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ Railway Dashboard');
console.log('2. –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Å–µ—Ä–≤–∏—Å');
console.log('3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –≤–∫–ª–∞–¥–∫—É "Variables"');
console.log('4. –£–î–ê–õ–ò–¢–ï –≤—Å–µ —Å—Ç–∞—Ä—ã–µ Firebase –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:');
console.log('   - FIREBASE_PRIVATE_KEY_ID');
console.log('   - FIREBASE_PRIVATE_KEY');
console.log('   - FIREBASE_CLIENT_EMAIL');
console.log('   - FIREBASE_CLIENT_ID');
console.log('   - FIREBASE_CLIENT_X509_CERT_URL');
console.log('5. –î–û–ë–ê–í–¨–¢–ï –Ω–æ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:');

console.log('\nüìù –°–ö–û–ü–ò–†–£–ô–¢–ï –≠–¢–ò –ü–ï–†–ï–ú–ï–ù–ù–´–ï –í RAILWAY:');
console.log('=======================================');
Object.entries(newEnvVars).forEach(([key, value]) => {
  console.log(`${key}=${value}`);
});

console.log('\n‚ö†Ô∏è  –í–ê–ñ–ù–û:');
console.log('==========');
console.log('1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ FIREBASE_PRIVATE_KEY –∏–º–µ–µ—Ç –∫–∞–≤—ã—á–∫–∏');
console.log('2. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ');
console.log('3. –î–æ–∂–¥–∏—Ç–µ—Å—å –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ Railway (1-2 –º–∏–Ω—É—Ç—ã)');
console.log('4. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ: https://your-app.railway.app/test-firebase');

console.log('\nüîç –ü–†–û–í–ï–†–ö–ê:');
console.log('============');
console.log('–ü–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ Railway:');
console.log('- Railway –¥–æ–ª–∂–µ–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Project ID:', localServiceAccount.project_id);
console.log('- Private Key ID –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å:', localServiceAccount.private_key_id);
console.log('- Client Email –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å:', localServiceAccount.client_email);

console.log('\n‚úÖ –ü–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Railway –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö Firebase –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å!');
