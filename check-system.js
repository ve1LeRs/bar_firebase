#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã Asafiev Bar
 */

const https = require('https');

const WEBHOOK_URL = 'https://web-production-72014.up.railway.app';
const TELEGRAM_BOT_TOKEN = '8326139522:AAG2fwHYd1vRPx0cUXt4ATaFYTNxmzInWJo';

console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã Asafiev Bar');
console.log('=' .repeat(50));

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è HTTP –∑–∞–ø—Ä–æ—Å–æ–≤
function makeRequest(url) {
  return new Promise((resolve, reject) => {
    https.get(url, (res) => {
      let data = '';
      res.on('data', (chunk) => data += chunk);
      res.on('end', () => {
        try {
          resolve({ status: res.statusCode, data: JSON.parse(data) });
        } catch (e) {
          resolve({ status: res.statusCode, data: data });
        }
      });
    }).on('error', reject);
  });
}

async function checkSystem() {
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ health endpoint
    console.log('\n1. üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook —Å–µ—Ä–≤–µ—Ä–∞...');
    const healthResponse = await makeRequest(`${WEBHOOK_URL}/health`);
    
    if (healthResponse.status === 200) {
      console.log('   ‚úÖ Webhook —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç');
      console.log(`   üìä –°—Ç–∞—Ç—É—Å: ${healthResponse.data.status}`);
      console.log(`   üïí –í—Ä–µ–º—è: ${healthResponse.data.timestamp}`);
    } else {
      console.log('   ‚ùå Webhook —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
      console.log(`   üìä –°—Ç–∞—Ç—É—Å: ${healthResponse.status}`);
    }

    // 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ Firebase –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    console.log('\n2. üî• –ü—Ä–æ–≤–µ—Ä–∫–∞ Firebase –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...');
    const firebaseResponse = await makeRequest(`${WEBHOOK_URL}/test-firebase`);
    
    if (firebaseResponse.status === 200 && firebaseResponse.data.success) {
      console.log('   ‚úÖ Firebase –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç');
      console.log(`   üìä –°—Ç–∞—Ç—É—Å: ${firebaseResponse.data.message}`);
    } else {
      console.log('   ‚ùå Firebase –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç');
      console.log(`   üìä –°—Ç–∞—Ç—É—Å: ${firebaseResponse.status}`);
      if (firebaseResponse.data.error) {
        console.log(`   üö® –û—à–∏–±–∫–∞: ${firebaseResponse.data.error}`);
      }
    }

    // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram webhook
    console.log('\n3. üì± –ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram webhook...');
    const webhookResponse = await makeRequest(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/getWebhookInfo`);
    
    if (webhookResponse.status === 200 && webhookResponse.data.ok) {
      const webhookInfo = webhookResponse.data.result;
      if (webhookInfo.url && webhookInfo.url.length > 0) {
        console.log('   ‚úÖ Telegram webhook –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
        console.log(`   üîó URL: ${webhookInfo.url}`);
        console.log(`   üìä –û—à–∏–±–æ–∫: ${webhookInfo.pending_update_count || 0}`);
        if (webhookInfo.last_error_message) {
          console.log(`   ‚ö†Ô∏è  –ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞: ${webhookInfo.last_error_message}`);
        }
      } else {
        console.log('   ‚ùå Telegram webhook –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
      }
    } else {
      console.log('   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ webhook');
    }

    // 4. –û–±—â–∏–π —Å—Ç–∞—Ç—É—Å
    console.log('\nüìã –û–±—â–∏–π —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã:');
    console.log('=' .repeat(50));
    
    const serverOk = healthResponse.status === 200;
    const firebaseOk = firebaseResponse.status === 200 && firebaseResponse.data.success;
    const webhookOk = webhookResponse.status === 200 && webhookResponse.data.ok && webhookResponse.data.result.url;
    
    if (serverOk && firebaseOk && webhookOk) {
      console.log('üéâ –í—Å–µ —Å–∏—Å—Ç–µ–º—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!');
      console.log('‚úÖ –ö–Ω–æ–ø–∫–∏ –≤ Telegram –¥–æ–ª–∂–Ω—ã —Ä–∞–±–æ—Ç–∞—Ç—å');
      console.log('‚úÖ –°—Ç–∞—Ç—É—Å—ã –∑–∞–∫–∞–∑–æ–≤ –¥–æ–ª–∂–Ω—ã –æ–±–Ω–æ–≤–ª—è—Ç—å—Å—è');
    } else {
      console.log('‚ö†Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã:');
      if (!serverOk) console.log('   ‚ùå Webhook —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
      if (!firebaseOk) console.log('   ‚ùå Firebase –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç');
      if (!webhookOk) console.log('   ‚ùå Telegram webhook –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
      
      console.log('\nüîß –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
      if (!firebaseOk) {
        console.log('   1. –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è Firebase –≤ Railway');
        console.log('   2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: node fix-railway-env.js');
      }
      if (!webhookOk) {
        console.log('   3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ webhook –≤ Telegram');
        console.log('   4. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É "–ù–∞—Å—Ç—Ä–æ–∏—Ç—å Webhook" –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏');
      }
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã:', error.message);
  }
}

checkSystem();
