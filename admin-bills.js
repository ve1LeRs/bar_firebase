// ============================================
// –£–ü–†–ê–í–õ–ï–ù–ò–ï –°–ß–ï–¢–ê–ú–ò (–ê–î–ú–ò–ù)
// ============================================

// –¢–µ–∫—É—â–∏–π —Ñ–∏–ª—å—Ç—Ä —Å—á–µ—Ç–æ–≤
let currentBillFilter = 'open';

// –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ —Å—á–µ—Ç–æ–≤
async function loadAdminBills(filter = 'open') {
  try {
    currentBillFilter = filter;
    
    let query = db.collection('bills');
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä
    if (filter === 'open') {
      query = query.where('status', '==', 'open');
    } else if (filter === 'paid') {
      query = query.where('status', '==', 'paid');
    }
    // –î–ª—è 'all' –Ω–µ –¥–æ–±–∞–≤–ª—è–µ–º —Ñ–∏–ª—å—Ç—Ä
    
    const billsSnapshot = await query.get();
    
    const adminBillsList = document.getElementById('adminBillsList');
    if (!adminBillsList) return;
    
    if (billsSnapshot.empty) {
      adminBillsList.innerHTML = '<p style="text-align: center; color: #999;">–°—á–µ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</p>';
      updateBillsStatistics([], filter);
      return;
    }
    
    const bills = [];
    billsSnapshot.forEach(doc => {
      bills.push({
        id: doc.id,
        ...doc.data()
      });
    });
    
    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –¥–∞—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è (–Ω–æ–≤—ã–µ –ø–µ—Ä–≤—ã–º–∏)
    bills.sort((a, b) => {
      const dateA = a.createdAt?.toDate() || new Date(0);
      const dateB = b.createdAt?.toDate() || new Date(0);
      return dateB - dateA;
    });
    
    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å—á–µ—Ç–∞
    adminBillsList.innerHTML = '';
    
    for (const bill of bills) {
      const billCard = await createBillCard(bill);
      adminBillsList.appendChild(billCard);
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    updateBillsStatistics(bills, filter);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—á–µ—Ç–æ–≤:', error);
  }
}

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ —Å—á–µ—Ç–∞
async function createBillCard(bill) {
  const card = document.createElement('div');
  card.className = 'admin-bill-card';
  
  const createdDate = bill.createdAt ? bill.createdAt.toDate().toLocaleString('ru-RU') : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
  const paidDate = bill.paidAt ? bill.paidAt.toDate().toLocaleString('ru-RU') : null;
  const itemsCount = bill.items ? bill.items.length : 0;
  const totalAmount = bill.totalAmount || 0;
  const userName = bill.userName || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π';
  const status = bill.status || 'open';
  
  // –ü–æ–ª—É—á–∞–µ–º –∫—Ä–∞—Ç–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–∑–∏—Ü–∏—è—Ö
  let itemsPreview = '';
  if (bill.items && bill.items.length > 0) {
    const preview = bill.items.slice(0, 3).map(item => item.cocktailName || item.name).join(', ');
    itemsPreview = bill.items.length > 3 ? `${preview}...` : preview;
  }
  
  const statusBadge = status === 'paid' 
    ? '<span class="bill-status-badge paid"><i class="fas fa-check-circle"></i> –û–ø–ª–∞—á–µ–Ω</span>'
    : '<span class="bill-status-badge open"><i class="fas fa-clock"></i> –û—Ç–∫—Ä—ã—Ç</span>';
  
  const paymentInfo = bill.paymentMethod 
    ? `<div class="bill-payment-info"><i class="fas fa-credit-card"></i> ${bill.paymentMethod}</div>`
    : '';
  
  card.innerHTML = `
    <div class="admin-bill-header">
      <div class="bill-user-info">
        <i class="fas fa-user-circle"></i>
        <div>
          <div class="bill-user-name">${userName}</div>
          <div class="bill-date">${createdDate}</div>
        </div>
      </div>
      ${statusBadge}
    </div>
    
    <div class="admin-bill-content">
      <div class="bill-items-preview">
        <i class="fas fa-cocktail"></i>
        <span><strong>${itemsCount}</strong> ${itemsCount === 1 ? '–ø–æ–∑–∏—Ü–∏—è' : '–ø–æ–∑–∏—Ü–∏–π'}: ${itemsPreview}</span>
      </div>
      
      <div class="bill-amount-section">
        <div class="bill-amount-label">–°—É–º–º–∞:</div>
        <div class="bill-amount-value">${totalAmount} ‚ÇΩ</div>
      </div>
      
      ${bill.discount && bill.discount > 0 ? `
        <div class="bill-discount-info">
          <i class="fas fa-tag"></i> –°–∫–∏–¥–∫–∞ ${bill.discount}%
          ${bill.promoCode ? `(${bill.promoCode})` : ''}
        </div>
      ` : ''}
      
      ${paymentInfo}
      ${paidDate ? `<div class="bill-paid-date"><i class="fas fa-calendar-check"></i> –û–ø–ª–∞—á–µ–Ω: ${paidDate}</div>` : ''}
    </div>
    
    <div class="admin-bill-actions">
      ${status === 'open' ? `
        <button class="admin-btn success" onclick="markBillAsPaid('${bill.id}')">
          <i class="fas fa-check"></i> –û—Ç–º–µ—Ç–∏—Ç—å –æ–ø–ª–∞—á–µ–Ω–Ω—ã–º
        </button>
        <button class="admin-btn primary" onclick="viewBillDetails('${bill.id}')">
          <i class="fas fa-eye"></i> –î–µ—Ç–∞–ª–∏
        </button>
      ` : `
        <button class="admin-btn primary" onclick="viewBillDetails('${bill.id}')">
          <i class="fas fa-eye"></i> –î–µ—Ç–∞–ª–∏
        </button>
        <button class="admin-btn warning" onclick="reopenBill('${bill.id}')">
          <i class="fas fa-undo"></i> –û—Ç–∫—Ä—ã—Ç—å –∑–∞–Ω–æ–≤–æ
        </button>
      `}
      <button class="admin-btn danger" onclick="deleteBill('${bill.id}')">
        <i class="fas fa-trash"></i> –£–¥–∞–ª–∏—Ç—å
      </button>
    </div>
  `;
  
  return card;
}

// –û—Ç–º–µ—Ç–∏—Ç—å —Å—á–µ—Ç –∫–∞–∫ –æ–ø–ª–∞—á–µ–Ω–Ω—ã–π
window.markBillAsPaid = async function(billId) {
  try {
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å—á–µ—Ç–∞
    const billDoc = await db.collection('bills').doc(billId).get();
    
    if (!billDoc.exists) {
      showError('–°—á–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }
    
    const billData = billDoc.data();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã
    showPaymentConfirmModal(billId, billData);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
    showError('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Å—á–µ—Ç–∞');
  }
};

// –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã
function showPaymentConfirmModal(billId, billData) {
  const modal = document.getElementById('paymentConfirmModal');
  const paymentBillInfo = document.getElementById('paymentBillInfo');
  
  if (!modal || !paymentBillInfo) return;
  
  const itemsCount = billData.items ? billData.items.length : 0;
  const totalAmount = billData.totalAmount || 0;
  const userName = billData.userName || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π';
  
  // –§–æ—Ä–º–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—á–µ—Ç–µ
  paymentBillInfo.innerHTML = `
    <div class="payment-bill-info-row">
      <span><i class="fas fa-user"></i> –ö–ª–∏–µ–Ω—Ç:</span>
      <strong>${userName}</strong>
    </div>
    <div class="payment-bill-info-row">
      <span><i class="fas fa-cocktail"></i> –ü–æ–∑–∏—Ü–∏–π:</span>
      <strong>${itemsCount}</strong>
    </div>
    ${billData.discount && billData.discount > 0 ? `
      <div class="payment-bill-info-row">
        <span><i class="fas fa-tag"></i> –°–∫–∏–¥–∫–∞:</span>
        <strong>${billData.discount}% ${billData.promoCode ? `(${billData.promoCode})` : ''}</strong>
      </div>
    ` : ''}
    <div class="payment-bill-info-row">
      <span>–ò—Ç–æ–≥–æ –∫ –æ–ø–ª–∞—Ç–µ:</span>
      <strong>${totalAmount} ‚ÇΩ</strong>
    </div>
  `;
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
  modal.style.display = 'block';
  document.body.classList.add('modal-open');
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
  const confirmBtn = document.getElementById('confirmPaymentBtn');
  
  // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
  const newConfirmBtn = confirmBtn.cloneNode(true);
  confirmBtn.parentNode.replaceChild(newConfirmBtn, confirmBtn);
  
  newConfirmBtn.addEventListener('click', async () => {
    const selectedMethod = document.querySelector('input[name="paymentMethod"]:checked');
    
    if (!selectedMethod) {
      showError('–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã');
      return;
    }
    
    const paymentMethod = selectedMethod.value;
    
    try {
      // –û—Ç–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É
      newConfirmBtn.disabled = true;
      newConfirmBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> –û–±—Ä–∞–±–æ—Ç–∫–∞...';
      
      await db.collection('bills').doc(billId).update({
        status: 'paid',
        paidAt: firebase.firestore.FieldValue.serverTimestamp(),
        paymentMethod: paymentMethod,
        updatedAt: firebase.firestore.FieldValue.serverTimestamp()
      });
      
      showSuccess(`‚úÖ –°—á–µ—Ç –æ—Ç–º–µ—á–µ–Ω –∫–∞–∫ –æ–ø–ª–∞—á–µ–Ω–Ω—ã–π (${paymentMethod})`);
      
      // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
      closePaymentConfirmModal();
      
      // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫
      loadAdminBills(currentBillFilter);
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–º–µ—Ç–∫–∏ —Å—á–µ—Ç–∞:', error);
      showError('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–º–µ—Ç–∏—Ç—å —Å—á–µ—Ç');
      
      // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
      newConfirmBtn.disabled = false;
      newConfirmBtn.innerHTML = '<i class="fas fa-check"></i> –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–ø–ª–∞—Ç—É';
    }
  });
}

// –ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã
window.closePaymentConfirmModal = function() {
  const modal = document.getElementById('paymentConfirmModal');
  if (modal) {
    modal.style.display = 'none';
    document.body.classList.remove('modal-open');
  }
  
  // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–±–æ—Ä –Ω–∞ "–ù–∞–ª–∏—á–Ω—ã–µ"
  const cashRadio = document.querySelector('input[name="paymentMethod"][value="–ù–∞–ª–∏—á–Ω—ã–µ"]');
  if (cashRadio) {
    cashRadio.checked = true;
  }
};

// –û—Ç–∫—Ä—ã—Ç—å —Å—á–µ—Ç –∑–∞–Ω–æ–≤–æ
window.reopenBill = async function(billId) {
  showConfirmAction(
    '–û—Ç–∫—Ä—ã—Ç—å —Å—á–µ—Ç –∑–∞–Ω–æ–≤–æ?',
    '–°—á–µ—Ç —Å—Ç–∞–Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã–º –∏ –≤–µ—Ä–Ω—ë—Ç—Å—è –≤ —Å–ø–∏—Å–æ–∫ –æ—Ç–∫—Ä—ã—Ç—ã—Ö —Å—á–µ—Ç–æ–≤.',
    'success',
    'üîÑ',
    async () => {
      try {
        await db.collection('bills').doc(billId).update({
          status: 'open',
          paidAt: null,
          paymentMethod: null,
          updatedAt: firebase.firestore.FieldValue.serverTimestamp()
        });
        
        showSuccess('‚úÖ –°—á–µ—Ç –æ—Ç–∫—Ä—ã—Ç –∑–∞–Ω–æ–≤–æ');
        loadAdminBills(currentBillFilter);
        
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Å—á–µ—Ç–∞:', error);
        showError('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å —Å—á–µ—Ç');
      }
    }
  );
};

// –£–¥–∞–ª–∏—Ç—å —Å—á–µ—Ç
window.deleteBill = async function(billId) {
  showConfirmAction(
    '–£–¥–∞–ª–∏—Ç—å —Å—á–µ—Ç?',
    '–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç —Å—á–µ—Ç? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ.',
    'danger',
    'üóëÔ∏è',
    async () => {
      try {
        await db.collection('bills').doc(billId).delete();
        
        showSuccess('‚úÖ –°—á–µ—Ç —É–¥–∞–ª–µ–Ω');
        loadAdminBills(currentBillFilter);
        
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å—á–µ—Ç–∞:', error);
        showError('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å—á–µ—Ç');
      }
    }
  );
};

// –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
function showConfirmAction(title, message, type = 'warning', icon = '‚ö†Ô∏è', onConfirm) {
  const modal = document.getElementById('confirmActionModal');
  const header = document.getElementById('confirmActionHeader');
  const iconEl = document.getElementById('confirmIcon');
  const titleEl = document.getElementById('confirmActionTitle');
  const messageEl = document.getElementById('confirmActionMessage');
  const confirmBtn = document.getElementById('confirmActionBtn');
  
  if (!modal) return;
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∏–ø (–¥–ª—è —Ü–≤–µ—Ç–æ–≤)
  header.className = `confirm-action-header ${type}`;
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
  if (iconEl) iconEl.textContent = icon;
  if (titleEl) titleEl.textContent = title;
  if (messageEl) messageEl.textContent = message;
  
  // –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
  if (confirmBtn) {
    confirmBtn.className = `confirm-btn confirm ${type}`;
  }
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
  modal.style.display = 'block';
  document.body.classList.add('modal-open');
  
  // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
  const newConfirmBtn = confirmBtn.cloneNode(true);
  confirmBtn.parentNode.replaceChild(newConfirmBtn, confirmBtn);
  
  // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
  newConfirmBtn.addEventListener('click', async () => {
    closeConfirmActionModal();
    if (onConfirm) {
      await onConfirm();
    }
  });
}

// –ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
window.closeConfirmActionModal = function() {
  const modal = document.getElementById('confirmActionModal');
  if (modal) {
    modal.style.display = 'none';
    document.body.classList.remove('modal-open');
  }
};

// –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–µ—Ç–∞–ª–µ–π —Å—á–µ—Ç–∞
window.viewBillDetails = async function(billId) {
  try {
    const billDoc = await db.collection('bills').doc(billId).get();
    
    if (!billDoc.exists) {
      showError('–°—á–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }
    
    const billData = billDoc.data();
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–∫–∞–∑–∞ —Å—á–µ—Ç–∞
    // –ò–ª–∏ —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤—É—é –º–æ–¥–∞–ª–∫—É –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
    const items = billData.items || [];
    
    let detailsHTML = `
      <div class="bill-details-modal-content">
        <h3><i class="fas fa-receipt"></i> –°—á–µ—Ç #${billId.substring(0, 8)}</h3>
        
        <div class="bill-detail-section">
          <strong>–ö–ª–∏–µ–Ω—Ç:</strong> ${billData.userName || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π'}
        </div>
        <div class="bill-detail-section">
          <strong>–°—Ç–∞—Ç—É—Å:</strong> ${billData.status === 'paid' ? '‚úÖ –û–ø–ª–∞—á–µ–Ω' : '‚è≥ –û—Ç–∫—Ä—ã—Ç'}
        </div>
        <div class="bill-detail-section">
          <strong>–°–æ–∑–¥–∞–Ω:</strong> ${billData.createdAt ? billData.createdAt.toDate().toLocaleString('ru-RU') : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}
        </div>
        ${billData.paidAt ? `
          <div class="bill-detail-section">
            <strong>–û–ø–ª–∞—á–µ–Ω:</strong> ${billData.paidAt.toDate().toLocaleString('ru-RU')}
          </div>
        ` : ''}
        ${billData.paymentMethod ? `
          <div class="bill-detail-section">
            <strong>–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:</strong> ${billData.paymentMethod}
          </div>
        ` : ''}
        
        <h4>–ü–æ–∑–∏—Ü–∏–∏ –≤ —Å—á–µ—Ç–µ:</h4>
        <div class="bill-details-items">
          ${items.map(item => `
            <div class="bill-detail-item">
              <span>${item.cocktailName || item.name}</span>
              <span>${item.finalPrice || item.price || 0} ‚ÇΩ</span>
            </div>
          `).join('')}
        </div>
        
        ${billData.discount && billData.discount > 0 ? `
          <div class="bill-detail-section highlight">
            <strong>–°–∫–∏–¥–∫–∞:</strong> ${billData.discount}% ${billData.promoCode ? `(${billData.promoCode})` : ''}
          </div>
        ` : ''}
        
        <div class="bill-detail-total">
          <strong>–ò—Ç–æ–≥–æ:</strong>
          <strong>${billData.totalAmount || 0} ‚ÇΩ</strong>
        </div>
      </div>
    `;
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤ alert (–º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω—É—é –º–æ–¥–∞–ª–∫—É)
    const tempDiv = document.createElement('div');
    tempDiv.innerHTML = detailsHTML;
    
    // –°–æ–∑–¥–∞—ë–º –ø—Ä–æ—Å—Ç–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    const existingDetailsModal = document.getElementById('billDetailsModal');
    if (existingDetailsModal) {
      existingDetailsModal.remove();
    }
    
    const modal = document.createElement('div');
    modal.id = 'billDetailsModal';
    modal.className = 'modal';
    modal.style.display = 'block';
    modal.innerHTML = `
      <div class="modal-content" style="max-width: 600px;">
        <span class="close" onclick="this.closest('.modal').remove()">&times;</span>
        ${detailsHTML}
      </div>
    `;
    
    document.body.appendChild(modal);
    document.body.classList.add('modal-open');
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –º–æ–¥–∞–ª–∫–∏
    modal.addEventListener('click', (e) => {
      if (e.target === modal) {
        modal.remove();
        document.body.classList.remove('modal-open');
      }
    });
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª–µ–π:', error);
    showError('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–µ—Ç–∞–ª–∏ —Å—á–µ—Ç–∞');
  }
};

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ —Å—á–µ—Ç–∞–º
async function updateBillsStatistics(bills, filter) {
  try {
    const openBillsCountEl = document.getElementById('openBillsCount');
    const paidBillsTodayEl = document.getElementById('paidBillsToday');
    const totalRevenueTodayEl = document.getElementById('totalRevenueToday');
    
    // –°—á–∏—Ç–∞–µ–º –æ—Ç–∫—Ä—ã—Ç—ã–µ —Å—á–µ—Ç–∞
    const allBillsSnapshot = await db.collection('bills')
      .where('status', '==', 'open')
      .get();
    
    if (openBillsCountEl) {
      openBillsCountEl.textContent = allBillsSnapshot.size;
    }
    
    // –°—á–∏—Ç–∞–µ–º –æ–ø–ª–∞—á–µ–Ω–Ω—ã–µ –∑–∞ —Å–µ–≥–æ–¥–Ω—è - —É–ø—Ä–æ—â—ë–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å
    const today = new Date();
    today.setHours(0, 0, 0, 0);
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –æ–ø–ª–∞—á–µ–Ω–Ω—ã–µ —Å—á–µ—Ç–∞ –∏ —Ñ–∏–ª—å—Ç—Ä—É–µ–º –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ
    const allPaidBillsSnapshot = await db.collection('bills')
      .where('status', '==', 'paid')
      .get();
    
    let paidCount = 0;
    let revenue = 0;
    
    allPaidBillsSnapshot.forEach(doc => {
      const billData = doc.data();
      if (billData.paidAt) {
        const paidDate = billData.paidAt.toDate();
        if (paidDate >= today) {
          paidCount++;
          revenue += billData.totalAmount || 0;
        }
      }
    });
    
    if (paidBillsTodayEl) {
      paidBillsTodayEl.textContent = paidCount;
    }
    
    if (totalRevenueTodayEl) {
      totalRevenueTodayEl.textContent = `${revenue} ‚ÇΩ`;
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
  }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤
const billFilterButtons = document.querySelectorAll('[data-bill-filter]');
billFilterButtons.forEach(btn => {
  btn.addEventListener('click', () => {
    const filter = btn.getAttribute('data-bill-filter');
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –∫–Ω–æ–ø–∫—É
    billFilterButtons.forEach(b => b.classList.remove('active'));
    btn.classList.add('active');
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—á–µ—Ç–∞ —Å –Ω–æ–≤—ã–º —Ñ–∏–ª—å—Ç—Ä–æ–º
    loadAdminBills(filter);
  });
});

// –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—á–µ—Ç–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –≤–∫–ª–∞–¥–∫–∏
const billsTab = document.querySelector('[data-tab="bills"]');
billsTab?.addEventListener('click', () => {
  loadAdminBills('open');
});

console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—á–µ—Ç–∞–º–∏ (–∞–¥–º–∏–Ω) –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');

